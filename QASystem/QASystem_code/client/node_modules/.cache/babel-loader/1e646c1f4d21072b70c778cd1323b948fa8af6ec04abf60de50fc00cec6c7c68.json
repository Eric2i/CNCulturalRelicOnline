{"ast":null,"code":"import { defineComponent, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, normalizeStyle } from 'vue';\nimport { alphaSliderProps } from '../props/alpha-slider.mjs';\nimport { useAlphaSlider, useAlphaSliderDOM } from '../composables/use-alpha-slider.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nconst COMPONENT_NAME = \"ElColorAlphaSlider\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: alphaSliderProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const {\n      bar,\n      thumb,\n      handleDrag,\n      handleClick\n    } = useAlphaSlider(props);\n    const {\n      rootKls,\n      barKls,\n      barStyle,\n      thumbKls,\n      thumbStyle,\n      update\n    } = useAlphaSliderDOM(props, {\n      bar,\n      thumb,\n      handleDrag\n    });\n    expose({\n      update,\n      bar,\n      thumb\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass(unref(rootKls))\n      }, [createElementVNode(\"div\", {\n        ref_key: \"bar\",\n        ref: bar,\n        class: normalizeClass(unref(barKls)),\n        style: normalizeStyle(unref(barStyle)),\n        onClick: _cache[0] || (_cache[0] = (...args) => unref(handleClick) && unref(handleClick)(...args))\n      }, null, 6), createElementVNode(\"div\", {\n        ref_key: \"thumb\",\n        ref: thumb,\n        class: normalizeClass(unref(thumbKls)),\n        style: normalizeStyle(unref(thumbStyle))\n      }, null, 6)], 2);\n    };\n  }\n});\nvar AlphaSlider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/alpha-slider.vue\"]]);\nexport { AlphaSlider as default };","map":{"version":3,"names":["name","COMPONENT_NAME","bar","thumb","handleDrag","handleClick","useAlphaSlider","props","rootKls","barKls","barStyle","thumbKls","thumbStyle","update","useAlphaSliderDOM","expose"],"sources":["../../../../../../../packages/components/color-picker/src/components/alpha-slider.vue"],"sourcesContent":["<template>\n  <div :class=\"rootKls\">\n    <div ref=\"bar\" :class=\"barKls\" :style=\"barStyle\" @click=\"handleClick\" />\n    <div ref=\"thumb\" :class=\"thumbKls\" :style=\"thumbStyle\" />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { alphaSliderProps } from '../props/alpha-slider'\nimport {\n  useAlphaSlider,\n  useAlphaSliderDOM,\n} from '../composables/use-alpha-slider'\n\nconst COMPONENT_NAME = 'ElColorAlphaSlider'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(alphaSliderProps)\n\nconst { bar, thumb, handleDrag, handleClick } = useAlphaSlider(props)\n\nconst { rootKls, barKls, barStyle, thumbKls, thumbStyle, update } =\n  useAlphaSliderDOM(props, {\n    bar,\n    thumb,\n    handleDrag,\n  })\n\ndefineExpose({\n  /**\n   * @description update alpha slider manually\n   * @type {Function}\n   */\n  update,\n  /**\n   * @description bar element ref\n   * @type {HTMLElement}\n   */\n  bar,\n  /**\n   * @description thumb element ref\n   * @type {HTMLElement}\n   */\n  thumb,\n})\n</script>\n"],"mappings":";;;;;mCAgBc;EACZA,IAAM,EAAAC;AACR;;;;;;;;IAIA,MAAM;MAAEC,GAAK;MAAAC,KAAA;MAAOC,UAAY;MAAAC;IAAA,IAAgBC,cAAA,CAAeC,KAAK;IAE9D;MAAEC,OAAA;MAASC,MAAQ;MAAAC,QAAA;MAAUC,QAAA;MAAUC,UAAY;MAAAC;IAAA,IACvDC,iBAAA,CAAkBP,KAAO;MACvBL,GAAA;MACAC,KAAA;MACAC;IAAA,CACD;IAEUW,MAAA;MAKXF,MAAA;MAKAX,GAAA;MAKAC;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}