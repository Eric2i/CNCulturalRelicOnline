{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nconst ROOT_TREE_INJECTION_KEY = Symbol();\nconst EMPTY_NODE = {\n  key: -1,\n  level: -1,\n  data: {}\n};\nvar TreeOptionsEnum = /* @__PURE__ */(TreeOptionsEnum2 => {\n  TreeOptionsEnum2[\"KEY\"] = \"id\";\n  TreeOptionsEnum2[\"LABEL\"] = \"label\";\n  TreeOptionsEnum2[\"CHILDREN\"] = \"children\";\n  TreeOptionsEnum2[\"DISABLED\"] = \"disabled\";\n  return TreeOptionsEnum2;\n})(TreeOptionsEnum || {});\nvar SetOperationEnum = /* @__PURE__ */(SetOperationEnum2 => {\n  SetOperationEnum2[\"ADD\"] = \"add\";\n  SetOperationEnum2[\"DELETE\"] = \"delete\";\n  return SetOperationEnum2;\n})(SetOperationEnum || {});\nconst itemSize = {\n  type: Number,\n  default: 26\n};\nconst treeProps = buildProps({\n  data: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  emptyText: {\n    type: String\n  },\n  height: {\n    type: Number,\n    default: 200\n  },\n  props: {\n    type: definePropType(Object),\n    default: () => mutable({\n      children: \"children\" /* CHILDREN */,\n      label: \"label\" /* LABEL */,\n      disabled: \"disabled\" /* DISABLED */,\n      value: \"id\" /* KEY */\n    })\n  },\n\n  highlightCurrent: {\n    type: Boolean,\n    default: false\n  },\n  showCheckbox: {\n    type: Boolean,\n    default: false\n  },\n  defaultCheckedKeys: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  checkStrictly: {\n    type: Boolean,\n    default: false\n  },\n  defaultExpandedKeys: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  indent: {\n    type: Number,\n    default: 16\n  },\n  itemSize,\n  icon: {\n    type: iconPropType\n  },\n  expandOnClickNode: {\n    type: Boolean,\n    default: true\n  },\n  checkOnClickNode: {\n    type: Boolean,\n    default: false\n  },\n  currentNodeKey: {\n    type: definePropType([String, Number])\n  },\n  accordion: {\n    type: Boolean,\n    default: false\n  },\n  filterMethod: {\n    type: definePropType(Function)\n  },\n  perfMode: {\n    type: Boolean,\n    default: true\n  }\n});\nconst treeNodeProps = buildProps({\n  node: {\n    type: definePropType(Object),\n    default: () => mutable(EMPTY_NODE)\n  },\n  expanded: {\n    type: Boolean,\n    default: false\n  },\n  checked: {\n    type: Boolean,\n    default: false\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false\n  },\n  showCheckbox: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  current: {\n    type: Boolean,\n    default: false\n  },\n  hiddenExpandIcon: {\n    type: Boolean,\n    default: false\n  },\n  itemSize\n});\nconst treeNodeContentProps = buildProps({\n  node: {\n    type: definePropType(Object),\n    required: true\n  }\n});\nconst NODE_CLICK = \"node-click\";\nconst NODE_EXPAND = \"node-expand\";\nconst NODE_COLLAPSE = \"node-collapse\";\nconst CURRENT_CHANGE = \"current-change\";\nconst NODE_CHECK = \"check\";\nconst NODE_CHECK_CHANGE = \"check-change\";\nconst NODE_CONTEXTMENU = \"node-contextmenu\";\nconst treeEmits = {\n  [NODE_CLICK]: (data, node, e) => data && node && e,\n  [NODE_EXPAND]: (data, node) => data && node,\n  [NODE_COLLAPSE]: (data, node) => data && node,\n  [CURRENT_CHANGE]: (data, node) => data && node,\n  [NODE_CHECK]: (data, checkedInfo) => data && checkedInfo,\n  [NODE_CHECK_CHANGE]: (data, checked) => data && typeof checked === \"boolean\",\n  [NODE_CONTEXTMENU]: (event, data, node) => event && data && node\n};\nconst treeNodeEmits = {\n  click: (node, e) => !!(node && e),\n  toggle: node => !!node,\n  check: (node, checked) => node && typeof checked === \"boolean\"\n};\nexport { CURRENT_CHANGE, NODE_CHECK, NODE_CHECK_CHANGE, NODE_CLICK, NODE_COLLAPSE, NODE_CONTEXTMENU, NODE_EXPAND, ROOT_TREE_INJECTION_KEY, SetOperationEnum, TreeOptionsEnum, treeEmits, treeNodeContentProps, treeNodeEmits, treeNodeProps, treeProps };","map":{"version":3,"names":["ROOT_TREE_INJECTION_KEY","Symbol","EMPTY_NODE","key","level","data","TreeOptionsEnum","TreeOptionsEnum2","SetOperationEnum","SetOperationEnum2","itemSize","type","Number","default","treeProps","buildProps","definePropType","Array","mutable","emptyText","String","height","props","Object","children","label","disabled","value","highlightCurrent","Boolean","showCheckbox","defaultCheckedKeys","checkStrictly","defaultExpandedKeys","indent","icon","iconPropType","expandOnClickNode","checkOnClickNode","currentNodeKey","accordion","filterMethod","Function","perfMode","treeNodeProps","node","expanded","checked","indeterminate","current","hiddenExpandIcon","treeNodeContentProps","required","NODE_CLICK","NODE_EXPAND","NODE_COLLAPSE","CURRENT_CHANGE","NODE_CHECK","NODE_CHECK_CHANGE","NODE_CONTEXTMENU","treeEmits","e","checkedInfo","event","treeNodeEmits","click","toggle","check"],"sources":["../../../../../../packages/components/tree-v2/src/virtual-tree.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport type { CheckboxValueType } from '@element-plus/components/checkbox'\nimport type { InjectionKey } from 'vue'\nimport type { TreeNodeData } from '@element-plus/components/tree/src/tree.type'\nimport type {\n  CheckedInfo,\n  FilterMethod,\n  TreeContext,\n  TreeData,\n  TreeKey,\n  TreeNode,\n  TreeOptionProps,\n} from './types'\n\n// constants\nexport const ROOT_TREE_INJECTION_KEY: InjectionKey<TreeContext> = Symbol()\nconst EMPTY_NODE = {\n  key: -1,\n  level: -1,\n  data: {},\n} as const\n\n// enums\nexport enum TreeOptionsEnum {\n  KEY = 'id',\n  LABEL = 'label',\n  CHILDREN = 'children',\n  DISABLED = 'disabled',\n}\n\nexport const enum SetOperationEnum {\n  ADD = 'add',\n  DELETE = 'delete',\n}\n\nconst itemSize = {\n  type: Number,\n  default: 26,\n}\n\n// props\nexport const treeProps = buildProps({\n  data: {\n    type: definePropType<TreeData>(Array),\n    default: () => mutable([] as const),\n  },\n  emptyText: {\n    type: String,\n  },\n  height: {\n    type: Number,\n    default: 200,\n  },\n  props: {\n    type: definePropType<TreeOptionProps>(Object),\n    default: () =>\n      mutable({\n        children: TreeOptionsEnum.CHILDREN,\n        label: TreeOptionsEnum.LABEL,\n        disabled: TreeOptionsEnum.DISABLED,\n        value: TreeOptionsEnum.KEY,\n      } as const),\n  },\n  highlightCurrent: {\n    type: Boolean,\n    default: false,\n  },\n  showCheckbox: {\n    type: Boolean,\n    default: false,\n  },\n  defaultCheckedKeys: {\n    type: definePropType<TreeKey[]>(Array),\n    default: () => mutable([] as const),\n  },\n  // Whether checked state of a node not affects its father and\n  // child nodes when show-checkbox is true\n  checkStrictly: {\n    type: Boolean,\n    default: false,\n  },\n  defaultExpandedKeys: {\n    type: definePropType<TreeKey[]>(Array),\n    default: () => mutable([] as const),\n  },\n  indent: {\n    type: Number,\n    default: 16,\n  },\n  itemSize,\n  icon: {\n    type: iconPropType,\n  },\n  expandOnClickNode: {\n    type: Boolean,\n    default: true,\n  },\n  checkOnClickNode: {\n    type: Boolean,\n    default: false,\n  },\n  currentNodeKey: {\n    type: definePropType<TreeKey>([String, Number]),\n  },\n  // TODO need to optimization\n  accordion: {\n    type: Boolean,\n    default: false,\n  },\n  filterMethod: {\n    type: definePropType<FilterMethod>(Function),\n  },\n  // Performance mode will increase memory usage, but scrolling will be smoother\n  perfMode: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\n\nexport const treeNodeProps = buildProps({\n  node: {\n    type: definePropType<TreeNode>(Object),\n    default: () => mutable(EMPTY_NODE),\n  },\n  expanded: {\n    type: Boolean,\n    default: false,\n  },\n  checked: {\n    type: Boolean,\n    default: false,\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false,\n  },\n  showCheckbox: {\n    type: Boolean,\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  current: {\n    type: Boolean,\n    default: false,\n  },\n  hiddenExpandIcon: {\n    type: Boolean,\n    default: false,\n  },\n  itemSize,\n} as const)\n\nexport const treeNodeContentProps = buildProps({\n  node: {\n    type: definePropType<TreeNode>(Object),\n    required: true,\n  },\n} as const)\n\n// emits\nexport const NODE_CLICK = 'node-click'\nexport const NODE_EXPAND = 'node-expand'\nexport const NODE_COLLAPSE = 'node-collapse'\nexport const CURRENT_CHANGE = 'current-change'\nexport const NODE_CHECK = 'check'\nexport const NODE_CHECK_CHANGE = 'check-change'\nexport const NODE_CONTEXTMENU = 'node-contextmenu'\n\nexport const treeEmits = {\n  [NODE_CLICK]: (data: TreeNodeData, node: TreeNode, e: MouseEvent) =>\n    data && node && e,\n  [NODE_EXPAND]: (data: TreeNodeData, node: TreeNode) => data && node,\n  [NODE_COLLAPSE]: (data: TreeNodeData, node: TreeNode) => data && node,\n  [CURRENT_CHANGE]: (data: TreeNodeData, node: TreeNode) => data && node,\n  [NODE_CHECK]: (data: TreeNodeData, checkedInfo: CheckedInfo) =>\n    data && checkedInfo,\n  [NODE_CHECK_CHANGE]: (data: TreeNodeData, checked: boolean) =>\n    data && typeof checked === 'boolean',\n  [NODE_CONTEXTMENU]: (event: Event, data: TreeNodeData, node: TreeNode) =>\n    event && data && node,\n}\n\nexport const treeNodeEmits = {\n  click: (node: TreeNode, e: MouseEvent) => !!(node && e),\n  toggle: (node: TreeNode) => !!node,\n  check: (node: TreeNode, checked: CheckboxValueType) =>\n    node && typeof checked === 'boolean',\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}