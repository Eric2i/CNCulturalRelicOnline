{"ast":null,"code":"import { isNil } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { isArray } from '@vue/shared';\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nconst LEFT_CHECK_CHANGE_EVENT = \"left-check-change\";\nconst RIGHT_CHECK_CHANGE_EVENT = \"right-check-change\";\nconst transferProps = buildProps({\n  data: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  titles: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  buttonTexts: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  filterPlaceholder: String,\n  filterMethod: {\n    type: definePropType(Function)\n  },\n  leftDefaultChecked: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  rightDefaultChecked: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  renderContent: {\n    type: definePropType(Function)\n  },\n  modelValue: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  format: {\n    type: definePropType(Object),\n    default: () => ({})\n  },\n  filterable: Boolean,\n  props: {\n    type: definePropType(Object),\n    default: () => mutable({\n      label: \"label\",\n      key: \"key\",\n      disabled: \"disabled\"\n    })\n  },\n  targetOrder: {\n    type: String,\n    values: [\"original\", \"push\", \"unshift\"],\n    default: \"original\"\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  }\n});\nconst transferCheckedChangeFn = (value, movedKeys) => [value, movedKeys].every(isArray) || isArray(value) && isNil(movedKeys);\nconst transferEmits = {\n  [CHANGE_EVENT]: (value, direction, movedKeys) => [value, movedKeys].every(isArray) && [\"left\", \"right\"].includes(direction),\n  [UPDATE_MODEL_EVENT]: value => isArray(value),\n  [LEFT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn,\n  [RIGHT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn\n};\nexport { LEFT_CHECK_CHANGE_EVENT, RIGHT_CHECK_CHANGE_EVENT, transferCheckedChangeFn, transferEmits, transferProps };","map":{"version":3,"names":["LEFT_CHECK_CHANGE_EVENT","RIGHT_CHECK_CHANGE_EVENT","transferProps","buildProps","data","type","definePropType","Array","default","titles","buttonTexts","filterPlaceholder","String","filterMethod","Function","leftDefaultChecked","rightDefaultChecked","renderContent","modelValue","format","Object","filterable","Boolean","props","mutable","label","key","disabled","targetOrder","values","validateEvent","transferCheckedChangeFn","value","movedKeys","every","isArray","isNil","transferEmits","CHANGE_EVENT","direction","includes","UPDATE_MODEL_EVENT"],"sources":["../../../../../../packages/components/transfer/src/transfer.ts"],"sourcesContent":["import { isNil } from 'lodash-unified'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  mutable,\n} from '@element-plus/utils'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ExtractPropTypes, h as H, VNode } from 'vue'\nimport type Transfer from './transfer.vue'\n\nexport type TransferKey = string | number\nexport type TransferDirection = 'left' | 'right'\n\nexport type TransferDataItem = Record<string, any>\n\nexport type renderContent = (\n  h: typeof H,\n  option: TransferDataItem\n) => VNode | VNode[]\n\nexport interface TransferFormat {\n  noChecked?: string\n  hasChecked?: string\n}\n\nexport interface TransferPropsAlias {\n  label?: string\n  key?: string\n  disabled?: string\n}\n\nexport interface TransferCheckedState {\n  leftChecked: TransferKey[]\n  rightChecked: TransferKey[]\n}\n\nexport const LEFT_CHECK_CHANGE_EVENT = 'left-check-change'\nexport const RIGHT_CHECK_CHANGE_EVENT = 'right-check-change'\n\nexport const transferProps = buildProps({\n  data: {\n    type: definePropType<TransferDataItem[]>(Array),\n    default: () => [],\n  },\n  titles: {\n    type: definePropType<[string, string]>(Array),\n    default: () => [],\n  },\n  buttonTexts: {\n    type: definePropType<[string, string]>(Array),\n    default: () => [],\n  },\n  filterPlaceholder: String,\n  filterMethod: {\n    type: definePropType<(query: string, item: TransferDataItem) => boolean>(\n      Function\n    ),\n  },\n  leftDefaultChecked: {\n    type: definePropType<TransferKey[]>(Array),\n    default: () => [],\n  },\n  rightDefaultChecked: {\n    type: definePropType<TransferKey[]>(Array),\n    default: () => [],\n  },\n  renderContent: {\n    type: definePropType<renderContent>(Function),\n  },\n  modelValue: {\n    type: definePropType<TransferKey[]>(Array),\n    default: () => [],\n  },\n  format: {\n    type: definePropType<TransferFormat>(Object),\n    default: () => ({}),\n  },\n  filterable: Boolean,\n  props: {\n    type: definePropType<TransferPropsAlias>(Object),\n    default: () =>\n      mutable({\n        label: 'label',\n        key: 'key',\n        disabled: 'disabled',\n      } as const),\n  },\n  targetOrder: {\n    type: String,\n    values: ['original', 'push', 'unshift'],\n    default: 'original',\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type TransferProps = ExtractPropTypes<typeof transferProps>\n\nexport const transferCheckedChangeFn = (\n  value: TransferKey[],\n  movedKeys?: TransferKey[]\n) => [value, movedKeys].every(isArray) || (isArray(value) && isNil(movedKeys))\n\nexport const transferEmits = {\n  [CHANGE_EVENT]: (\n    value: TransferKey[],\n    direction: TransferDirection,\n    movedKeys: TransferKey[]\n  ) =>\n    [value, movedKeys].every(isArray) && ['left', 'right'].includes(direction),\n  [UPDATE_MODEL_EVENT]: (value: TransferKey[]) => isArray(value),\n  [LEFT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn,\n  [RIGHT_CHECK_CHANGE_EVENT]: transferCheckedChangeFn,\n}\nexport type TransferEmits = typeof transferEmits\n\nexport type TransferInstance = InstanceType<typeof Transfer>\n"],"mappings":";;;;;;;AAQY,MAACA,uBAAuB,GAAG;AAC3B,MAACC,wBAAwB,GAAG;AAC5B,MAACC,aAAa,GAAGC,UAAU,CAAC;EACtCC,IAAI,EAAE;IACJC,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDC,MAAM,EAAE;IACNJ,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDE,WAAW,EAAE;IACXL,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDG,iBAAiB,EAAEC,MAAM;EACzBC,YAAY,EAAE;IACZR,IAAI,EAAEC,cAAc,CAACQ,QAAQ;EACjC,CAAG;EACDC,kBAAkB,EAAE;IAClBV,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDQ,mBAAmB,EAAE;IACnBX,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDS,aAAa,EAAE;IACbZ,IAAI,EAAEC,cAAc,CAACQ,QAAQ;EACjC,CAAG;EACDI,UAAU,EAAE;IACVb,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDW,MAAM,EAAE;IACNd,IAAI,EAAEC,cAAc,CAACc,MAAM,CAAC;IAC5BZ,OAAO,EAAEA,CAAA,MAAO,EAAE;EACtB,CAAG;EACDa,UAAU,EAAEC,OAAO;EACnBC,KAAK,EAAE;IACLlB,IAAI,EAAEC,cAAc,CAACc,MAAM,CAAC;IAC5BZ,OAAO,EAAEA,CAAA,KAAMgB,OAAO,CAAC;MACrBC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,KAAK;MACVC,QAAQ,EAAE;IAChB,CAAK;EACL,CAAG;EACDC,WAAW,EAAE;IACXvB,IAAI,EAAEO,MAAM;IACZiB,MAAM,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC;IACvCrB,OAAO,EAAE;EACb,CAAG;EACDsB,aAAa,EAAE;IACbzB,IAAI,EAAEiB,OAAO;IACbd,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACuB,uBAAuB,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK,CAACD,KAAK,EAAEC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,CAAC,IAAIA,OAAO,CAACH,KAAK,CAAC,IAAII,KAAK,CAACH,SAAS;AACvH,MAACI,aAAa,GAAG;EAC3B,CAACC,YAAY,GAAG,CAACN,KAAK,EAAEO,SAAS,EAAEN,SAAS,KAAK,CAACD,KAAK,EAAEC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAACK,QAAQ,CAACD,SAAS,CAAC;EAC3H,CAACE,kBAAkB,GAAIT,KAAK,IAAKG,OAAO,CAACH,KAAK,CAAC;EAC/C,CAAChC,uBAAuB,GAAG+B,uBAAuB;EAClD,CAAC9B,wBAAwB,GAAG8B;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}