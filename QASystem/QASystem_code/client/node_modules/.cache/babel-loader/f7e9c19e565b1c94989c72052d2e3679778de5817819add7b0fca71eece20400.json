{"ast":null,"code":"import { NOOP } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport { ajaxUpload } from './ajax.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nconst uploadListTypes = [\"text\", \"picture\", \"picture-card\"];\nlet fileId = 1;\nconst genFileId = () => Date.now() + fileId++;\nconst uploadBaseProps = buildProps({\n  action: {\n    type: String,\n    default: \"#\"\n  },\n  headers: {\n    type: definePropType(Object)\n  },\n  method: {\n    type: String,\n    default: \"post\"\n  },\n  data: {\n    type: Object,\n    default: () => mutable({})\n  },\n  multiple: {\n    type: Boolean,\n    default: false\n  },\n  name: {\n    type: String,\n    default: \"file\"\n  },\n  drag: {\n    type: Boolean,\n    default: false\n  },\n  withCredentials: Boolean,\n  showFileList: {\n    type: Boolean,\n    default: true\n  },\n  accept: {\n    type: String,\n    default: \"\"\n  },\n  type: {\n    type: String,\n    default: \"select\"\n  },\n  fileList: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  autoUpload: {\n    type: Boolean,\n    default: true\n  },\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    default: \"text\"\n  },\n  httpRequest: {\n    type: definePropType(Function),\n    default: ajaxUpload\n  },\n  disabled: Boolean,\n  limit: Number\n});\nconst uploadProps = buildProps({\n  ...uploadBaseProps,\n  beforeUpload: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  beforeRemove: {\n    type: definePropType(Function)\n  },\n  onRemove: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  onChange: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  onPreview: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  onSuccess: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  onProgress: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  onError: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  onExceed: {\n    type: definePropType(Function),\n    default: NOOP\n  }\n});\nexport { genFileId, uploadBaseProps, uploadListTypes, uploadProps };","map":{"version":3,"names":["uploadListTypes","fileId","genFileId","Date","now","uploadBaseProps","buildProps","action","type","String","default","headers","definePropType","Object","method","data","mutable","multiple","Boolean","name","drag","withCredentials","showFileList","accept","fileList","Array","autoUpload","listType","values","httpRequest","Function","ajaxUpload","disabled","limit","Number","uploadProps","beforeUpload","NOOP","beforeRemove","onRemove","onChange","onPreview","onSuccess","onProgress","onError","onExceed"],"sources":["../../../../../../packages/components/upload/src/upload.ts"],"sourcesContent":["import { NOOP } from '@vue/shared'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { ajaxUpload } from './ajax'\n\nimport type { UploadAjaxError } from './ajax'\nimport type { Awaitable } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type Upload from './upload.vue'\n\nexport const uploadListTypes = ['text', 'picture', 'picture-card'] as const\n\nlet fileId = 1\nexport const genFileId = () => Date.now() + fileId++\n\nexport type UploadStatus = 'ready' | 'uploading' | 'success' | 'fail'\nexport interface UploadProgressEvent extends ProgressEvent {\n  percent: number\n}\n\nexport interface UploadRequestOptions {\n  action: string\n  method: string\n  data: Record<string, string | Blob | [string | Blob, string]>\n  filename: string\n  file: File\n  headers: Headers | Record<string, string | number | null | undefined>\n  onError: (evt: UploadAjaxError) => void\n  onProgress: (evt: UploadProgressEvent) => void\n  onSuccess: (response: any) => void\n  withCredentials: boolean\n}\nexport interface UploadFile {\n  name: string\n  percentage?: number\n  status: UploadStatus\n  size?: number\n  response?: unknown\n  uid: number\n  url?: string\n  raw?: UploadRawFile\n}\nexport type UploadUserFile = Omit<UploadFile, 'status' | 'uid'> &\n  Partial<Pick<UploadFile, 'status' | 'uid'>>\n\nexport type UploadFiles = UploadFile[]\nexport interface UploadRawFile extends File {\n  uid: number\n}\nexport type UploadRequestHandler = (\n  options: UploadRequestOptions\n) => XMLHttpRequest | Promise<unknown>\nexport interface UploadHooks {\n  beforeUpload: (\n    rawFile: UploadRawFile\n  ) => Awaitable<void | undefined | null | boolean | File | Blob>\n  beforeRemove: (\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => Awaitable<boolean>\n  onRemove: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onChange: (uploadFile: UploadFile, uploadFiles: UploadFiles) => void\n  onPreview: (uploadFile: UploadFile) => void\n  onSuccess: (\n    response: any,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onProgress: (\n    evt: UploadProgressEvent,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onError: (\n    error: Error,\n    uploadFile: UploadFile,\n    uploadFiles: UploadFiles\n  ) => void\n  onExceed: (files: File[], uploadFiles: UploadUserFile[]) => void\n}\n\nexport const uploadBaseProps = buildProps({\n  action: {\n    type: String,\n    default: '#',\n  },\n  headers: {\n    type: definePropType<Headers | Record<string, any>>(Object),\n  },\n  method: {\n    type: String,\n    default: 'post',\n  },\n  data: {\n    type: Object,\n    default: () => mutable({} as const),\n  },\n  multiple: {\n    type: Boolean,\n    default: false,\n  },\n  name: {\n    type: String,\n    default: 'file',\n  },\n  drag: {\n    type: Boolean,\n    default: false,\n  },\n  withCredentials: Boolean,\n  showFileList: {\n    type: Boolean,\n    default: true,\n  },\n  accept: {\n    type: String,\n    default: '',\n  },\n  type: {\n    type: String,\n    default: 'select',\n  },\n  fileList: {\n    type: definePropType<UploadUserFile[]>(Array),\n    default: () => mutable([] as const),\n  },\n  autoUpload: {\n    type: Boolean,\n    default: true,\n  },\n  listType: {\n    type: String,\n    values: uploadListTypes,\n    default: 'text',\n  },\n  httpRequest: {\n    type: definePropType<UploadRequestHandler>(Function),\n    default: ajaxUpload,\n  },\n  disabled: Boolean,\n  limit: Number,\n} as const)\n\nexport const uploadProps = buildProps({\n  ...uploadBaseProps,\n  beforeUpload: {\n    type: definePropType<UploadHooks['beforeUpload']>(Function),\n    default: NOOP,\n  },\n  beforeRemove: {\n    type: definePropType<UploadHooks['beforeRemove']>(Function),\n  },\n  onRemove: {\n    type: definePropType<UploadHooks['onRemove']>(Function),\n    default: NOOP,\n  },\n  onChange: {\n    type: definePropType<UploadHooks['onChange']>(Function),\n    default: NOOP,\n  },\n  onPreview: {\n    type: definePropType<UploadHooks['onPreview']>(Function),\n    default: NOOP,\n  },\n  onSuccess: {\n    type: definePropType<UploadHooks['onSuccess']>(Function),\n    default: NOOP,\n  },\n  onProgress: {\n    type: definePropType<UploadHooks['onProgress']>(Function),\n    default: NOOP,\n  },\n  onError: {\n    type: definePropType<UploadHooks['onError']>(Function),\n    default: NOOP,\n  },\n  onExceed: {\n    type: definePropType<UploadHooks['onExceed']>(Function),\n    default: NOOP,\n  },\n} as const)\n\nexport type UploadProps = ExtractPropTypes<typeof uploadProps>\n\nexport type UploadInstance = InstanceType<typeof Upload>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}