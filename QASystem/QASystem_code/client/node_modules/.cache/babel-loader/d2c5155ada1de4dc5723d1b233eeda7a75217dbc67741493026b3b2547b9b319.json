{"ast":null,"code":"function useUtils(store) {\n  const setCurrentRow = row => {\n    store.commit(\"setCurrentRow\", row);\n  };\n  const getSelectionRows = () => {\n    return store.getSelectionRows();\n  };\n  const toggleRowSelection = (row, selected) => {\n    store.toggleRowSelection(row, selected, false);\n    store.updateAllSelected();\n  };\n  const clearSelection = () => {\n    store.clearSelection();\n  };\n  const clearFilter = columnKeys => {\n    store.clearFilter(columnKeys);\n  };\n  const toggleAllSelection = () => {\n    store.commit(\"toggleAllSelection\");\n  };\n  const toggleRowExpansion = (row, expanded) => {\n    store.toggleRowExpansionAdapter(row, expanded);\n  };\n  const clearSort = () => {\n    store.clearSort();\n  };\n  const sort = (prop, order) => {\n    store.commit(\"sort\", {\n      prop,\n      order\n    });\n  };\n  return {\n    setCurrentRow,\n    getSelectionRows,\n    toggleRowSelection,\n    clearSelection,\n    clearFilter,\n    toggleAllSelection,\n    toggleRowExpansion,\n    clearSort,\n    sort\n  };\n}\nexport { useUtils as default };","map":{"version":3,"names":["useUtils","store","setCurrentRow","row","commit","getSelectionRows","toggleRowSelection","selected","updateAllSelected","clearSelection","clearFilter","columnKeys","toggleAllSelection","toggleRowExpansion","expanded","toggleRowExpansionAdapter","clearSort","sort","prop","order"],"sources":["../../../../../../../packages/components/table/src/table/utils-helper.ts"],"sourcesContent":["// @ts-nocheck\nimport type { Store } from '../store'\n\nfunction useUtils<T>(store: Store<T>) {\n  const setCurrentRow = (row: T) => {\n    store.commit('setCurrentRow', row)\n  }\n  const getSelectionRows = () => {\n    return store.getSelectionRows()\n  }\n  const toggleRowSelection = (row: T, selected: boolean) => {\n    store.toggleRowSelection(row, selected, false)\n    store.updateAllSelected()\n  }\n  const clearSelection = () => {\n    store.clearSelection()\n  }\n  const clearFilter = (columnKeys: string[]) => {\n    store.clearFilter(columnKeys)\n  }\n  const toggleAllSelection = () => {\n    store.commit('toggleAllSelection')\n  }\n  const toggleRowExpansion = (row: T, expanded?: boolean) => {\n    store.toggleRowExpansionAdapter(row, expanded)\n  }\n  const clearSort = () => {\n    store.clearSort()\n  }\n  const sort = (prop: string, order: string) => {\n    store.commit('sort', { prop, order })\n  }\n\n  return {\n    setCurrentRow,\n    getSelectionRows,\n    toggleRowSelection,\n    clearSelection,\n    clearFilter,\n    toggleAllSelection,\n    toggleRowExpansion,\n    clearSort,\n    sort,\n  }\n}\n\nexport default useUtils\n"],"mappings":"AAAA,SAASA,QAAQA,CAACC,KAAK,EAAE;EACvB,MAAMC,aAAa,GAAIC,GAAG,IAAK;IAC7BF,KAAK,CAACG,MAAM,CAAC,eAAe,EAAED,GAAG,CAAC;EACtC,CAAG;EACD,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOJ,KAAK,CAACI,gBAAgB,EAAE;EACnC,CAAG;EACD,MAAMC,kBAAkB,GAAGA,CAACH,GAAG,EAAEI,QAAQ,KAAK;IAC5CN,KAAK,CAACK,kBAAkB,CAACH,GAAG,EAAEI,QAAQ,EAAE,KAAK,CAAC;IAC9CN,KAAK,CAACO,iBAAiB,EAAE;EAC7B,CAAG;EACD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BR,KAAK,CAACQ,cAAc,EAAE;EAC1B,CAAG;EACD,MAAMC,WAAW,GAAIC,UAAU,IAAK;IAClCV,KAAK,CAACS,WAAW,CAACC,UAAU,CAAC;EACjC,CAAG;EACD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BX,KAAK,CAACG,MAAM,CAAC,oBAAoB,CAAC;EACtC,CAAG;EACD,MAAMS,kBAAkB,GAAGA,CAACV,GAAG,EAAEW,QAAQ,KAAK;IAC5Cb,KAAK,CAACc,yBAAyB,CAACZ,GAAG,EAAEW,QAAQ,CAAC;EAClD,CAAG;EACD,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBf,KAAK,CAACe,SAAS,EAAE;EACrB,CAAG;EACD,MAAMC,IAAI,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC5BlB,KAAK,CAACG,MAAM,CAAC,MAAM,EAAE;MAAEc,IAAI;MAAEC;IAAK,CAAE,CAAC;EACzC,CAAG;EACD,OAAO;IACLjB,aAAa;IACbG,gBAAgB;IAChBC,kBAAkB;IAClBG,cAAc;IACdC,WAAW;IACXE,kBAAkB;IAClBC,kBAAkB;IAClBG,SAAS;IACTC;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}