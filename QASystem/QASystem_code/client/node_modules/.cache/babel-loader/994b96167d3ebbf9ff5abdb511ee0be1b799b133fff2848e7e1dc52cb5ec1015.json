{"ast":null,"code":"import { defineComponent, useSlots, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst __default__ = defineComponent({\n  name: \"ElContainer\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: {\n    direction: {\n      type: String\n    }\n  },\n  setup(__props) {\n    const props = __props;\n    const slots = useSlots();\n    const ns = useNamespace(\"container\");\n    const isVertical = computed(() => {\n      if (props.direction === \"vertical\") {\n        return true;\n      } else if (props.direction === \"horizontal\") {\n        return false;\n      }\n      if (slots && slots.default) {\n        const vNodes = slots.default();\n        return vNodes.some(vNode => {\n          const tag = vNode.type.name;\n          return tag === \"ElHeader\" || tag === \"ElFooter\";\n        });\n      } else {\n        return false;\n      }\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"section\", {\n        class: normalizeClass([unref(ns).b(), unref(ns).is(\"vertical\", unref(isVertical))])\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n});\nvar Container = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/container/src/container.vue\"]]);\nexport { Container as default };","map":{"version":3,"names":["name","slots","useSlots","ns","useNamespace","isVertical","computed","props","direction","default","vNodes","some","vNode","tag","type"],"sources":["../../../../../../packages/components/container/src/container.vue"],"sourcesContent":["<template>\n  <section :class=\"[ns.b(), ns.is('vertical', isVertical)]\">\n    <slot />\n  </section>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { Component, VNode } from 'vue'\n\ndefineOptions({\n  name: 'ElContainer',\n})\nconst props = defineProps({\n  /**\n   * @description layout direction for child elements\n   */\n  direction: {\n    type: String,\n  },\n})\nconst slots = useSlots()\n\nconst ns = useNamespace('container')\n\nconst isVertical = computed(() => {\n  if (props.direction === 'vertical') {\n    return true\n  } else if (props.direction === 'horizontal') {\n    return false\n  }\n  if (slots && slots.default) {\n    const vNodes: VNode[] = slots.default()\n    return vNodes.some((vNode) => {\n      const tag = (vNode.type as Component).name\n      return tag === 'ElHeader' || tag === 'ElFooter'\n    })\n  } else {\n    return false\n  }\n})\n</script>\n"],"mappings":";;;;mCAWc;EACZA,IAAM;AACR;;;;;;;;;;IASA,MAAMC,KAAA,GAAQC,QAAS;IAEjB,MAAAC,EAAA,GAAKC,YAAA,CAAa,WAAW;IAE7B,MAAAC,UAAA,GAAaC,QAAA,CAAS,MAAM;MAC5B,IAAAC,KAAA,CAAMC,SAAA,KAAc,UAAY;QAC3B;MAAA,CACT,UAAWD,KAAM,CAAAC,SAAA,KAAc,YAAc;QACpC;MAAA;MAEL,IAAAP,KAAA,IAASA,KAAA,CAAMQ,OAAS;QACpB,MAAAC,MAAA,GAAkBT,KAAA,CAAMQ,OAAQ;QAC/B,OAAAC,MAAA,CAAOC,IAAK,CAACC,KAAU;UACtB,MAAAC,GAAA,GAAOD,KAAA,CAAME,IAAmB,CAAAd,IAAA;UAC/B,OAAAa,GAAA,KAAQ,cAAcA,GAAQ;QAAA,CACtC;MAAA,CACI;QACE;MAAA;IACT,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}