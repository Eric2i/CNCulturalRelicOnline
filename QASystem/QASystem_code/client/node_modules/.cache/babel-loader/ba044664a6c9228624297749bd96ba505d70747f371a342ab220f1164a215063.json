{"ast":null,"code":"import { defineComponent, provide, reactive, toRef, ref, createVNode, mergeProps } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport advancedFormat from 'dayjs/plugin/advancedFormat.js';\nimport localeData from 'dayjs/plugin/localeData.js';\nimport weekOfYear from 'dayjs/plugin/weekOfYear.js';\nimport weekYear from 'dayjs/plugin/weekYear.js';\nimport dayOfYear from 'dayjs/plugin/dayOfYear.js';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter.js';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore.js';\nimport '../../../hooks/index.mjs';\nimport '../../time-picker/index.mjs';\nimport { ROOT_PICKER_INJECTION_KEY } from './constants.mjs';\nimport { datePickerProps } from './props/date-picker.mjs';\nimport { getPanel } from './panel-utils.mjs';\nimport { timePickerDefaultProps } from '../../time-picker/src/common/props.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { DEFAULT_FORMATS_DATEPICKER, DEFAULT_FORMATS_DATE } from '../../time-picker/src/constants.mjs';\nimport CommonPicker from '../../time-picker/src/common/picker.mjs';\ndayjs.extend(localeData);\ndayjs.extend(advancedFormat);\ndayjs.extend(customParseFormat);\ndayjs.extend(weekOfYear);\ndayjs.extend(weekYear);\ndayjs.extend(dayOfYear);\ndayjs.extend(isSameOrAfter);\ndayjs.extend(isSameOrBefore);\nvar DatePicker = defineComponent({\n  name: \"ElDatePicker\",\n  install: null,\n  props: {\n    ...timePickerDefaultProps,\n    ...datePickerProps\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, {\n    expose,\n    emit,\n    slots\n  }) {\n    const ns = useNamespace(\"picker-panel\");\n    provide(\"ElPopperOptions\", reactive(toRef(props, \"popperOptions\")));\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      slots,\n      pickerNs: ns\n    });\n    const commonPicker = ref();\n    const refProps = {\n      focus: (focusStartInput = true) => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.focus(focusStartInput);\n      },\n      handleOpen: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleOpen();\n      },\n      handleClose: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleClose();\n      }\n    };\n    expose(refProps);\n    const onModelValueUpdated = val => {\n      emit(\"update:modelValue\", val);\n    };\n    return () => {\n      var _a;\n      const format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE;\n      const Component = getPanel(props.type);\n      return createVNode(CommonPicker, mergeProps(props, {\n        \"format\": format,\n        \"type\": props.type,\n        \"ref\": commonPicker,\n        \"onUpdate:modelValue\": onModelValueUpdated\n      }), {\n        default: scopedProps => createVNode(Component, scopedProps, null),\n        \"range-separator\": slots[\"range-separator\"]\n      });\n    };\n  }\n});\nexport { DatePicker as default };","map":{"version":3,"names":["dayjs","extend","localeData","advancedFormat","customParseFormat","weekOfYear","weekYear","dayOfYear","isSameOrAfter","isSameOrBefore","DatePicker","defineComponent","name","install","props","timePickerDefaultProps","datePickerProps","emits","expose","emit","slots","ns","useNamespace","provide","reactive","toRef","ROOT_PICKER_INJECTION_KEY","pickerNs","commonPicker","ref","refProps","focus","focusStartInput","_a","value","handleOpen","handleClose","onModelValueUpdated","val","format","DEFAULT_FORMATS_DATEPICKER","type","DEFAULT_FORMATS_DATE","Component","getPanel","createVNode","CommonPicker","mergeProps","default","scopedProps"],"sources":["../../../../../../packages/components/date-picker/src/date-picker.tsx"],"sourcesContent":["import { defineComponent, provide, reactive, ref, toRef } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport advancedFormat from 'dayjs/plugin/advancedFormat.js'\nimport localeData from 'dayjs/plugin/localeData.js'\nimport weekOfYear from 'dayjs/plugin/weekOfYear.js'\nimport weekYear from 'dayjs/plugin/weekYear.js'\nimport dayOfYear from 'dayjs/plugin/dayOfYear.js'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter.js'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore.js'\nimport { useNamespace } from '@element-plus/hooks'\nimport {\n  CommonPicker,\n  DEFAULT_FORMATS_DATE,\n  DEFAULT_FORMATS_DATEPICKER,\n  timePickerDefaultProps,\n} from '@element-plus/components/time-picker'\nimport { ROOT_PICKER_INJECTION_KEY } from './constants'\n\nimport { datePickerProps } from './props/date-picker'\nimport { getPanel } from './panel-utils'\n\ndayjs.extend(localeData)\ndayjs.extend(advancedFormat)\ndayjs.extend(customParseFormat)\ndayjs.extend(weekOfYear)\ndayjs.extend(weekYear)\ndayjs.extend(dayOfYear)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nexport default defineComponent({\n  name: 'ElDatePicker',\n  install: null,\n  props: {\n    // FIXME: move this to date-picker.ts\n    ...timePickerDefaultProps,\n    ...datePickerProps,\n  },\n  emits: ['update:modelValue'],\n  setup(props, { expose, emit, slots }) {\n    const ns = useNamespace('picker-panel')\n\n    provide('ElPopperOptions', reactive(toRef(props, 'popperOptions')))\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      slots,\n      pickerNs: ns,\n    })\n\n    const commonPicker = ref<InstanceType<typeof CommonPicker>>()\n    const refProps = {\n      focus: (focusStartInput = true) => {\n        commonPicker.value?.focus(focusStartInput)\n      },\n      handleOpen: () => {\n        commonPicker.value?.handleOpen()\n      },\n      handleClose: () => {\n        commonPicker.value?.handleClose()\n      },\n    }\n\n    expose(refProps)\n\n    const onModelValueUpdated = (val: any) => {\n      emit('update:modelValue', val)\n    }\n\n    return () => {\n      // since props always have all defined keys on it, {format, ...props} will always overwrite format\n      // pick props.format or provide default value here before spreading\n      const format =\n        props.format ??\n        (DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE)\n\n      const Component = getPanel(props.type)\n\n      return (\n        <CommonPicker\n          {...props}\n          format={format}\n          type={props.type}\n          ref={commonPicker}\n          onUpdate:modelValue={onModelValueUpdated}\n        >\n          {{\n            default: (scopedProps: /**FIXME: remove any type */ any) => (\n              <Component {...scopedProps} />\n            ),\n            'range-separator': slots['range-separator'],\n          }}\n        </CommonPicker>\n      )\n    }\n  },\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAsBAA,KAAK,CAACC,MAAN,CAAaC,UAAb;AACAF,KAAK,CAACC,MAAN,CAAaE,cAAb;AACAH,KAAK,CAACC,MAAN,CAAaG,iBAAb;AACAJ,KAAK,CAACC,MAAN,CAAaI,UAAb;AACAL,KAAK,CAACC,MAAN,CAAaK,QAAb;AACAN,KAAK,CAACC,MAAN,CAAaM,SAAb;AACAP,KAAK,CAACC,MAAN,CAAaO,aAAb;AACAR,KAAK,CAACC,MAAN,CAAaQ,cAAb;AAEA,IAAAC,UAAA,GAAeC,eAAe,CAAC;EAC7BC,IAAI,EAAE,cADuB;EAE7BC,OAAO,EAAE,IAFoB;EAG7BC,KAAK,EAAE;IAEL,GAAGC,sBAFE;IAGL,GAAGC;GANwB;EAQ7BC,KAAK,EAAE,CAAC,mBAAD,CARsB;;IASxBC,MAAA;IAAUC,IAAF;IAAUC;EAAM;IAAS,MAAAC,EAAA,GAAAC,YAAA;IACpCC,OAAQ,oBAAAC,QAAA,CAAAC,KAAR,CAAAX,KAAA;IAEAS,OAAO,CAACG,yBAAmB,EAAQ;MAC5BN,KAAA;MACLO,QADiC,EAAAN;IAEjC;IAFiC,MAAnCO,YAAA,GAAAC,GAAA;IAKA,MAAMC,QAAA;MACNC,KAAA,EAAAA,CAAAC,eAAiB;QACf,IAAOC,EAAC;QACN,CAAAA,EAAA,GAAAL,YAAA,CAAoBM,KAAA,KAApB,gBAAAD,EAAA,CAAAF,KAAA,CAAAC,eAAA;OAFa;MAIfG,UAAU,EAAEA,CAAA,KAAM;QAChB,IAAYF,EAAA;QALC,CAAAA,EAAA,GAAAL,YAAA,CAAAM,KAAA,qBAAAD,EAAA,CAAAE,UAAA;MAOf;iBACc,EAAAC,CAAA,KAAZ;QACD,IAAAH,EAAA;QATH,CAAAA,EAAA,GAAAL,YAAA,CAAAM,KAAA,qBAAAD,EAAA,CAAAG,WAAA;;;IAcAlB,MAAM,CAAAY,QAAA;IACJ,MAAIO,mBAAC,GAAqBC,GAA1B;MADFnB,IAAA,sBAAAmB,GAAA;;IAIA,OAAO,MAAM;MACX,IAAAL,EAAA;MACA,MAAAM,MAAA,IAAAN,EAAA,GAAAnB,KAAA,CAAAyB,MAAA,YAAAN,EAAA,GAAAO,0BAAA,CAAA1B,KAAA,CAAA2B,IAAA,KAAAC,oBAAA;MACA,MAAMC,SACJ,GAAKC,QAAA,CAAL9B,KACC,CAAA2B,IAAA;MAEH,OAAAI,WAAkB,CAAAC,YAAc,EAAAC,UAAhC,CAAAjC,KAAA;QAEA,UAAAyB,MAAA;QAAA,QAAAzB,KAAA,CAAA2B,IAAA;QAAA,KAIU,EAAAb,YAJV;QAAA,uBAAAS;QAAA,EAMyB;QANzBW,OAAA,EAAAC,WAAA,IAAAJ,WAAA,CAAAF,SAAA,EAAAM,WAAA;QASM,iBAAU,EAAA7B,KACO;QAEjB;IAZN;;AAiBH"},"metadata":{},"sourceType":"module","externalDependencies":[]}