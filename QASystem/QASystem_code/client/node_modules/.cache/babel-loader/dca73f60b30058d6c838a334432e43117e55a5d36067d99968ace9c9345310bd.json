{"ast":null,"code":"import { defineComponent, computed, ref, unref, openBlock, createBlock, mergeProps, withCtx, createElementBlock, normalizeClass, toDisplayString, createCommentVNode, renderSlot, createTextVNode } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { popoverProps, popoverEmits } from './popover.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nconst updateEventKeyRaw = `onUpdate:visible`;\nconst __default__ = defineComponent({\n  name: \"ElPopover\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: popoverProps,\n  emits: popoverEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const onUpdateVisible = computed(() => {\n      return props[updateEventKeyRaw];\n    });\n    const ns = useNamespace(\"popover\");\n    const tooltipRef = ref();\n    const popperRef = computed(() => {\n      var _a;\n      return (_a = unref(tooltipRef)) == null ? void 0 : _a.popperRef;\n    });\n    const style = computed(() => {\n      return [{\n        width: addUnit(props.width)\n      }, props.popperStyle];\n    });\n    const kls = computed(() => {\n      return [ns.b(), props.popperClass, {\n        [ns.m(\"plain\")]: !!props.content\n      }];\n    });\n    const gpuAcceleration = computed(() => {\n      return props.transition === `${ns.namespace.value}-fade-in-linear`;\n    });\n    const hide = () => {\n      var _a;\n      (_a = tooltipRef.value) == null ? void 0 : _a.hide();\n    };\n    const beforeEnter = () => {\n      emit(\"before-enter\");\n    };\n    const beforeLeave = () => {\n      emit(\"before-leave\");\n    };\n    const afterEnter = () => {\n      emit(\"after-enter\");\n    };\n    const afterLeave = () => {\n      emit(\"update:visible\", false);\n      emit(\"after-leave\");\n    };\n    expose({\n      popperRef,\n      hide\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef\n      }, _ctx.$attrs, {\n        trigger: _ctx.trigger,\n        placement: _ctx.placement,\n        disabled: _ctx.disabled,\n        visible: _ctx.visible,\n        transition: _ctx.transition,\n        \"popper-options\": _ctx.popperOptions,\n        tabindex: _ctx.tabindex,\n        content: _ctx.content,\n        offset: _ctx.offset,\n        \"show-after\": _ctx.showAfter,\n        \"hide-after\": _ctx.hideAfter,\n        \"auto-close\": _ctx.autoClose,\n        \"show-arrow\": _ctx.showArrow,\n        \"aria-label\": _ctx.title,\n        effect: _ctx.effect,\n        enterable: _ctx.enterable,\n        \"popper-class\": unref(kls),\n        \"popper-style\": unref(style),\n        teleported: _ctx.teleported,\n        persistent: _ctx.persistent,\n        \"gpu-acceleration\": unref(gpuAcceleration),\n        \"onUpdate:visible\": unref(onUpdateVisible),\n        onBeforeShow: beforeEnter,\n        onBeforeHide: beforeLeave,\n        onShow: afterEnter,\n        onHide: afterLeave\n      }), {\n        content: withCtx(() => [_ctx.title ? (openBlock(), createElementBlock(\"div\", {\n          key: 0,\n          class: normalizeClass(unref(ns).e(\"title\")),\n          role: \"title\"\n        }, toDisplayString(_ctx.title), 3)) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(_ctx.content), 1)])]),\n        default: withCtx(() => [_ctx.$slots.reference ? renderSlot(_ctx.$slots, \"reference\", {\n          key: 0\n        }) : createCommentVNode(\"v-if\", true)]),\n        _: 3\n      }, 16, [\"trigger\", \"placement\", \"disabled\", \"visible\", \"transition\", \"popper-options\", \"tabindex\", \"content\", \"offset\", \"show-after\", \"hide-after\", \"auto-close\", \"show-arrow\", \"aria-label\", \"effect\", \"enterable\", \"popper-class\", \"popper-style\", \"teleported\", \"persistent\", \"gpu-acceleration\", \"onUpdate:visible\"]);\n    };\n  }\n});\nvar Popover = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popover/src/popover.vue\"]]);\nexport { Popover as default };","map":{"version":3,"names":["name","onUpdateVisible","computed","props","updateEventKeyRaw","ns","useNamespace","tooltipRef","ref","popperRef","_a","unref","style","width","addUnit","popperStyle","kls","b","popperClass","m","content","gpuAcceleration","transition","namespace","value","hide","beforeEnter","emit","beforeLeave","afterEnter","afterLeave","expose"],"sources":["../../../../../../packages/components/popover/src/popover.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-bind=\"$attrs\"\n    :trigger=\"trigger\"\n    :placement=\"placement\"\n    :disabled=\"disabled\"\n    :visible=\"visible\"\n    :transition=\"transition\"\n    :popper-options=\"popperOptions\"\n    :tabindex=\"tabindex\"\n    :content=\"content\"\n    :offset=\"offset\"\n    :show-after=\"showAfter\"\n    :hide-after=\"hideAfter\"\n    :auto-close=\"autoClose\"\n    :show-arrow=\"showArrow\"\n    :aria-label=\"title\"\n    :effect=\"effect\"\n    :enterable=\"enterable\"\n    :popper-class=\"kls\"\n    :popper-style=\"style\"\n    :teleported=\"teleported\"\n    :persistent=\"persistent\"\n    :gpu-acceleration=\"gpuAcceleration\"\n    @update:visible=\"onUpdateVisible\"\n    @before-show=\"beforeEnter\"\n    @before-hide=\"beforeLeave\"\n    @show=\"afterEnter\"\n    @hide=\"afterLeave\"\n  >\n    <template v-if=\"$slots.reference\">\n      <slot name=\"reference\" />\n    </template>\n\n    <template #content>\n      <div v-if=\"title\" :class=\"ns.e('title')\" role=\"title\">\n        {{ title }}\n      </div>\n      <slot>\n        {{ content }}\n      </slot>\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, ref, unref } from 'vue'\nimport { ElTooltip } from '@element-plus/components/tooltip'\nimport { addUnit } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { popoverEmits, popoverProps } from './popover'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\ndefineOptions({\n  name: 'ElPopover',\n})\n\nconst props = defineProps(popoverProps)\nconst emit = defineEmits(popoverEmits)\n\nconst updateEventKeyRaw = `onUpdate:visible` as const\n\nconst onUpdateVisible = computed(() => {\n  return props[updateEventKeyRaw]\n})\n\nconst ns = useNamespace('popover')\nconst tooltipRef = ref<TooltipInstance>()\nconst popperRef = computed(() => {\n  return unref(tooltipRef)?.popperRef\n})\n\nconst style = computed(() => {\n  return [\n    {\n      width: addUnit(props.width),\n    },\n    props.popperStyle!,\n  ]\n})\n\nconst kls = computed(() => {\n  return [ns.b(), props.popperClass!, { [ns.m('plain')]: !!props.content }]\n})\n\nconst gpuAcceleration = computed(() => {\n  return props.transition === `${ns.namespace.value}-fade-in-linear`\n})\n\nconst hide = () => {\n  tooltipRef.value?.hide()\n}\n\nconst beforeEnter = () => {\n  emit('before-enter')\n}\nconst beforeLeave = () => {\n  emit('before-leave')\n}\n\nconst afterEnter = () => {\n  emit('after-enter')\n}\n\nconst afterLeave = () => {\n  emit('update:visible', false)\n  emit('after-leave')\n}\n\ndefineExpose({\n  /** @description popper ref */\n  popperRef,\n  /** @description hide popover */\n  hide,\n})\n</script>\n"],"mappings":";;;;;;;;;mCAqDc;EACZA,IAAM;AACR;;;;;;;;;;IAOM,MAAAC,eAAA,GAAkBC,QAAA,CAAS,MAAM;MACrC,OAAOC,KAAM,CAAAC,iBAAA;IAAA,CACd;IAEK,MAAAC,EAAA,GAAKC,YAAA,CAAa,SAAS;IACjC,MAAMC,UAAA,GAAaC,GAAqB;IAClC,MAAAC,SAAA,GAAYP,QAAA,CAAS,MAAM;MACxB,IAAAQ,EAAA;MACR,QAAAA,EAAA,GAAAC,KAAA,CAAAJ,UAAA,sBAAAG,EAAA,CAAAD,SAAA;IAED,CAAM;IACG,MAAAG,KAAA,GAAAV,QAAA;MACL,QACE;QACFW,KAAA,EAAAC,OAAA,CAAAX,KAAA,CAAAU,KAAA;MAAA,CACM,EACRV,KAAA,CAAAY,WAAA,CACD;IAED,CAAM;IACJ,MAAAC,GAAO,GAAId,QAAK;MACjB,QAAAG,EAAA,CAAAY,CAAA,IAAAd,KAAA,CAAAe,WAAA;QAAA,CAAAb,EAAA,CAAAc,CAAA,cAAAhB,KAAA,CAAAiB;MAAA;IAED,CAAM;IACJ,MAAAC,eAAa,GAAAnB,QAAkB,OAAa;MAC7C,OAAAC,KAAA,CAAAmB,UAAA,QAAAjB,EAAA,CAAAkB,SAAA,CAAAC,KAAA;IAED;IACE,MAAAC,IAAA,GAAWA,CAAA;MACb,IAAAf,EAAA;MAEA,CAAAA,EAAA,GAAAH,UAAA,CAAAiB,KAA0B,qBAAAd,EAAA,CAAAe,IAAA;IACxB;IACF,MAAAC,WAAA,GAAAA,CAAA;MACAC,IAAM,eAAoB;IACxB;IACF,MAAAC,WAAA,GAAAA,CAAA;MAEAD,IAAM,eAAmB;IACvB;IACF,MAAAE,UAAA,GAAAA,CAAA;MAEAF,IAAM,cAAmB;IACvB;IACA,MAAAG,UAAkB,GAAAA,CAAA;MACpBH,IAAA;MAEaA,IAAA;IAAA,CAEX;IAEAI,MAAA;MACDtB,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}