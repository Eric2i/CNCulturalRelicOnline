{"ast":null,"code":"import { defineComponent, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, renderSlot, toDisplayString } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { timelineItemProps } from './timeline-item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst __default__ = defineComponent({\n  name: \"ElTimelineItem\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: timelineItemProps,\n  setup(__props) {\n    const ns = useNamespace(\"timeline-item\");\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"li\", {\n        class: normalizeClass([unref(ns).b(), {\n          [unref(ns).e(\"center\")]: _ctx.center\n        }])\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass(unref(ns).e(\"tail\"))\n      }, null, 2), !_ctx.$slots.dot ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass([unref(ns).e(\"node\"), unref(ns).em(\"node\", _ctx.size || \"\"), unref(ns).em(\"node\", _ctx.type || \"\"), unref(ns).is(\"hollow\", _ctx.hollow)]),\n        style: normalizeStyle({\n          backgroundColor: _ctx.color\n        })\n      }, [_ctx.icon ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        class: normalizeClass(unref(ns).e(\"icon\"))\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 6)) : createCommentVNode(\"v-if\", true), _ctx.$slots.dot ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass(unref(ns).e(\"dot\"))\n      }, [renderSlot(_ctx.$slots, \"dot\")], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        class: normalizeClass(unref(ns).e(\"wrapper\"))\n      }, [!_ctx.hideTimestamp && _ctx.placement === \"top\" ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass([unref(ns).e(\"timestamp\"), unref(ns).is(\"top\")])\n      }, toDisplayString(_ctx.timestamp), 3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        class: normalizeClass(unref(ns).e(\"content\"))\n      }, [renderSlot(_ctx.$slots, \"default\")], 2), !_ctx.hideTimestamp && _ctx.placement === \"bottom\" ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass([unref(ns).e(\"timestamp\"), unref(ns).is(\"bottom\")])\n      }, toDisplayString(_ctx.timestamp), 3)) : createCommentVNode(\"v-if\", true)], 2)], 2);\n    };\n  }\n});\nvar TimelineItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/timeline/src/timeline-item.vue\"]]);\nexport { TimelineItem as default };","map":{"version":3,"names":["name","ns","useNamespace"],"sources":["../../../../../../packages/components/timeline/src/timeline-item.vue"],"sourcesContent":["<template>\n  <li :class=\"[ns.b(), { [ns.e('center')]: center }]\">\n    <div :class=\"ns.e('tail')\" />\n    <div\n      v-if=\"!$slots.dot\"\n      :class=\"[\n        ns.e('node'),\n        ns.em('node', size || ''),\n        ns.em('node', type || ''),\n        ns.is('hollow', hollow),\n      ]\"\n      :style=\"{\n        backgroundColor: color,\n      }\"\n    >\n      <el-icon v-if=\"icon\" :class=\"ns.e('icon')\">\n        <component :is=\"icon\" />\n      </el-icon>\n    </div>\n    <div v-if=\"$slots.dot\" :class=\"ns.e('dot')\">\n      <slot name=\"dot\" />\n    </div>\n\n    <div :class=\"ns.e('wrapper')\">\n      <div\n        v-if=\"!hideTimestamp && placement === 'top'\"\n        :class=\"[ns.e('timestamp'), ns.is('top')]\"\n      >\n        {{ timestamp }}\n      </div>\n\n      <div :class=\"ns.e('content')\">\n        <slot />\n      </div>\n\n      <div\n        v-if=\"!hideTimestamp && placement === 'bottom'\"\n        :class=\"[ns.e('timestamp'), ns.is('bottom')]\"\n      >\n        {{ timestamp }}\n      </div>\n    </div>\n  </li>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { timelineItemProps } from './timeline-item'\n\ndefineOptions({\n  name: 'ElTimelineItem',\n})\n\ndefineProps(timelineItemProps)\n\nconst ns = useNamespace('timeline-item')\n</script>\n"],"mappings":";;;;;;mCAkDc;EACZA,IAAM;AACR;;;;;IAIM,MAAAC,EAAA,GAAKC,YAAA,CAAa,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}