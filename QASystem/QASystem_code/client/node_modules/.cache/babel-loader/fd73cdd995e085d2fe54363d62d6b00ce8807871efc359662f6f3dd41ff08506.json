{"ast":null,"code":"import { inject, getCurrentInstance, nextTick, computed, watch } from 'vue';\nimport '../../../form/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { checkboxGroupContextKey } from '../constants.mjs';\nimport { useFormItem } from '../../../form/src/hooks/use-form-item.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nconst useCheckboxEvent = (props, {\n  model,\n  isLimitExceeded,\n  hasOwnLabel,\n  isDisabled,\n  isLabeledByFormItem\n}) => {\n  const checkboxGroup = inject(checkboxGroupContextKey, void 0);\n  const {\n    formItem\n  } = useFormItem();\n  const {\n    emit\n  } = getCurrentInstance();\n  function getLabeledValue(value) {\n    var _a, _b;\n    return value === props.trueLabel || value === true ? (_a = props.trueLabel) != null ? _a : true : (_b = props.falseLabel) != null ? _b : false;\n  }\n  function emitChangeEvent(checked, e) {\n    emit(\"change\", getLabeledValue(checked), e);\n  }\n  function handleChange(e) {\n    if (isLimitExceeded.value) return;\n    const target = e.target;\n    emit(\"change\", getLabeledValue(target.checked), e);\n  }\n  async function onClickRoot(e) {\n    if (isLimitExceeded.value) return;\n    if (!hasOwnLabel.value && !isDisabled.value && isLabeledByFormItem.value) {\n      const eventTargets = e.composedPath();\n      const hasLabel = eventTargets.some(item => item.tagName === \"LABEL\");\n      if (!hasLabel) {\n        model.value = getLabeledValue([false, props.falseLabel].includes(model.value));\n        await nextTick();\n        emitChangeEvent(model.value, e);\n      }\n    }\n  }\n  const validateEvent = computed(() => (checkboxGroup == null ? void 0 : checkboxGroup.validateEvent) || props.validateEvent);\n  watch(() => props.modelValue, () => {\n    if (validateEvent.value) {\n      formItem == null ? void 0 : formItem.validate(\"change\").catch(err => debugWarn(err));\n    }\n  });\n  return {\n    handleChange,\n    onClickRoot\n  };\n};\nexport { useCheckboxEvent };","map":{"version":3,"names":["useCheckboxEvent","props","model","isLimitExceeded","hasOwnLabel","isDisabled","isLabeledByFormItem","checkboxGroup","inject","checkboxGroupContextKey","formItem","useFormItem","emit","getCurrentInstance","getLabeledValue","value","_a","_b","trueLabel","falseLabel","emitChangeEvent","checked","e","handleChange","target","onClickRoot","eventTargets","composedPath","hasLabel","some","item","tagName","includes","nextTick","validateEvent","computed","watch","modelValue","validate","catch","err","debugWarn"],"sources":["../../../../../../../packages/components/checkbox/src/composables/use-checkbox-event.ts"],"sourcesContent":["import { computed, getCurrentInstance, inject, nextTick, watch } from 'vue'\nimport { useFormItem } from '@element-plus/components/form'\nimport { debugWarn } from '@element-plus/utils'\nimport { checkboxGroupContextKey } from '../constants'\n\nimport type { useFormItemInputId } from '@element-plus/components/form'\nimport type { CheckboxProps } from '../checkbox'\nimport type {\n  CheckboxDisabled,\n  CheckboxModel,\n  CheckboxStatus,\n} from '../composables'\n\nexport const useCheckboxEvent = (\n  props: CheckboxProps,\n  {\n    model,\n    isLimitExceeded,\n    hasOwnLabel,\n    isDisabled,\n    isLabeledByFormItem,\n  }: Pick<CheckboxModel, 'model' | 'isLimitExceeded'> &\n    Pick<CheckboxStatus, 'hasOwnLabel'> &\n    Pick<CheckboxDisabled, 'isDisabled'> &\n    Pick<ReturnType<typeof useFormItemInputId>, 'isLabeledByFormItem'>\n) => {\n  const checkboxGroup = inject(checkboxGroupContextKey, undefined)\n  const { formItem } = useFormItem()\n  const { emit } = getCurrentInstance()!\n\n  function getLabeledValue(value: string | number | boolean) {\n    return value === props.trueLabel || value === true\n      ? props.trueLabel ?? true\n      : props.falseLabel ?? false\n  }\n\n  function emitChangeEvent(\n    checked: string | number | boolean,\n    e: InputEvent | MouseEvent\n  ) {\n    emit('change', getLabeledValue(checked), e)\n  }\n\n  function handleChange(e: Event) {\n    if (isLimitExceeded.value) return\n\n    const target = e.target as HTMLInputElement\n    emit('change', getLabeledValue(target.checked), e)\n  }\n\n  async function onClickRoot(e: MouseEvent) {\n    if (isLimitExceeded.value) return\n\n    if (!hasOwnLabel.value && !isDisabled.value && isLabeledByFormItem.value) {\n      // fix: https://github.com/element-plus/element-plus/issues/9981\n      const eventTargets: EventTarget[] = e.composedPath()\n      const hasLabel = eventTargets.some(\n        (item) => (item as HTMLElement).tagName === 'LABEL'\n      )\n      if (!hasLabel) {\n        model.value = getLabeledValue(\n          [false, props.falseLabel].includes(model.value)\n        )\n        await nextTick()\n        emitChangeEvent(model.value, e)\n      }\n    }\n  }\n\n  const validateEvent = computed(\n    () => checkboxGroup?.validateEvent || props.validateEvent\n  )\n\n  watch(\n    () => props.modelValue,\n    () => {\n      if (validateEvent.value) {\n        formItem?.validate('change').catch((err) => debugWarn(err))\n      }\n    }\n  )\n\n  return {\n    handleChange,\n    onClickRoot,\n  }\n}\n"],"mappings":";;;;;;AAIY,MAACA,gBAAgB,GAAGA,CAACC,KAAK,EAAE;EACtCC,KAAK;EACLC,eAAe;EACfC,WAAW;EACXC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,MAAMC,aAAa,GAAGC,MAAM,CAACC,uBAAuB,EAAE,KAAK,CAAC,CAAC;EAC7D,MAAM;IAAEC;EAAQ,CAAE,GAAGC,WAAW,EAAE;EAClC,MAAM;IAAEC;EAAI,CAAE,GAAGC,kBAAkB,EAAE;EACrC,SAASC,eAAeA,CAACC,KAAK,EAAE;IAC9B,IAAIC,EAAE,EAAEC,EAAE;IACV,OAAOF,KAAK,KAAKd,KAAK,CAACiB,SAAS,IAAIH,KAAK,KAAK,IAAI,GAAG,CAACC,EAAE,GAAGf,KAAK,CAACiB,SAAS,KAAK,IAAI,GAAGF,EAAE,GAAG,IAAI,GAAG,CAACC,EAAE,GAAGhB,KAAK,CAACkB,UAAU,KAAK,IAAI,GAAGF,EAAE,GAAG,KAAK;EAClJ;EACE,SAASG,eAAeA,CAACC,OAAO,EAAEC,CAAC,EAAE;IACnCV,IAAI,CAAC,QAAQ,EAAEE,eAAe,CAACO,OAAO,CAAC,EAAEC,CAAC,CAAC;EAC/C;EACE,SAASC,YAAYA,CAACD,CAAC,EAAE;IACvB,IAAInB,eAAe,CAACY,KAAK,EACvB;IACF,MAAMS,MAAM,GAAGF,CAAC,CAACE,MAAM;IACvBZ,IAAI,CAAC,QAAQ,EAAEE,eAAe,CAACU,MAAM,CAACH,OAAO,CAAC,EAAEC,CAAC,CAAC;EACtD;EACE,eAAeG,WAAWA,CAACH,CAAC,EAAE;IAC5B,IAAInB,eAAe,CAACY,KAAK,EACvB;IACF,IAAI,CAACX,WAAW,CAACW,KAAK,IAAI,CAACV,UAAU,CAACU,KAAK,IAAIT,mBAAmB,CAACS,KAAK,EAAE;MACxE,MAAMW,YAAY,GAAGJ,CAAC,CAACK,YAAY,EAAE;MACrC,MAAMC,QAAQ,GAAGF,YAAY,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,OAAO,CAAC;MACtE,IAAI,CAACH,QAAQ,EAAE;QACb1B,KAAK,CAACa,KAAK,GAAGD,eAAe,CAAC,CAAC,KAAK,EAAEb,KAAK,CAACkB,UAAU,CAAC,CAACa,QAAQ,CAAC9B,KAAK,CAACa,KAAK,CAAC,CAAC;QAC9E,MAAMkB,QAAQ,EAAE;QAChBb,eAAe,CAAClB,KAAK,CAACa,KAAK,EAAEO,CAAC,CAAC;MACvC;IACA;EACA;EACE,MAAMY,aAAa,GAAGC,QAAQ,CAAC,MAAM,CAAC5B,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAAC2B,aAAa,KAAKjC,KAAK,CAACiC,aAAa,CAAC;EAC3HE,KAAK,CAAC,MAAMnC,KAAK,CAACoC,UAAU,EAAE,MAAM;IAClC,IAAIH,aAAa,CAACnB,KAAK,EAAE;MACvBL,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAAC4B,QAAQ,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAKC,SAAS,CAACD,GAAG,CAAC,CAAC;IAC5F;EACA,CAAG,CAAC;EACF,OAAO;IACLjB,YAAY;IACZE;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}