{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, ref, getCurrentInstance, provide, reactive, toRefs, inject, onMounted, toRaw, watch, withDirectives, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, renderSlot, vShow } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { selectGroupKey, selectKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElOptionGroup\",\n  componentName: \"ElOptionGroup\",\n  props: {\n    label: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const ns = useNamespace(\"select\");\n    const visible = ref(true);\n    const instance = getCurrentInstance();\n    const children = ref([]);\n    provide(selectGroupKey, reactive({\n      ...toRefs(props)\n    }));\n    const select = inject(selectKey);\n    onMounted(() => {\n      children.value = flattedChildren(instance.subTree);\n    });\n    const flattedChildren = node => {\n      const children2 = [];\n      if (Array.isArray(node.children)) {\n        node.children.forEach(child => {\n          var _a;\n          if (child.type && child.type.name === \"ElOption\" && child.component && child.component.proxy) {\n            children2.push(child.component.proxy);\n          } else if ((_a = child.children) == null ? void 0 : _a.length) {\n            children2.push(...flattedChildren(child));\n          }\n        });\n      }\n      return children2;\n    };\n    const {\n      groupQueryChange\n    } = toRaw(select);\n    watch(groupQueryChange, () => {\n      visible.value = children.value.some(option => option.visible === true);\n    }, {\n      flush: \"post\"\n    });\n    return {\n      visible,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"ul\", {\n    class: normalizeClass(_ctx.ns.be(\"group\", \"wrap\"))\n  }, [createElementVNode(\"li\", {\n    class: normalizeClass(_ctx.ns.be(\"group\", \"title\"))\n  }, toDisplayString(_ctx.label), 3), createElementVNode(\"li\", null, [createElementVNode(\"ul\", {\n    class: normalizeClass(_ctx.ns.b(\"group\"))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)])], 2)), [[vShow, _ctx.visible]]);\n}\nvar OptionGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select/src/option-group.vue\"]]);\nexport { OptionGroup as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","componentName","props","label","String","disabled","type","Boolean","default","setup","ns","useNamespace","visible","ref","instance","getCurrentInstance","children","provide","selectGroupKey","reactive","toRefs","select","inject","selectKey","onMounted","value","flattedChildren","subTree","node","children2","Array","isArray","forEach","child","_a","component","proxy","push","length","groupQueryChange","toRaw","watch","some","option","flush","$setup","$data","$options","withDirectives","openBlock","createElementBlock","class","normalizeClass","_ctx","be","createElementVNode","toDisplayString","b","renderSlot","$slots","vShow"],"sources":["../../../../../../packages/components/select/src/option-group.vue"],"sourcesContent":["<template>\n  <ul v-show=\"visible\" :class=\"ns.be('group', 'wrap')\">\n    <li :class=\"ns.be('group', 'title')\">{{ label }}</li>\n    <li>\n      <ul :class=\"ns.b('group')\">\n        <slot />\n      </ul>\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRaw,\n  toRefs,\n  watch,\n} from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectGroupKey, selectKey } from './token'\n\nexport default defineComponent({\n  name: 'ElOptionGroup',\n  componentName: 'ElOptionGroup',\n\n  props: {\n    label: String,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('select')\n    const visible = ref(true)\n    const instance = getCurrentInstance()\n    const children = ref([])\n\n    provide(\n      selectGroupKey,\n      reactive({\n        ...toRefs(props),\n      })\n    )\n\n    const select = inject(selectKey)\n\n    onMounted(() => {\n      children.value = flattedChildren(instance.subTree)\n    })\n\n    // get all instances of options\n    const flattedChildren = (node) => {\n      const children = []\n      if (Array.isArray(node.children)) {\n        node.children.forEach((child) => {\n          if (\n            child.type &&\n            child.type.name === 'ElOption' &&\n            child.component &&\n            child.component.proxy\n          ) {\n            children.push(child.component.proxy)\n          } else if (child.children?.length) {\n            children.push(...flattedChildren(child))\n          }\n        })\n      }\n      return children\n    }\n\n    const { groupQueryChange } = toRaw(select)\n    watch(\n      groupQueryChange,\n      () => {\n        visible.value = children.value.some((option) => option.visible === true)\n      },\n      { flush: 'post' }\n    )\n\n    return {\n      visible,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;AA4BA,MAAKA,SAAA,GAAaC,eAAa;EAC7BC,IAAM;EACNC,aAAe;EAEfC,KAAO;IACLC,KAAO,EAAAC,MAAA;IACPC,QAAU;MACRC,IAAM,EAAAC,OAAA;MACNC,OAAS;IAAA;EACX,CACF;EACAC,MAAMP,KAAO;IACL,MAAAQ,EAAA,GAAKC,YAAA,CAAa,QAAQ;IAC1B,MAAAC,OAAA,GAAUC,GAAA,CAAI,IAAI;IACxB,MAAMC,QAAA,GAAWC,kBAAmB;IAC9B,MAAAC,QAAA,GAAWH,GAAI,GAAE;IAEvBI,OAAA,CACEC,cAAA,EACAC,QAAS;MACP,GAAGC,MAAA,CAAOlB,KAAK;IAAA,CAChB,CACH;IAEM,MAAAmB,MAAA,GAASC,MAAA,CAAOC,SAAS;IAE/BC,SAAA,CAAU,MAAM;MACLR,QAAA,CAAAS,KAAA,GAAQC,eAAgB,CAAAZ,QAAA,CAASa,OAAO;IAAA,CAClD;IAGK,MAAAD,eAAA,GAAmBE,IAAS;MAChC,MAAMC,SAAA,GAAW,EAAC;MAClB,IAAIC,KAAM,CAAAC,OAAA,CAAQH,IAAK,CAAAZ,QAAQ,CAAG;QAC3BY,IAAA,CAAAZ,QAAA,CAASgB,OAAQ,CAACC,KAAU;UAE7B,IAAAC,EAAA;UAKS,IAAAD,KAAA,CAAA3B,IAAA,IAAW2B,KAAA,CAAA3B,IAAA,CAAAN,IAAU,KAAK,cAAAiC,KAAA,CAAAE,SAAA,IAAAF,KAAA,CAAAE,SAAA,CAAAC,KAAA;YACrCP,SAAW,CAAMQ,IAAA,CAAAJ,KAAA,CAAAE,SAAkB,CAAAC,KAAA;UACjC,YAASF,EAAK,GAAAD,KAAmB,CAAAjB,QAAA,YAAM,SAAAkB,EAAA,CAAAI,MAAA;YACzCT,SAAA,CAAAQ,IAAA,IAAAX,eAAA,CAAAO,KAAA;UAAA;QACD,CACH;MACA;MACF,OAAAJ,SAAA;IAEA,CAAM;IACN,MACE;MAAAU;IACA,CAAM,GAAAC,KAAA,CAAAnB,MAAA;IACIoB,KAAA,CAAAF,gBAAA,QAAuB;MAEjC3B,OAAS,CAAAa,KAAA,GAAAT,QACX,CAAAS,KAAA,CAAAiB,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAA/B,OAAA;IAEA,CAAO;MAAAgC,KAAA;IAAA;IACL;MACAhC,OAAA;MACFF;IAAA,CACF;EACF;;yCApFO,EAAAmC,MAAA,EAAAC,KAAA,EAAAC,QAAA;EAPiB,OAAAC,cAAO,EAAAC,SAAK,IAAAC,kBAAA;IAAAC,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAA3C,EAAA,CAAA4C,EAAA;KACqB,CAAhDC,kBAAO;IAAKJ,KAAA,EAAAC,cAA4B,CAAAC,IAAA,CAAA3C,EAAA,CAAA4C,EAAA;EAAA,CAKxC,EAAAE,eAAA,CAAAH,IAAA,CAAAlD,KAAA,OAAAoD,kBADE,cAFAA,kBAAO;IAAIJ,KAAA,EAAAC,cAAA,CAAAC,IAAA,CAAA3C,EAAA,CAAA+C,CAAA;KACN,CAAAC,UAAA,CAAAL,IAAA,CAAAM,MAAA,a,eAJK,CAAAC,KAAA,EAAAP,IAAA,CAAAzC,OAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}