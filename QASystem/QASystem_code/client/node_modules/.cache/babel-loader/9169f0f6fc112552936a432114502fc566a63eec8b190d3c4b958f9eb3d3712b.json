{"ast":null,"code":"import { computed, inject, ref, useSlots, Text } from 'vue';\nimport '../../form/index.mjs';\nimport '../../config-provider/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buttonGroupContextKey } from './constants.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { useGlobalConfig } from '../../config-provider/src/hooks/use-global-config.mjs';\nimport { useFormItem } from '../../form/src/hooks/use-form-item.mjs';\nimport { useFormSize, useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nconst useButton = (props, emit) => {\n  useDeprecated({\n    from: \"type.text\",\n    replacement: \"link\",\n    version: \"3.0.0\",\n    scope: \"props\",\n    ref: \"https://element-plus.org/en-US/component/button.html#button-attributes\"\n  }, computed(() => props.type === \"text\"));\n  const buttonGroupContext = inject(buttonGroupContextKey, void 0);\n  const globalConfig = useGlobalConfig(\"button\");\n  const {\n    form\n  } = useFormItem();\n  const _size = useFormSize(computed(() => buttonGroupContext == null ? void 0 : buttonGroupContext.size));\n  const _disabled = useFormDisabled();\n  const _ref = ref();\n  const slots = useSlots();\n  const _type = computed(() => props.type || (buttonGroupContext == null ? void 0 : buttonGroupContext.type) || \"\");\n  const autoInsertSpace = computed(() => {\n    var _a, _b, _c;\n    return (_c = (_b = props.autoInsertSpace) != null ? _b : (_a = globalConfig.value) == null ? void 0 : _a.autoInsertSpace) != null ? _c : false;\n  });\n  const shouldAddSpace = computed(() => {\n    var _a;\n    const defaultSlot = (_a = slots.default) == null ? void 0 : _a.call(slots);\n    if (autoInsertSpace.value && (defaultSlot == null ? void 0 : defaultSlot.length) === 1) {\n      const slot = defaultSlot[0];\n      if ((slot == null ? void 0 : slot.type) === Text) {\n        const text = slot.children;\n        return /^\\p{Unified_Ideograph}{2}$/u.test(text.trim());\n      }\n    }\n    return false;\n  });\n  const handleClick = evt => {\n    if (props.nativeType === \"reset\") {\n      form == null ? void 0 : form.resetFields();\n    }\n    emit(\"click\", evt);\n  };\n  return {\n    _disabled,\n    _size,\n    _type,\n    _ref,\n    shouldAddSpace,\n    handleClick\n  };\n};\nexport { useButton };","map":{"version":3,"names":["useButton","props","emit","useDeprecated","from","replacement","version","scope","ref","computed","type","buttonGroupContext","inject","buttonGroupContextKey","globalConfig","useGlobalConfig","form","useFormItem","_size","useFormSize","size","_disabled","useFormDisabled","_ref","slots","useSlots","_type","autoInsertSpace","_a","_b","_c","value","shouldAddSpace","defaultSlot","default","call","length","slot","Text","text","children","test","trim","handleClick","evt","nativeType","resetFields"],"sources":["../../../../../../packages/components/button/src/use-button.ts"],"sourcesContent":["import { Text, computed, inject, ref, useSlots } from 'vue'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { useGlobalConfig } from '@element-plus/components/config-provider'\nimport { useDeprecated } from '@element-plus/hooks'\nimport { buttonGroupContextKey } from './constants'\n\nimport type { SetupContext } from 'vue'\nimport type { ButtonEmits, ButtonProps } from './button'\n\nexport const useButton = (\n  props: ButtonProps,\n  emit: SetupContext<ButtonEmits>['emit']\n) => {\n  useDeprecated(\n    {\n      from: 'type.text',\n      replacement: 'link',\n      version: '3.0.0',\n      scope: 'props',\n      ref: 'https://element-plus.org/en-US/component/button.html#button-attributes',\n    },\n    computed(() => props.type === 'text')\n  )\n\n  const buttonGroupContext = inject(buttonGroupContextKey, undefined)\n  const globalConfig = useGlobalConfig('button')\n  const { form } = useFormItem()\n  const _size = useFormSize(computed(() => buttonGroupContext?.size))\n  const _disabled = useFormDisabled()\n  const _ref = ref<HTMLButtonElement>()\n  const slots = useSlots()\n\n  const _type = computed(() => props.type || buttonGroupContext?.type || '')\n  const autoInsertSpace = computed(\n    () => props.autoInsertSpace ?? globalConfig.value?.autoInsertSpace ?? false\n  )\n\n  // add space between two characters in Chinese\n  const shouldAddSpace = computed(() => {\n    const defaultSlot = slots.default?.()\n    if (autoInsertSpace.value && defaultSlot?.length === 1) {\n      const slot = defaultSlot[0]\n      if (slot?.type === Text) {\n        const text = slot.children as string\n        return /^\\p{Unified_Ideograph}{2}$/u.test(text.trim())\n      }\n    }\n    return false\n  })\n\n  const handleClick = (evt: MouseEvent) => {\n    if (props.nativeType === 'reset') {\n      form?.resetFields()\n    }\n    emit('click', evt)\n  }\n\n  return {\n    _disabled,\n    _size,\n    _type,\n    _ref,\n    shouldAddSpace,\n    handleClick,\n  }\n}\n"],"mappings":";;;;;;;;;AASY,MAACA,SAAS,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;EACxCC,aAAa,CAAC;IACZC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,MAAM;IACnBC,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE;EACT,CAAG,EAAEC,QAAQ,CAAC,MAAMR,KAAK,CAACS,IAAI,KAAK,MAAM,CAAC,CAAC;EACzC,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,qBAAqB,EAAE,KAAK,CAAC,CAAC;EAChE,MAAMC,YAAY,GAAGC,eAAe,CAAC,QAAQ,CAAC;EAC9C,MAAM;IAAEC;EAAI,CAAE,GAAGC,WAAW,EAAE;EAC9B,MAAMC,KAAK,GAAGC,WAAW,CAACV,QAAQ,CAAC,MAAME,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACS,IAAI,CAAC,CAAC;EACxG,MAAMC,SAAS,GAAGC,eAAe,EAAE;EACnC,MAAMC,IAAI,GAAGf,GAAG,EAAE;EAClB,MAAMgB,KAAK,GAAGC,QAAQ,EAAE;EACxB,MAAMC,KAAK,GAAGjB,QAAQ,CAAC,MAAMR,KAAK,CAACS,IAAI,KAAKC,kBAAkB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACD,IAAI,CAAC,IAAI,EAAE,CAAC;EACjH,MAAMiB,eAAe,GAAGlB,QAAQ,CAAC,MAAM;IACrC,IAAImB,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,OAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG5B,KAAK,CAAC0B,eAAe,KAAK,IAAI,GAAGE,EAAE,GAAG,CAACD,EAAE,GAAGd,YAAY,CAACiB,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGH,EAAE,CAACD,eAAe,KAAK,IAAI,GAAGG,EAAE,GAAG,KAAK;EAClJ,CAAG,CAAC;EACF,MAAME,cAAc,GAAGvB,QAAQ,CAAC,MAAM;IACpC,IAAImB,EAAE;IACN,MAAMK,WAAW,GAAG,CAACL,EAAE,GAAGJ,KAAK,CAACU,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGN,EAAE,CAACO,IAAI,CAACX,KAAK,CAAC;IAC1E,IAAIG,eAAe,CAACI,KAAK,IAAI,CAACE,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACG,MAAM,MAAM,CAAC,EAAE;MACtF,MAAMC,IAAI,GAAGJ,WAAW,CAAC,CAAC,CAAC;MAC3B,IAAI,CAACI,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAC3B,IAAI,MAAM4B,IAAI,EAAE;QAChD,MAAMC,IAAI,GAAGF,IAAI,CAACG,QAAQ;QAC1B,OAAO,6BAA6B,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,EAAE,CAAC;MAC9D;IACA;IACI,OAAO,KAAK;EAChB,CAAG,CAAC;EACF,MAAMC,WAAW,GAAIC,GAAG,IAAK;IAC3B,IAAI3C,KAAK,CAAC4C,UAAU,KAAK,OAAO,EAAE;MAChC7B,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAC8B,WAAW,EAAE;IAChD;IACI5C,IAAI,CAAC,OAAO,EAAE0C,GAAG,CAAC;EACtB,CAAG;EACD,OAAO;IACLvB,SAAS;IACTH,KAAK;IACLQ,KAAK;IACLH,IAAI;IACJS,cAAc;IACdW;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}