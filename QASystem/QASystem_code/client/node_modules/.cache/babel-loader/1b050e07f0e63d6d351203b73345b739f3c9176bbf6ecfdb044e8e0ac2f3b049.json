{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, computed, nextTick, watch, onMounted } from 'vue';\nimport { isArray, isFunction, isObject } from '@vue/shared';\nimport { isNil, debounce, isEqual, get } from 'lodash-unified';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../form/index.mjs';\nimport { ArrowUp } from '@element-plus/icons-vue';\nimport { useAllowCreate } from './useAllowCreate.mjs';\nimport { flattenOptions } from './util.mjs';\nimport { useInput } from './useInput.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../form/src/hooks/use-form-item.mjs';\nimport { ValidateComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { escapeStringRegexp } from '../../../utils/strings.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst DEFAULT_INPUT_PLACEHOLDER = \"\";\nconst MINIMUM_INPUT_WIDTH = 11;\nconst TAG_BASE_WIDTH = {\n  larget: 51,\n  default: 42,\n  small: 33\n};\nconst useSelect = (props, emit) => {\n  const {\n    t\n  } = useLocale();\n  const nsSelectV2 = useNamespace(\"select-v2\");\n  const nsInput = useNamespace(\"input\");\n  const {\n    form: elForm,\n    formItem: elFormItem\n  } = useFormItem();\n  const states = reactive({\n    inputValue: DEFAULT_INPUT_PLACEHOLDER,\n    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,\n    calculatedWidth: 0,\n    cachedPlaceholder: \"\",\n    cachedOptions: [],\n    createdOptions: [],\n    createdLabel: \"\",\n    createdSelected: false,\n    currentPlaceholder: \"\",\n    hoveringIndex: -1,\n    comboBoxHovering: false,\n    isOnComposition: false,\n    isSilentBlur: false,\n    isComposing: false,\n    inputLength: 20,\n    selectWidth: 200,\n    initialInputHeight: 0,\n    previousQuery: null,\n    previousValue: void 0,\n    query: \"\",\n    selectedLabel: \"\",\n    softFocus: false,\n    tagInMultiLine: false\n  });\n  const selectedIndex = ref(-1);\n  const popperSize = ref(-1);\n  const controlRef = ref(null);\n  const inputRef = ref(null);\n  const menuRef = ref(null);\n  const popper = ref(null);\n  const selectRef = ref(null);\n  const selectionRef = ref(null);\n  const calculatorRef = ref(null);\n  const expanded = ref(false);\n  const selectDisabled = computed(() => props.disabled || (elForm == null ? void 0 : elForm.disabled));\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * 34;\n    return totalHeight > props.height ? props.height : totalHeight;\n  });\n  const hasModelValue = computed(() => {\n    return !isNil(props.modelValue);\n  });\n  const showClearBtn = computed(() => {\n    const hasValue = props.multiple ? Array.isArray(props.modelValue) && props.modelValue.length > 0 : hasModelValue.value;\n    const criteria = props.clearable && !selectDisabled.value && states.comboBoxHovering && hasValue;\n    return criteria;\n  });\n  const iconComponent = computed(() => props.remote && props.filterable ? \"\" : ArrowUp);\n  const iconReverse = computed(() => iconComponent.value && nsSelectV2.is(\"reverse\", expanded.value));\n  const validateState = computed(() => (elFormItem == null ? void 0 : elFormItem.validateState) || \"\");\n  const validateIcon = computed(() => ValidateComponentsMap[validateState.value]);\n  const debounce$1 = computed(() => props.remote ? 300 : 0);\n  const emptyText = computed(() => {\n    const options = filteredOptions.value;\n    if (props.loading) {\n      return props.loadingText || t(\"el.select.loading\");\n    } else {\n      if (props.remote && states.inputValue === \"\" && options.length === 0) return false;\n      if (props.filterable && states.inputValue && options.length > 0) {\n        return props.noMatchText || t(\"el.select.noMatch\");\n      }\n      if (options.length === 0) {\n        return props.noDataText || t(\"el.select.noData\");\n      }\n    }\n    return null;\n  });\n  const filteredOptions = computed(() => {\n    const isValidOption = o => {\n      const query = states.inputValue;\n      const regexp = new RegExp(escapeStringRegexp(query), \"i\");\n      const containsQueryString = query ? regexp.test(o.label || \"\") : true;\n      return containsQueryString;\n    };\n    if (props.loading) {\n      return [];\n    }\n    return flattenOptions(props.options.concat(states.createdOptions).map(v => {\n      if (isArray(v.options)) {\n        const filtered = v.options.filter(isValidOption);\n        if (filtered.length > 0) {\n          return {\n            ...v,\n            options: filtered\n          };\n        }\n      } else {\n        if (props.remote || isValidOption(v)) {\n          return v;\n        }\n      }\n      return null;\n    }).filter(v => v !== null));\n  });\n  const optionsAllDisabled = computed(() => filteredOptions.value.every(option => option.disabled));\n  const selectSize = useFormSize();\n  const collapseTagSize = computed(() => selectSize.value === \"small\" ? \"small\" : \"default\");\n  const tagMaxWidth = computed(() => {\n    const select = selectionRef.value;\n    const size = collapseTagSize.value || \"default\";\n    const paddingLeft = select ? Number.parseInt(getComputedStyle(select).paddingLeft) : 0;\n    const paddingRight = select ? Number.parseInt(getComputedStyle(select).paddingRight) : 0;\n    return states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size];\n  });\n  const calculatePopperSize = () => {\n    var _a;\n    popperSize.value = ((_a = selectRef.value) == null ? void 0 : _a.offsetWidth) || 200;\n  };\n  const inputWrapperStyle = computed(() => {\n    return {\n      width: `${states.calculatedWidth === 0 ? MINIMUM_INPUT_WIDTH : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH}px`\n    };\n  });\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.displayInputValue;\n    }\n    return props.filterable ? states.displayInputValue.length === 0 : true;\n  });\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder || t(\"el.select.placeholder\");\n    return props.multiple || isNil(props.modelValue) ? _placeholder : states.selectedLabel;\n  });\n  const popperRef = computed(() => {\n    var _a, _b;\n    return (_b = (_a = popper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n  });\n  const indexRef = computed(() => {\n    if (props.multiple) {\n      const len = props.modelValue.length;\n      if (props.modelValue.length > 0) {\n        return filteredOptions.value.findIndex(o => o.value === props.modelValue[len - 1]);\n      }\n    } else {\n      if (props.modelValue) {\n        return filteredOptions.value.findIndex(o => o.value === props.modelValue);\n      }\n    }\n    return -1;\n  });\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false;\n    },\n    set(val) {\n      expanded.value = val;\n    }\n  });\n  const showTagList = computed(() => states.cachedOptions.slice(0, props.maxCollapseTags));\n  const collapseTagList = computed(() => states.cachedOptions.slice(props.maxCollapseTags));\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  } = useAllowCreate(props, states);\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd\n  } = useInput(e => onInput(e));\n  const focusAndUpdatePopup = () => {\n    var _a, _b, _c;\n    (_b = (_a = inputRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    (_c = popper.value) == null ? void 0 : _c.updatePopper();\n  };\n  const toggleMenu = () => {\n    if (props.automaticDropdown) return;\n    if (!selectDisabled.value) {\n      if (states.isComposing) states.softFocus = true;\n      return nextTick(() => {\n        var _a, _b;\n        expanded.value = !expanded.value;\n        (_b = (_a = inputRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n      });\n    }\n  };\n  const onInputChange = () => {\n    if (props.filterable && states.inputValue !== states.selectedLabel) {\n      states.query = states.selectedLabel;\n    }\n    handleQueryChange(states.inputValue);\n    return nextTick(() => {\n      createNewOption(states.inputValue);\n    });\n  };\n  const debouncedOnInputChange = debounce(onInputChange, debounce$1.value);\n  const handleQueryChange = val => {\n    if (states.previousQuery === val) {\n      return;\n    }\n    states.previousQuery = val;\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val);\n    } else if (props.filterable && props.remote && isFunction(props.remoteMethod)) {\n      props.remoteMethod(val);\n    }\n  };\n  const emitChange = val => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val);\n    }\n  };\n  const update = val => {\n    emit(UPDATE_MODEL_EVENT, val);\n    emitChange(val);\n    states.previousValue = val == null ? void 0 : val.toString();\n  };\n  const getValueIndex = (arr = [], value) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value);\n    }\n    const valueKey = props.valueKey;\n    let index = -1;\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i;\n        return true;\n      }\n      return false;\n    });\n    return index;\n  };\n  const getValueKey = item => {\n    return isObject(item) ? get(item, props.valueKey) : item;\n  };\n  const getLabel = item => {\n    return isObject(item) ? item.label : item;\n  };\n  const resetInputHeight = () => {\n    return nextTick(() => {\n      var _a, _b;\n      if (!inputRef.value) return;\n      const selection = selectionRef.value;\n      selectRef.value.height = selection.offsetHeight;\n      if (expanded.value && emptyText.value !== false) {\n        (_b = (_a = popper.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n      }\n    });\n  };\n  const handleResize = () => {\n    var _a, _b;\n    resetInputWidth();\n    calculatePopperSize();\n    (_b = (_a = popper.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n    if (props.multiple) {\n      return resetInputHeight();\n    }\n  };\n  const resetInputWidth = () => {\n    const select = selectionRef.value;\n    if (select) {\n      states.selectWidth = select.getBoundingClientRect().width;\n    }\n  };\n  const onSelect = (option, idx, byClick = true) => {\n    var _a, _b;\n    if (props.multiple) {\n      let selectedOptions = props.modelValue.slice();\n      const index = getValueIndex(selectedOptions, getValueKey(option));\n      if (index > -1) {\n        selectedOptions = [...selectedOptions.slice(0, index), ...selectedOptions.slice(index + 1)];\n        states.cachedOptions.splice(index, 1);\n        removeNewOption(option);\n      } else if (props.multipleLimit <= 0 || selectedOptions.length < props.multipleLimit) {\n        selectedOptions = [...selectedOptions, getValueKey(option)];\n        states.cachedOptions.push(option);\n        selectNewOption(option);\n        updateHoveringIndex(idx);\n      }\n      update(selectedOptions);\n      if (option.created) {\n        states.query = \"\";\n        handleQueryChange(\"\");\n        states.inputLength = 20;\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        (_b = (_a = inputRef.value).focus) == null ? void 0 : _b.call(_a);\n        onUpdateInputValue(\"\");\n      }\n      if (props.filterable) {\n        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n      }\n      resetInputHeight();\n      setSoftFocus();\n    } else {\n      selectedIndex.value = idx;\n      states.selectedLabel = option.label;\n      update(getValueKey(option));\n      expanded.value = false;\n      states.isComposing = false;\n      states.isSilentBlur = byClick;\n      selectNewOption(option);\n      if (!option.created) {\n        clearAllNewOption();\n      }\n      updateHoveringIndex(idx);\n    }\n  };\n  const deleteTag = (event, tag) => {\n    const {\n      valueKey\n    } = props;\n    const index = props.modelValue.indexOf(get(tag, valueKey));\n    if (index > -1 && !selectDisabled.value) {\n      const value = [...props.modelValue.slice(0, index), ...props.modelValue.slice(index + 1)];\n      states.cachedOptions.splice(index, 1);\n      update(value);\n      emit(\"remove-tag\", get(tag, valueKey));\n      states.softFocus = true;\n      removeNewOption(tag);\n      return nextTick(focusAndUpdatePopup);\n    }\n    event.stopPropagation();\n  };\n  const handleFocus = event => {\n    const focused = states.isComposing;\n    states.isComposing = true;\n    if (!states.softFocus) {\n      if (!focused) emit(\"focus\", event);\n    } else {\n      states.softFocus = false;\n    }\n  };\n  const handleBlur = event => {\n    states.softFocus = false;\n    return nextTick(() => {\n      var _a, _b;\n      (_b = (_a = inputRef.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n      if (calculatorRef.value) {\n        states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n      }\n      if (states.isSilentBlur) {\n        states.isSilentBlur = false;\n      } else {\n        if (states.isComposing) {\n          emit(\"blur\", event);\n        }\n      }\n      states.isComposing = false;\n    });\n  };\n  const handleEsc = () => {\n    if (states.displayInputValue.length > 0) {\n      onUpdateInputValue(\"\");\n    } else {\n      expanded.value = false;\n    }\n  };\n  const handleDel = e => {\n    if (states.displayInputValue.length === 0) {\n      e.preventDefault();\n      const selected = props.modelValue.slice();\n      selected.pop();\n      removeNewOption(states.cachedOptions.pop());\n      update(selected);\n    }\n  };\n  const handleClear = () => {\n    let emptyValue;\n    if (isArray(props.modelValue)) {\n      emptyValue = [];\n    } else {\n      emptyValue = void 0;\n    }\n    states.softFocus = true;\n    if (props.multiple) {\n      states.cachedOptions = [];\n    } else {\n      states.selectedLabel = \"\";\n    }\n    expanded.value = false;\n    update(emptyValue);\n    emit(\"clear\");\n    clearAllNewOption();\n    return nextTick(focusAndUpdatePopup);\n  };\n  const onUpdateInputValue = val => {\n    states.displayInputValue = val;\n    states.inputValue = val;\n  };\n  const onKeyboardNavigate = (direction, hoveringIndex = void 0) => {\n    const options = filteredOptions.value;\n    if (![\"forward\", \"backward\"].includes(direction) || selectDisabled.value || options.length <= 0 || optionsAllDisabled.value) {\n      return;\n    }\n    if (!expanded.value) {\n      return toggleMenu();\n    }\n    if (hoveringIndex === void 0) {\n      hoveringIndex = states.hoveringIndex;\n    }\n    let newIndex = -1;\n    if (direction === \"forward\") {\n      newIndex = hoveringIndex + 1;\n      if (newIndex >= options.length) {\n        newIndex = 0;\n      }\n    } else if (direction === \"backward\") {\n      newIndex = hoveringIndex - 1;\n      if (newIndex < 0 || newIndex >= options.length) {\n        newIndex = options.length - 1;\n      }\n    }\n    const option = options[newIndex];\n    if (option.disabled || option.type === \"Group\") {\n      return onKeyboardNavigate(direction, newIndex);\n    } else {\n      updateHoveringIndex(newIndex);\n      scrollToItem(newIndex);\n    }\n  };\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu();\n    } else if (~states.hoveringIndex && filteredOptions.value[states.hoveringIndex]) {\n      onSelect(filteredOptions.value[states.hoveringIndex], states.hoveringIndex, false);\n    }\n  };\n  const updateHoveringIndex = idx => {\n    states.hoveringIndex = idx;\n  };\n  const resetHoveringIndex = () => {\n    states.hoveringIndex = -1;\n  };\n  const setSoftFocus = () => {\n    var _a;\n    const _input = inputRef.value;\n    if (_input) {\n      (_a = _input.focus) == null ? void 0 : _a.call(_input);\n    }\n  };\n  const onInput = event => {\n    const value = event.target.value;\n    onUpdateInputValue(value);\n    if (states.displayInputValue.length > 0 && !expanded.value) {\n      expanded.value = true;\n    }\n    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width;\n    if (props.multiple) {\n      resetInputHeight();\n    }\n    if (props.remote) {\n      debouncedOnInputChange();\n    } else {\n      return onInputChange();\n    }\n  };\n  const handleClickOutside = () => {\n    expanded.value = false;\n    return handleBlur();\n  };\n  const handleMenuEnter = () => {\n    states.inputValue = states.displayInputValue;\n    return nextTick(() => {\n      if (~indexRef.value) {\n        updateHoveringIndex(indexRef.value);\n        scrollToItem(states.hoveringIndex);\n      }\n    });\n  };\n  const scrollToItem = index => {\n    menuRef.value.scrollToItem(index);\n  };\n  const initStates = () => {\n    resetHoveringIndex();\n    if (props.multiple) {\n      if (props.modelValue.length > 0) {\n        let initHovering = false;\n        states.cachedOptions.length = 0;\n        states.previousValue = props.modelValue.toString();\n        props.modelValue.forEach(selected => {\n          const itemIndex = filteredOptions.value.findIndex(option => getValueKey(option) === selected);\n          if (~itemIndex) {\n            states.cachedOptions.push(filteredOptions.value[itemIndex]);\n            if (!initHovering) {\n              updateHoveringIndex(itemIndex);\n            }\n            initHovering = true;\n          }\n        });\n      } else {\n        states.cachedOptions = [];\n        states.previousValue = void 0;\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue;\n        const options = filteredOptions.value;\n        const selectedItemIndex = options.findIndex(option => getValueKey(option) === getValueKey(props.modelValue));\n        if (~selectedItemIndex) {\n          states.selectedLabel = options[selectedItemIndex].label;\n          updateHoveringIndex(selectedItemIndex);\n        } else {\n          states.selectedLabel = `${props.modelValue}`;\n        }\n      } else {\n        states.selectedLabel = \"\";\n        states.previousValue = void 0;\n      }\n    }\n    clearAllNewOption();\n    calculatePopperSize();\n  };\n  watch(expanded, val => {\n    var _a, _b;\n    emit(\"visible-change\", val);\n    if (val) {\n      (_b = (_a = popper.value).update) == null ? void 0 : _b.call(_a);\n    } else {\n      states.displayInputValue = \"\";\n      states.previousQuery = null;\n      createNewOption(\"\");\n    }\n  });\n  watch(() => props.modelValue, (val, oldVal) => {\n    var _a;\n    if (!val || val.toString() !== states.previousValue) {\n      initStates();\n    }\n    if (!isEqual(val, oldVal) && props.validateEvent) {\n      (_a = elFormItem == null ? void 0 : elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => debugWarn(err));\n    }\n  }, {\n    deep: true\n  });\n  watch(() => props.options, () => {\n    const input = inputRef.value;\n    if (!input || input && document.activeElement !== input) {\n      initStates();\n    }\n  }, {\n    deep: true\n  });\n  watch(filteredOptions, () => {\n    return nextTick(menuRef.value.resetScrollTop);\n  });\n  watch(() => dropdownMenuVisible.value, val => {\n    if (!val) {\n      resetHoveringIndex();\n    }\n  });\n  onMounted(() => {\n    initStates();\n  });\n  useResizeObserver(selectRef, handleResize);\n  return {\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce: debounce$1,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    inputWrapperStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    tagMaxWidth,\n    nsSelectV2,\n    nsInput,\n    calculatorRef,\n    controlRef,\n    inputRef,\n    menuRef,\n    popper,\n    selectRef,\n    selectionRef,\n    popperRef,\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    handleMenuEnter,\n    handleResize,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: updateHoveringIndex,\n    onUpdateInputValue,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate\n  };\n};\nexport { useSelect as default };","map":{"version":3,"names":["DEFAULT_INPUT_PLACEHOLDER","MINIMUM_INPUT_WIDTH","TAG_BASE_WIDTH","larget","default","small","useSelect","props","emit","t","useLocale","nsSelectV2","useNamespace","nsInput","form","elForm","formItem","elFormItem","useFormItem","states","reactive","inputValue","displayInputValue","calculatedWidth","cachedPlaceholder","cachedOptions","createdOptions","createdLabel","createdSelected","currentPlaceholder","hoveringIndex","comboBoxHovering","isOnComposition","isSilentBlur","isComposing","inputLength","selectWidth","initialInputHeight","previousQuery","previousValue","query","selectedLabel","softFocus","tagInMultiLine","selectedIndex","ref","popperSize","controlRef","inputRef","menuRef","popper","selectRef","selectionRef","calculatorRef","expanded","selectDisabled","computed","disabled","popupHeight","totalHeight","filteredOptions","value","length","height","hasModelValue","isNil","modelValue","showClearBtn","hasValue","multiple","Array","isArray","criteria","clearable","iconComponent","remote","filterable","ArrowUp","iconReverse","is","validateState","validateIcon","ValidateComponentsMap","debounce$1","emptyText","options","loading","loadingText","noMatchText","noDataText","isValidOption","o","regexp","RegExp","escapeStringRegexp","containsQueryString","test","label","flattenOptions","concat","map","v","filtered","filter","optionsAllDisabled","every","option","selectSize","useFormSize","collapseTagSize","tagMaxWidth","select","size","paddingLeft","Number","parseInt","getComputedStyle","paddingRight","calculatePopperSize","_a","offsetWidth","inputWrapperStyle","width","Math","ceil","shouldShowPlaceholder","_placeholder","placeholder","popperRef","_b","contentRef","indexRef","len","findIndex","dropdownMenuVisible","get","set","val","showTagList","slice","maxCollapseTags","collapseTagList","createNewOption","removeNewOption","selectNewOption","clearAllNewOption","useAllowCreate","handleCompositionStart","handleCompositionUpdate","handleCompositionEnd","useInput","e","onInput","focusAndUpdatePopup","_c","focus","call","updatePopper","toggleMenu","automaticDropdown","nextTick","onInputChange","handleQueryChange","debouncedOnInputChange","debounce","isFunction","filterMethod","remoteMethod","emitChange","isEqual","CHANGE_EVENT","update","UPDATE_MODEL_EVENT","toString","getValueIndex","arr","isObject","indexOf","valueKey","index","some","item","i","getValueKey","getLabel","resetInputHeight","selection","offsetHeight","handleResize","resetInputWidth","getBoundingClientRect","onSelect","idx","byClick","selectedOptions","splice","multipleLimit","push","updateHoveringIndex","created","reserveKeyword","onUpdateInputValue","setSoftFocus","deleteTag","event","tag","stopPropagation","handleFocus","focused","handleBlur","blur","handleEsc","handleDel","preventDefault","selected","pop","handleClear","emptyValue","onKeyboardNavigate","direction","includes","newIndex","type","scrollToItem","onKeyboardSelect","resetHoveringIndex","_input","target","handleClickOutside","handleMenuEnter","initStates","initHovering","forEach","itemIndex","selectedItemIndex","watch","oldVal","validateEvent","validate","catch","err","debugWarn","deep","input","document","activeElement","resetScrollTop","onMounted","useResizeObserver","scrollTo","onHover"],"sources":["../../../../../../packages/components/select-v2/src/useSelect.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, nextTick, onMounted, reactive, ref, watch } from 'vue'\nimport { isArray, isFunction, isObject } from '@vue/shared'\nimport { get, isEqual, isNil, debounce as lodashDebounce } from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  escapeStringRegexp,\n} from '@element-plus/utils'\nimport { useFormItem, useFormSize } from '@element-plus/components/form'\n\nimport { ArrowUp } from '@element-plus/icons-vue'\nimport { useAllowCreate } from './useAllowCreate'\n\nimport { flattenOptions } from './util'\n\nimport { useInput } from './useInput'\nimport type ElTooltip from '@element-plus/components/tooltip'\nimport type { SelectProps } from './defaults'\nimport type { CSSProperties, ExtractPropTypes } from 'vue'\nimport type { Option, OptionType } from './select.types'\n\nconst DEFAULT_INPUT_PLACEHOLDER = ''\nconst MINIMUM_INPUT_WIDTH = 11\nconst TAG_BASE_WIDTH = {\n  larget: 51,\n  default: 42,\n  small: 33,\n}\n\nconst useSelect = (props: ExtractPropTypes<typeof SelectProps>, emit) => {\n  // inject\n  const { t } = useLocale()\n  const nsSelectV2 = useNamespace('select-v2')\n  const nsInput = useNamespace('input')\n  const { form: elForm, formItem: elFormItem } = useFormItem()\n\n  const states = reactive({\n    inputValue: DEFAULT_INPUT_PLACEHOLDER,\n    displayInputValue: DEFAULT_INPUT_PLACEHOLDER,\n    calculatedWidth: 0,\n    cachedPlaceholder: '',\n    cachedOptions: [] as Option[],\n    createdOptions: [] as Option[],\n    createdLabel: '',\n    createdSelected: false,\n    currentPlaceholder: '',\n    hoveringIndex: -1,\n    comboBoxHovering: false,\n    isOnComposition: false,\n    isSilentBlur: false,\n    isComposing: false,\n    inputLength: 20,\n    selectWidth: 200,\n    initialInputHeight: 0,\n    previousQuery: null,\n    previousValue: undefined,\n    query: '',\n    selectedLabel: '',\n    softFocus: false,\n    tagInMultiLine: false,\n  })\n\n  // data refs\n  const selectedIndex = ref(-1)\n  const popperSize = ref(-1)\n\n  // DOM & Component refs\n  const controlRef = ref(null)\n  const inputRef = ref(null) // el-input ref\n  const menuRef = ref(null)\n  const popper = ref<InstanceType<typeof ElTooltip> | null>(null)\n  const selectRef = ref(null)\n  const selectionRef = ref(null) // tags ref\n  const calculatorRef = ref<HTMLElement>(null)\n\n  // the controller of the expanded popup\n  const expanded = ref(false)\n\n  const selectDisabled = computed(() => props.disabled || elForm?.disabled)\n\n  const popupHeight = computed(() => {\n    const totalHeight = filteredOptions.value.length * 34\n    return totalHeight > props.height ? props.height : totalHeight\n  })\n\n  const hasModelValue = computed(() => {\n    return !isNil(props.modelValue)\n  })\n\n  const showClearBtn = computed(() => {\n    const hasValue = props.multiple\n      ? Array.isArray(props.modelValue) && props.modelValue.length > 0\n      : hasModelValue.value\n\n    const criteria =\n      props.clearable &&\n      !selectDisabled.value &&\n      states.comboBoxHovering &&\n      hasValue\n    return criteria\n  })\n\n  const iconComponent = computed(() =>\n    props.remote && props.filterable ? '' : ArrowUp\n  )\n\n  const iconReverse = computed(\n    () => iconComponent.value && nsSelectV2.is('reverse', expanded.value)\n  )\n\n  const validateState = computed(() => elFormItem?.validateState || '')\n  const validateIcon = computed(\n    () => ValidateComponentsMap[validateState.value]\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  // filteredOptions includes flatten the data into one dimensional array.\n  const emptyText = computed(() => {\n    const options = filteredOptions.value\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (props.remote && states.inputValue === '' && options.length === 0)\n        return false\n      if (props.filterable && states.inputValue && options.length > 0) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (options.length === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filteredOptions = computed(() => {\n    const isValidOption = (o: Option): boolean => {\n      // fill the conditions here.\n      const query = states.inputValue\n      // when query was given, we should test on the label see whether the label contains the given query\n      const regexp = new RegExp(escapeStringRegexp(query), 'i')\n      const containsQueryString = query ? regexp.test(o.label || '') : true\n      return containsQueryString\n    }\n    if (props.loading) {\n      return []\n    }\n    return flattenOptions(\n      (props.options as OptionType[])\n        .concat(states.createdOptions)\n        .map((v) => {\n          if (isArray(v.options)) {\n            const filtered = v.options.filter(isValidOption)\n            if (filtered.length > 0) {\n              return {\n                ...v,\n                options: filtered,\n              }\n            }\n          } else {\n            if (props.remote || isValidOption(v as Option)) {\n              return v\n            }\n          }\n          return null\n        })\n        .filter((v) => v !== null)\n    )\n  })\n\n  const optionsAllDisabled = computed(() =>\n    filteredOptions.value.every((option) => option.disabled)\n  )\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    'small' === selectSize.value ? 'small' : 'default'\n  )\n\n  const tagMaxWidth = computed(() => {\n    const select = selectionRef.value\n    const size = collapseTagSize.value || 'default'\n    const paddingLeft = select\n      ? Number.parseInt(getComputedStyle(select).paddingLeft)\n      : 0\n    const paddingRight = select\n      ? Number.parseInt(getComputedStyle(select).paddingRight)\n      : 0\n    return (\n      states.selectWidth - paddingRight - paddingLeft - TAG_BASE_WIDTH[size]\n    )\n  })\n\n  const calculatePopperSize = () => {\n    popperSize.value = selectRef.value?.offsetWidth || 200\n  }\n\n  const inputWrapperStyle = computed(() => {\n    return {\n      width: `${\n        states.calculatedWidth === 0\n          ? MINIMUM_INPUT_WIDTH\n          : Math.ceil(states.calculatedWidth) + MINIMUM_INPUT_WIDTH\n      }px`,\n    } as CSSProperties\n  })\n\n  const shouldShowPlaceholder = computed(() => {\n    if (isArray(props.modelValue)) {\n      return props.modelValue.length === 0 && !states.displayInputValue\n    }\n\n    // when it's not multiple mode, we only determine this flag based on filterable and expanded\n    // when filterable flag is true, which means we have input box on the screen\n    return props.filterable ? states.displayInputValue.length === 0 : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder || t('el.select.placeholder')\n    return props.multiple || isNil(props.modelValue)\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // this obtains the actual popper DOM element.\n  const popperRef = computed(() => popper.value?.popperRef?.contentRef)\n\n  // the index with current value in options\n  const indexRef = computed<number>(() => {\n    if (props.multiple) {\n      const len = (props.modelValue as []).length\n      if ((props.modelValue as Array<any>).length > 0) {\n        return filteredOptions.value.findIndex(\n          (o) => o.value === props.modelValue[len - 1]\n        )\n      }\n    } else {\n      if (props.modelValue) {\n        return filteredOptions.value.findIndex(\n          (o) => o.value === props.modelValue\n        )\n      }\n    }\n    return -1\n  })\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && emptyText.value !== false\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  const showTagList = computed(() =>\n    states.cachedOptions.slice(0, props.maxCollapseTags)\n  )\n\n  const collapseTagList = computed(() =>\n    states.cachedOptions.slice(props.maxCollapseTags)\n  )\n\n  // hooks\n  const {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  } = useAllowCreate(props, states)\n  const {\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useInput((e) => onInput(e))\n\n  // methods\n  const focusAndUpdatePopup = () => {\n    inputRef.value?.focus?.()\n    popper.value?.updatePopper()\n  }\n\n  const toggleMenu = () => {\n    if (props.automaticDropdown) return\n    if (!selectDisabled.value) {\n      if (states.isComposing) states.softFocus = true\n      return nextTick(() => {\n        expanded.value = !expanded.value\n        inputRef.value?.focus?.()\n      })\n    }\n  }\n\n  const onInputChange = () => {\n    if (props.filterable && states.inputValue !== states.selectedLabel) {\n      states.query = states.selectedLabel\n    }\n    handleQueryChange(states.inputValue)\n    return nextTick(() => {\n      createNewOption(states.inputValue)\n    })\n  }\n\n  const debouncedOnInputChange = lodashDebounce(onInputChange, debounce.value)\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n  }\n\n  const emitChange = (val: any | any[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const update = (val: any) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emitChange(val)\n    states.previousValue = val?.toString()\n  }\n\n  const getValueIndex = (arr = [], value: unknown) => {\n    if (!isObject(value)) {\n      return arr.indexOf(value)\n    }\n    const valueKey = props.valueKey\n    let index = -1\n    arr.some((item, i) => {\n      if (get(item, valueKey) === get(value, valueKey)) {\n        index = i\n        return true\n      }\n      return false\n    })\n    return index\n  }\n\n  const getValueKey = (item: unknown) => {\n    return isObject(item) ? get(item, props.valueKey) : item\n  }\n\n  // if the selected item is item then we get label via indexing\n  // otherwise it should be string we simply return the item itself.\n  const getLabel = (item: unknown) => {\n    return isObject(item) ? item.label : item\n  }\n\n  const resetInputHeight = () => {\n    return nextTick(() => {\n      if (!inputRef.value) return\n      const selection = selectionRef.value\n\n      selectRef.value.height = selection.offsetHeight\n      if (expanded.value && emptyText.value !== false) {\n        popper.value?.updatePopper?.()\n      }\n    })\n  }\n\n  const handleResize = () => {\n    resetInputWidth()\n    calculatePopperSize()\n    popper.value?.updatePopper?.()\n    if (props.multiple) {\n      return resetInputHeight()\n    }\n  }\n\n  const resetInputWidth = () => {\n    const select = selectionRef.value\n    if (select) {\n      states.selectWidth = select.getBoundingClientRect().width\n    }\n  }\n\n  const onSelect = (option: Option, idx: number, byClick = true) => {\n    if (props.multiple) {\n      let selectedOptions = (props.modelValue as any[]).slice()\n\n      const index = getValueIndex(selectedOptions, getValueKey(option))\n      if (index > -1) {\n        selectedOptions = [\n          ...selectedOptions.slice(0, index),\n          ...selectedOptions.slice(index + 1),\n        ]\n        states.cachedOptions.splice(index, 1)\n        removeNewOption(option)\n      } else if (\n        props.multipleLimit <= 0 ||\n        selectedOptions.length < props.multipleLimit\n      ) {\n        selectedOptions = [...selectedOptions, getValueKey(option)]\n        states.cachedOptions.push(option)\n        selectNewOption(option)\n        updateHoveringIndex(idx)\n      }\n      update(selectedOptions)\n      if (option.created) {\n        states.query = ''\n        handleQueryChange('')\n        states.inputLength = 20\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        inputRef.value.focus?.()\n        onUpdateInputValue('')\n      }\n      if (props.filterable) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      resetInputHeight()\n      setSoftFocus()\n    } else {\n      selectedIndex.value = idx\n      states.selectedLabel = option.label\n      update(getValueKey(option))\n      expanded.value = false\n      states.isComposing = false\n      states.isSilentBlur = byClick\n      selectNewOption(option)\n      if (!option.created) {\n        clearAllNewOption()\n      }\n      updateHoveringIndex(idx)\n    }\n  }\n\n  const deleteTag = (event: MouseEvent, tag: Option) => {\n    const { valueKey } = props\n    const index = (props.modelValue as Array<any>).indexOf(get(tag, valueKey))\n\n    if (index > -1 && !selectDisabled.value) {\n      const value = [\n        ...(props.modelValue as Array<unknown>).slice(0, index),\n        ...(props.modelValue as Array<unknown>).slice(index + 1),\n      ]\n      states.cachedOptions.splice(index, 1)\n      update(value)\n      emit('remove-tag', get(tag, valueKey))\n      states.softFocus = true\n      removeNewOption(tag)\n      return nextTick(focusAndUpdatePopup)\n    }\n    event.stopPropagation()\n  }\n\n  const handleFocus = (event: FocusEvent) => {\n    const focused = states.isComposing\n    states.isComposing = true\n    if (!states.softFocus) {\n      // If already in the focus state, shouldn't trigger event\n      if (!focused) emit('focus', event)\n    } else {\n      states.softFocus = false\n    }\n  }\n\n  const handleBlur = (event: FocusEvent) => {\n    states.softFocus = false\n\n    // reset input value when blurred\n    // https://github.com/ElemeFE/element/pull/10822\n    return nextTick(() => {\n      inputRef.value?.blur?.()\n      if (calculatorRef.value) {\n        states.calculatedWidth =\n          calculatorRef.value.getBoundingClientRect().width\n      }\n      if (states.isSilentBlur) {\n        states.isSilentBlur = false\n      } else {\n        if (states.isComposing) {\n          emit('blur', event)\n        }\n      }\n      states.isComposing = false\n    })\n  }\n\n  // keyboard handlers\n  const handleEsc = () => {\n    if (states.displayInputValue.length > 0) {\n      onUpdateInputValue('')\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const handleDel = (e: KeyboardEvent) => {\n    if (states.displayInputValue.length === 0) {\n      e.preventDefault()\n      const selected = (props.modelValue as Array<any>).slice()\n      selected.pop()\n      removeNewOption(states.cachedOptions.pop())\n      update(selected)\n    }\n  }\n\n  const handleClear = () => {\n    let emptyValue: string | any[]\n    if (isArray(props.modelValue)) {\n      emptyValue = []\n    } else {\n      emptyValue = undefined\n    }\n\n    states.softFocus = true\n    if (props.multiple) {\n      states.cachedOptions = []\n    } else {\n      states.selectedLabel = ''\n    }\n    expanded.value = false\n    update(emptyValue)\n    emit('clear')\n    clearAllNewOption()\n    return nextTick(focusAndUpdatePopup)\n  }\n\n  const onUpdateInputValue = (val: string) => {\n    states.displayInputValue = val\n    states.inputValue = val\n  }\n\n  const onKeyboardNavigate = (\n    direction: 'forward' | 'backward',\n    hoveringIndex: number = undefined\n  ) => {\n    const options = filteredOptions.value\n    if (\n      !['forward', 'backward'].includes(direction) ||\n      selectDisabled.value ||\n      options.length <= 0 ||\n      optionsAllDisabled.value\n    ) {\n      return\n    }\n    if (!expanded.value) {\n      return toggleMenu()\n    }\n    if (hoveringIndex === undefined) {\n      hoveringIndex = states.hoveringIndex\n    }\n    let newIndex = -1\n    if (direction === 'forward') {\n      newIndex = hoveringIndex + 1\n      if (newIndex >= options.length) {\n        // return to the first option\n        newIndex = 0\n      }\n    } else if (direction === 'backward') {\n      newIndex = hoveringIndex - 1\n      if (newIndex < 0 || newIndex >= options.length) {\n        // navigate to the last one\n        newIndex = options.length - 1\n      }\n    }\n    const option = options[newIndex]\n    if (option.disabled || option.type === 'Group') {\n      // prevent dispatching multiple nextTick callbacks.\n      return onKeyboardNavigate(direction, newIndex)\n    } else {\n      updateHoveringIndex(newIndex)\n      scrollToItem(newIndex)\n    }\n  }\n\n  const onKeyboardSelect = () => {\n    if (!expanded.value) {\n      return toggleMenu()\n    } else if (\n      ~states.hoveringIndex &&\n      filteredOptions.value[states.hoveringIndex]\n    ) {\n      onSelect(\n        filteredOptions.value[states.hoveringIndex],\n        states.hoveringIndex,\n        false\n      )\n    }\n  }\n\n  const updateHoveringIndex = (idx: number) => {\n    states.hoveringIndex = idx\n  }\n\n  const resetHoveringIndex = () => {\n    states.hoveringIndex = -1\n  }\n\n  const setSoftFocus = () => {\n    const _input = inputRef.value\n    if (_input) {\n      _input.focus?.()\n    }\n  }\n\n  const onInput = (event) => {\n    const value = event.target.value\n    onUpdateInputValue(value)\n    if (states.displayInputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n\n    states.calculatedWidth = calculatorRef.value.getBoundingClientRect().width\n    if (props.multiple) {\n      resetInputHeight()\n    }\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const handleClickOutside = () => {\n    expanded.value = false\n    return handleBlur()\n  }\n\n  const handleMenuEnter = () => {\n    states.inputValue = states.displayInputValue\n    return nextTick(() => {\n      if (~indexRef.value) {\n        updateHoveringIndex(indexRef.value)\n        scrollToItem(states.hoveringIndex)\n      }\n    })\n  }\n\n  const scrollToItem = (index: number) => {\n    menuRef.value.scrollToItem(index)\n  }\n\n  const initStates = () => {\n    resetHoveringIndex()\n    if (props.multiple) {\n      if ((props.modelValue as Array<any>).length > 0) {\n        let initHovering = false\n        states.cachedOptions.length = 0\n        states.previousValue = props.modelValue.toString()\n        ;(props.modelValue as Array<any>).forEach((selected) => {\n          const itemIndex = filteredOptions.value.findIndex(\n            (option) => getValueKey(option) === selected\n          )\n          if (~itemIndex) {\n            states.cachedOptions.push(\n              filteredOptions.value[itemIndex] as Option\n            )\n            if (!initHovering) {\n              updateHoveringIndex(itemIndex)\n            }\n            initHovering = true\n          }\n        })\n      } else {\n        states.cachedOptions = []\n        states.previousValue = undefined\n      }\n    } else {\n      if (hasModelValue.value) {\n        states.previousValue = props.modelValue\n        const options = filteredOptions.value\n        const selectedItemIndex = options.findIndex(\n          (option) => getValueKey(option) === getValueKey(props.modelValue)\n        )\n        if (~selectedItemIndex) {\n          states.selectedLabel = options[selectedItemIndex].label\n          updateHoveringIndex(selectedItemIndex)\n        } else {\n          states.selectedLabel = `${props.modelValue}`\n        }\n      } else {\n        states.selectedLabel = ''\n        states.previousValue = undefined\n      }\n    }\n    clearAllNewOption()\n    calculatePopperSize()\n  }\n\n  // in order to track these individually, we need to turn them into refs instead of watching the entire\n  // reactive object which could cause perf penalty when unnecessary field gets changed the watch method will\n  // be invoked.\n\n  watch(expanded, (val) => {\n    emit('visible-change', val)\n    if (val) {\n      popper.value.update?.()\n      // the purpose of this function is to differ the blur event trigger mechanism\n    } else {\n      states.displayInputValue = ''\n      states.previousQuery = null\n      createNewOption('')\n    }\n  })\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (!val || val.toString() !== states.previousValue) {\n        initStates()\n      }\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        elFormItem?.validate?.('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  watch(\n    () => props.options,\n    () => {\n      const input = inputRef.value\n      // filter or remote-search scenarios are not initialized\n      if (!input || (input && document.activeElement !== input)) {\n        initStates()\n      }\n    },\n    {\n      deep: true,\n    }\n  )\n\n  // fix the problem that scrollTop is not reset in filterable mode\n  watch(filteredOptions, () => {\n    return nextTick(menuRef.value.resetScrollTop)\n  })\n\n  watch(\n    () => dropdownMenuVisible.value,\n    (val) => {\n      if (!val) {\n        resetHoveringIndex()\n      }\n    }\n  )\n\n  onMounted(() => {\n    initStates()\n  })\n  useResizeObserver(selectRef, handleResize)\n\n  return {\n    // data exports\n    collapseTagSize,\n    currentPlaceholder,\n    expanded,\n    emptyText,\n    popupHeight,\n    debounce,\n    filteredOptions,\n    iconComponent,\n    iconReverse,\n    inputWrapperStyle,\n    popperSize,\n    dropdownMenuVisible,\n    hasModelValue,\n    // readonly,\n    shouldShowPlaceholder,\n    selectDisabled,\n    selectSize,\n    showClearBtn,\n    states,\n    tagMaxWidth,\n    nsSelectV2,\n    nsInput,\n\n    // refs items exports\n    calculatorRef,\n    controlRef,\n    inputRef,\n    menuRef,\n    popper,\n    selectRef,\n    selectionRef,\n\n    popperRef,\n\n    validateState,\n    validateIcon,\n    showTagList,\n    collapseTagList,\n\n    // methods exports\n    debouncedOnInputChange,\n    deleteTag,\n    getLabel,\n    getValueKey,\n    handleBlur,\n    handleClear,\n    handleClickOutside,\n    handleDel,\n    handleEsc,\n    handleFocus,\n    handleMenuEnter,\n    handleResize,\n    toggleMenu,\n    scrollTo: scrollToItem,\n    onInput,\n    onKeyboardNavigate,\n    onKeyboardSelect,\n    onSelect,\n    onHover: updateHoveringIndex,\n    onUpdateInputValue,\n    handleCompositionStart,\n    handleCompositionEnd,\n    handleCompositionUpdate,\n  }\n}\n\nexport default useSelect\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}