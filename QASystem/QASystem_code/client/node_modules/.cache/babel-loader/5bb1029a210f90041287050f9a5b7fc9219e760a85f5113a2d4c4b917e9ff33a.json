{"ast":null,"code":"import { defineComponent, ref, computed, watch, nextTick, openBlock, createElementBlock, unref, normalizeClass, createElementVNode, Fragment, renderList, withKeys, withModifiers, toDisplayString } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../hooks/index.mjs';\nimport '../../../time-picker/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { basicYearTableProps } from '../props/basic-year-table.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { rangeArr } from '../../../time-picker/src/utils.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { castArray } from '../../../../utils/arrays.mjs';\nimport { hasClass } from '../../../../utils/dom/style.mjs';\nconst _hoisted_1 = [\"aria-label\"];\nconst _hoisted_2 = [\"aria-selected\", \"tabindex\", \"onKeydown\"];\nconst _hoisted_3 = {\n  class: \"cell\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"basic-year-table\",\n  props: basicYearTableProps,\n  emits: [\"pick\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const datesInYear = (year, lang2) => {\n      const firstDay = dayjs(String(year)).locale(lang2).startOf(\"year\");\n      const lastDay = firstDay.endOf(\"year\");\n      const numOfDays = lastDay.dayOfYear();\n      return rangeArr(numOfDays).map(n => firstDay.add(n, \"day\").toDate());\n    };\n    const ns = useNamespace(\"year-table\");\n    const {\n      t,\n      lang\n    } = useLocale();\n    const tbodyRef = ref();\n    const currentCellRef = ref();\n    const startYear = computed(() => {\n      return Math.floor(props.date.year() / 10) * 10;\n    });\n    const focus = () => {\n      var _a;\n      (_a = currentCellRef.value) == null ? void 0 : _a.focus();\n    };\n    const getCellKls = year => {\n      const kls = {};\n      const today = dayjs().locale(lang.value);\n      kls.disabled = props.disabledDate ? datesInYear(year, lang.value).every(props.disabledDate) : false;\n      kls.current = castArray(props.parsedValue).findIndex(d => d.year() === year) >= 0;\n      kls.today = today.year() === year;\n      return kls;\n    };\n    const isSelectedCell = year => {\n      return year === startYear.value && props.date.year() < startYear.value && props.date.year() > startYear.value + 9 || castArray(props.date).findIndex(date => date.year() === year) >= 0;\n    };\n    const handleYearTableClick = event => {\n      const clickTarget = event.target;\n      const target = clickTarget.closest(\"td\");\n      if (target && target.textContent) {\n        if (hasClass(target, \"disabled\")) return;\n        const year = target.textContent || target.innerText;\n        emit(\"pick\", Number(year));\n      }\n    };\n    watch(() => props.date, async () => {\n      var _a, _b;\n      if ((_a = tbodyRef.value) == null ? void 0 : _a.contains(document.activeElement)) {\n        await nextTick();\n        (_b = currentCellRef.value) == null ? void 0 : _b.focus();\n      }\n    });\n    expose({\n      focus\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"table\", {\n        role: \"grid\",\n        \"aria-label\": unref(t)(\"el.datepicker.yearTablePrompt\"),\n        class: normalizeClass(unref(ns).b()),\n        onClick: handleYearTableClick\n      }, [createElementVNode(\"tbody\", {\n        ref_key: \"tbodyRef\",\n        ref: tbodyRef\n      }, [(openBlock(), createElementBlock(Fragment, null, renderList(3, (_, i) => {\n        return createElementVNode(\"tr\", {\n          key: i\n        }, [(openBlock(), createElementBlock(Fragment, null, renderList(4, (__, j) => {\n          return openBlock(), createElementBlock(Fragment, {\n            key: i + \"_\" + j\n          }, [i * 4 + j < 10 ? (openBlock(), createElementBlock(\"td\", {\n            key: 0,\n            ref_for: true,\n            ref: el => isSelectedCell(unref(startYear) + i * 4 + j) && (currentCellRef.value = el),\n            class: normalizeClass([\"available\", getCellKls(unref(startYear) + i * 4 + j)]),\n            \"aria-selected\": `${isSelectedCell(unref(startYear) + i * 4 + j)}`,\n            tabindex: isSelectedCell(unref(startYear) + i * 4 + j) ? 0 : -1,\n            onKeydown: [withKeys(withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"space\"]), withKeys(withModifiers(handleYearTableClick, [\"prevent\", \"stop\"]), [\"enter\"])]\n          }, [createElementVNode(\"span\", _hoisted_3, toDisplayString(unref(startYear) + i * 4 + j), 1)], 42, _hoisted_2)) : (openBlock(), createElementBlock(\"td\", _hoisted_4))], 64);\n        }), 64))]);\n      }), 64))], 512)], 10, _hoisted_1);\n    };\n  }\n});\nvar YearTable = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/basic-year-table.vue\"]]);\nexport { YearTable as default };","map":{"version":3,"names":["datesInYear","year","lang2","firstDay","dayjs","String","locale","startOf","lastDay","endOf","numOfDays","dayOfYear","rangeArr","map","n","add","toDate","ns","useNamespace","t","lang","useLocale","tbodyRef","ref","currentCellRef","startYear","computed","Math","floor","props","date","focus","_a","value","getCellKls","kls","today","disabled","disabledDate","every","current","castArray","parsedValue","findIndex","d","isSelectedCell","handleYearTableClick","event","clickTarget","target","closest","textContent","hasClass","innerText","emit","Number","watch","_b","contains","document","activeElement","nextTick","expose"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/basic-year-table.vue"],"sourcesContent":["<template>\n  <table\n    role=\"grid\"\n    :aria-label=\"t('el.datepicker.yearTablePrompt')\"\n    :class=\"ns.b()\"\n    @click=\"handleYearTableClick\"\n  >\n    <tbody ref=\"tbodyRef\">\n      <tr v-for=\"(_, i) in 3\" :key=\"i\">\n        <template v-for=\"(__, j) in 4\" :key=\"i + '_' + j\">\n          <td\n            v-if=\"i * 4 + j < 10\"\n            :ref=\"\n              (el) =>\n                isSelectedCell(startYear + i * 4 + j) && (currentCellRef = el as HTMLElement)\n            \"\n            class=\"available\"\n            :class=\"getCellKls(startYear + i * 4 + j)\"\n            :aria-selected=\"`${isSelectedCell(startYear + i * 4 + j)}`\"\n            :tabindex=\"isSelectedCell(startYear + i * 4 + j) ? 0 : -1\"\n            @keydown.space.prevent.stop=\"handleYearTableClick\"\n            @keydown.enter.prevent.stop=\"handleYearTableClick\"\n          >\n            <span class=\"cell\">{{ startYear + i * 4 + j }}</span>\n          </td>\n          <td v-else />\n        </template>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, ref, watch } from 'vue'\nimport dayjs from 'dayjs'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { castArray, hasClass } from '@element-plus/utils'\nimport { basicYearTableProps } from '../props/basic-year-table'\n\nconst datesInYear = (year: number, lang: string) => {\n  const firstDay = dayjs(String(year)).locale(lang).startOf('year')\n  const lastDay = firstDay.endOf('year')\n  const numOfDays = lastDay.dayOfYear()\n  return rangeArr(numOfDays).map((n) => firstDay.add(n, 'day').toDate())\n}\n\nconst props = defineProps(basicYearTableProps)\nconst emit = defineEmits(['pick'])\n\nconst ns = useNamespace('year-table')\n\nconst { t, lang } = useLocale()\nconst tbodyRef = ref<HTMLElement>()\nconst currentCellRef = ref<HTMLElement>()\nconst startYear = computed(() => {\n  return Math.floor(props.date.year() / 10) * 10\n})\n\nconst focus = () => {\n  currentCellRef.value?.focus()\n}\n\nconst getCellKls = (year: number) => {\n  const kls: Record<string, boolean> = {}\n  const today = dayjs().locale(lang.value)\n\n  kls.disabled = props.disabledDate\n    ? datesInYear(year, lang.value).every(props.disabledDate)\n    : false\n\n  kls.current =\n    castArray(props.parsedValue).findIndex((d) => d!.year() === year) >= 0\n\n  kls.today = today.year() === year\n\n  return kls\n}\n\nconst isSelectedCell = (year: number) => {\n  return (\n    (year === startYear.value &&\n      props.date.year() < startYear.value &&\n      props.date.year() > startYear.value + 9) ||\n    castArray(props.date).findIndex((date) => date.year() === year) >= 0\n  )\n}\n\nconst handleYearTableClick = (event: MouseEvent | KeyboardEvent) => {\n  const clickTarget = event.target as HTMLDivElement\n  const target = clickTarget.closest('td')\n  if (target && target.textContent) {\n    if (hasClass(target, 'disabled')) return\n    const year = target.textContent || target.innerText\n    emit('pick', Number(year))\n  }\n}\n\nwatch(\n  () => props.date,\n  async () => {\n    if (tbodyRef.value?.contains(document.activeElement)) {\n      await nextTick()\n      currentCellRef.value?.focus()\n    }\n  }\n)\n\ndefineExpose({\n  /**\n   * @description focus on the current cell\n   */\n  focus,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}