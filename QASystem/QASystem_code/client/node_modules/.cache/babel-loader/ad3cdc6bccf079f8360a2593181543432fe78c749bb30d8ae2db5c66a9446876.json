{"ast":null,"code":"import { createVNode, mergeProps } from 'vue';\nimport '../components/index.mjs';\nimport { oppositeOrderMap, SortOrder, Alignment } from '../constants.mjs';\nimport { placeholderSign } from '../private.mjs';\nimport { enforceUnit, componentToSlot, tryCall } from '../utils.mjs';\nimport HeaderCell from '../components/header-cell.mjs';\nimport SortIcon from '../components/sort-icon.mjs';\nconst HeaderCellRenderer = (props, {\n  slots\n}) => {\n  const {\n    column,\n    ns,\n    style,\n    onColumnSorted\n  } = props;\n  const cellStyle = enforceUnit(style);\n  if (column.placeholderSign === placeholderSign) {\n    return createVNode(\"div\", {\n      \"class\": ns.em(\"header-row-cell\", \"placeholder\"),\n      \"style\": cellStyle\n    }, null);\n  }\n  const {\n    headerCellRenderer,\n    headerClass,\n    sortable\n  } = column;\n  const cellProps = {\n    ...props,\n    class: ns.e(\"header-cell-text\")\n  };\n  const cellRenderer = componentToSlot(headerCellRenderer) || slots.default || (props2 => createVNode(HeaderCell, props2, null));\n  const Cell = cellRenderer(cellProps);\n  const {\n    sortBy,\n    sortState,\n    headerCellProps\n  } = props;\n  let sorting, sortOrder;\n  if (sortState) {\n    const order = sortState[column.key];\n    sorting = Boolean(oppositeOrderMap[order]);\n    sortOrder = sorting ? order : SortOrder.ASC;\n  } else {\n    sorting = column.key === sortBy.key;\n    sortOrder = sorting ? sortBy.order : SortOrder.ASC;\n  }\n  const cellKls = [ns.e(\"header-cell\"), tryCall(headerClass, props, \"\"), column.align === Alignment.CENTER && ns.is(\"align-center\"), column.align === Alignment.RIGHT && ns.is(\"align-right\"), sortable && ns.is(\"sortable\")];\n  const cellWrapperProps = {\n    ...tryCall(headerCellProps, props),\n    onClick: column.sortable ? onColumnSorted : void 0,\n    class: cellKls,\n    style: cellStyle,\n    [\"data-key\"]: column.key\n  };\n  return createVNode(\"div\", mergeProps(cellWrapperProps, {\n    \"role\": \"columnheader\"\n  }), [Cell, sortable && createVNode(SortIcon, {\n    \"class\": [ns.e(\"sort-icon\"), sorting && ns.is(\"sorting\")],\n    \"sortOrder\": sortOrder\n  }, null)]);\n};\nexport { HeaderCellRenderer as default };","map":{"version":3,"names":["HeaderCellRenderer","props","column","ns","style","onColumnSorted","cellStyle","enforceUnit","placeholderSign","createVNode","headerCellRenderer","headerClass","cellProps","class","e","cellRenderer","componentToSlot","slots","default","props2","HeaderCell","Cell","sortState","headerCellProps","sorting","Boolean","oppositeOrderMap","order","sortOrder","SortOrder","ASC","key","sortBy","cellKls","tryCall","align","Alignment","CENTER","is","RIGHT","sortable","cellWrapperProps","onClick","mergeProps","SortIcon"],"sources":["../../../../../../../packages/components/table-v2/src/renderers/header-cell.tsx"],"sourcesContent":["import { HeaderCell, SortIcon } from '../components'\n// import ColumnResizer from '../table-column-resizer'\nimport { Alignment, SortOrder, oppositeOrderMap } from '../constants'\nimport { placeholderSign } from '../private'\nimport { componentToSlot, enforceUnit, tryCall } from '../utils'\n\nimport type { FunctionalComponent, UnwrapNestedRefs } from 'vue'\nimport type { UseNamespaceReturn } from '@element-plus/hooks'\nimport type { TableV2HeaderRowCellRendererParams } from '../components'\nimport type { UseTableReturn } from '../use-table'\nimport type { TableV2Props } from '../table'\nimport type { TableV2HeaderCell } from '../header-cell'\n\nexport type HeaderCellRendererProps = TableV2HeaderRowCellRendererParams &\n  UnwrapNestedRefs<Pick<UseTableReturn, 'onColumnSorted'>> &\n  Pick<TableV2Props, 'sortBy' | 'sortState' | 'headerCellProps'> & {\n    ns: UseNamespaceReturn\n  }\n\nconst HeaderCellRenderer: FunctionalComponent<HeaderCellRendererProps> = (\n  props,\n  { slots }\n) => {\n  const { column, ns, style, onColumnSorted } = props\n\n  const cellStyle = enforceUnit(style)\n\n  if (column.placeholderSign === placeholderSign) {\n    return (\n      <div class={ns.em('header-row-cell', 'placeholder')} style={cellStyle} />\n    )\n  }\n\n  const { headerCellRenderer, headerClass, sortable } = column\n\n  /**\n   * render Cell children\n   */\n\n  const cellProps = {\n    ...props,\n    class: ns.e('header-cell-text'),\n  }\n\n  const cellRenderer =\n    componentToSlot<typeof cellProps>(headerCellRenderer) ||\n    slots.default ||\n    ((props: TableV2HeaderCell) => <HeaderCell {...props} />)\n\n  const Cell = cellRenderer(cellProps)\n\n  /**\n   * Render cell container and sort indicator\n   */\n  const { sortBy, sortState, headerCellProps } = props\n\n  let sorting: boolean, sortOrder: SortOrder\n  if (sortState) {\n    const order = sortState[column.key]\n    sorting = Boolean(oppositeOrderMap[order])\n    sortOrder = sorting ? order : SortOrder.ASC\n  } else {\n    sorting = column.key === sortBy.key\n    sortOrder = sorting ? sortBy.order : SortOrder.ASC\n  }\n\n  const cellKls = [\n    ns.e('header-cell'),\n    tryCall(headerClass, props, ''),\n    column.align === Alignment.CENTER && ns.is('align-center'),\n    column.align === Alignment.RIGHT && ns.is('align-right'),\n    sortable && ns.is('sortable'),\n  ]\n\n  const cellWrapperProps = {\n    ...tryCall(headerCellProps, props),\n    onClick: column.sortable ? onColumnSorted : undefined,\n    class: cellKls,\n    style: cellStyle,\n    ['data-key']: column.key,\n  }\n\n  // For now we don't deliver resizable column feature since it has some UX issue.\n  return (\n    <div {...cellWrapperProps} role=\"columnheader\">\n      {Cell}\n\n      {sortable && (\n        <SortIcon\n          class={[ns.e('sort-icon'), sorting && ns.is('sorting')]}\n          sortOrder={sortOrder}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default HeaderCellRenderer\nexport type HeaderCellSlotProps = HeaderCellRendererProps & { class: string }\n"],"mappings":";;;;;;;AAIA,MAAAA,kBAAA,GAA0BA,CAAAC,KAAA;;AAe1B,MAAM;EAEF;IACCC,MAAA;IACGC,EAAA;IAAEC,KAAF;IAAUC;MAAVJ,KAAA;EAAqB,MAAAK,SAAA,GAAAC,WAAA,CAAAH,KAAA;EAArB,IAAwCF,MAA9C,CAAAM,eAAA,KAAAA,eAAA;IAEA,OAAeC,WAAc;;MAEzB,OAAO,EAAPH;IACF;EAAA;QAC8D;IAD9DI,kBAAA;IAGDC,WAAA;;GAEK,GAAAT,MAAA;QAAAU,SAAA;IAAsB,GAAtBX,KAAA;IAAmCY,KAAA,EAAAV,EAAA,CAAAW,CAAA;EAAnC;EAEN,MAAAC,YAAA,GAAAC,eAAA,CAAAN,kBAAA,KAAAO,KAAA,CAAAC,OAAA,KAAAC,MAAA,IAAAV,WAAA,CAAAW,UAAA,EAAAD,MAAA;EACF,MAAAE,IAAA,GAAAN,YAAA,CAAAH,SAAA;EACA;;IAEEU,SAAe;IAEbC;GAFF,GAAAtB,KAAA;;EAKA,IAAAqB,SAAkB;;IAKlBE,OAAU,GAAAC,OAAe,CAAAC,gBAAzB,CAAAC,KAAA;IAEAC,SAAA,GAAAJ,OAAA,GAAAG,KAAA,GAAAE,SAAA,CAAAC,GAAA;EACF;IACAN,OAAA,GAAAtB,MAAA,CAAA6B,GAAA,KAAAC,MAAA,CAAAD,GAAA;;;QACQE,OAAA,IAAA9B,EAAA,CAAAW,CAAA,iBAAAoB,OAAA,CAAAvB,WAAA,EAAAV,KAAA,OAAAC,MAAA,CAAAiC,KAAA,KAAAC,SAAA,CAAAC,MAAA,IAAAlC,EAAA,CAAAmC,EAAA,kBAAApC,MAAA,CAAAiC,KAAA,KAAAC,SAAA,CAAAG,KAAA,IAAApC,EAAA,CAAAmC,EAAA,iBAAAE,QAAA,IAAArC,EAAA,CAAAmC,EAAA;QAAAG,gBAAA;IAAqB,GAAAP,OAAA,CAAAX,eAAA,EAAAtB,KAAA;IAArByC,OAAN,EAAAxC,MAAA,CAAAsC,QAAA,GAAAnC,cAAA;IAEIQ,KAAA,EAAAoB,OAAJ;;IACA,cAAe/B,MAAA,CAAA6B;EACb;EACA,OAAAtB,WAAiB,CAAC,OAAAkC,UAAiB,CAAAF,gBAAnC;IACA;EACD,CAJD,CAIO,GAAApB,IAAA,EAAAmB,QAAA,IAAA/B,WAAA,CAAAmC,QAAA;IACL,OAAO,GAAGzC,EAAM,CAAAW,CAAA,YAAS,GAAAU,OAAzB,IAAArB,EAAA,CAAAmC,EAAA;IACA,WAAS,EAAAV;EACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}