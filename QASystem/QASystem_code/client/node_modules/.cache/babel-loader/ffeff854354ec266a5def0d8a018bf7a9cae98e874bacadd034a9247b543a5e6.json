{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    if (computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","isNode","value","Node","getNodeName","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","isElement","Element","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isClientRectVisualViewportBased","isLastTraversableNode","min","Math","max","round","getCssDimensions","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","fallback","unwrapElement","contextElement","FALLBACK_SCALE","x","y","getScale","domElement","rect","getBoundingClientRect","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","mutableRect","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","position","currentNode","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","getTrueOffsetParent","polyfill","getContainingBlock","getOffsetParent","getRectRelativeToOffsetParent","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["D:/Code/chat-bot-vue-master/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    if (computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    observer = new ResizeObserver(() => {\n      update();\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}