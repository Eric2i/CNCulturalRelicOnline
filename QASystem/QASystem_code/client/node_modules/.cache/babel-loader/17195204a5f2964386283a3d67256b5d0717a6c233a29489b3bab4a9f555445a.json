{"ast":null,"code":"import { defineComponent, inject, ref, watch, watchEffect, openBlock, createElementBlock, normalizeClass, createElementVNode, Fragment, renderList, normalizeStyle } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport { colorPickerContextKey } from '../color-picker.mjs';\nimport Color from '../utils/color.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nconst _sfc_main = defineComponent({\n  props: {\n    colors: {\n      type: Array,\n      required: true\n    },\n    color: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props) {\n    const ns = useNamespace(\"color-predefine\");\n    const {\n      currentColor\n    } = inject(colorPickerContextKey);\n    const rgbaColors = ref(parseColors(props.colors, props.color));\n    watch(() => currentColor.value, val => {\n      const color = new Color();\n      color.fromString(val);\n      rgbaColors.value.forEach(item => {\n        item.selected = color.compare(item);\n      });\n    });\n    watchEffect(() => {\n      rgbaColors.value = parseColors(props.colors, props.color);\n    });\n    function handleSelect(index) {\n      props.color.fromString(props.colors[index]);\n    }\n    function parseColors(colors, color) {\n      return colors.map(value => {\n        const c = new Color();\n        c.enableAlpha = true;\n        c.format = \"rgba\";\n        c.fromString(value);\n        c.selected = c.value === color.value;\n        return c;\n      });\n    }\n    return {\n      rgbaColors,\n      handleSelect,\n      ns\n    };\n  }\n});\nconst _hoisted_1 = [\"onClick\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.ns.b())\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"colors\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.rgbaColors, (item, index) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: _ctx.colors[index],\n      class: normalizeClass([_ctx.ns.e(\"color-selector\"), _ctx.ns.is(\"alpha\", item._alpha < 100), {\n        selected: item.selected\n      }]),\n      onClick: $event => _ctx.handleSelect(index)\n    }, [createElementVNode(\"div\", {\n      style: normalizeStyle({\n        backgroundColor: item.value\n      })\n    }, null, 4)], 10, _hoisted_1);\n  }), 128))], 2)], 2);\n}\nvar Predefine = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/predefine.vue\"]]);\nexport { Predefine as default };","map":{"version":3,"names":["_sfc_main","defineComponent","props","colors","type","Array","required","color","Object","setup","ns","useNamespace","currentColor","inject","colorPickerContextKey","rgbaColors","ref","parseColors","watch","value","val","Color","fromString","forEach","item","selected","compare","watchEffect","handleSelect","index","map","c","enableAlpha","format","createElementBlock","class","normalizeClass","_ctx","b","createElementVNode","e","openBlock","Fragment","renderList","key","is","_alpha","onClick","$event","style","normalizeStyle","backgroundColor"],"sources":["../../../../../../../packages/components/color-picker/src/components/predefine.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div :class=\"ns.e('colors')\">\n      <div\n        v-for=\"(item, index) in rgbaColors\"\n        :key=\"colors[index]\"\n        :class=\"[\n          ns.e('color-selector'),\n          ns.is('alpha', item._alpha < 100),\n          { selected: item.selected },\n        ]\"\n        @click=\"handleSelect(index)\"\n      >\n        <div :style=\"{ backgroundColor: item.value }\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, ref, watch, watchEffect } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { colorPickerContextKey } from '../color-picker'\nimport Color from '../utils/color'\n\nimport type { PropType, Ref } from 'vue'\n\nexport default defineComponent({\n  props: {\n    colors: {\n      type: Array as PropType<string[]>,\n      required: true,\n    },\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('color-predefine')\n    const { currentColor } = inject(colorPickerContextKey)!\n\n    const rgbaColors = ref(parseColors(props.colors, props.color)) as Ref<\n      Color[]\n    >\n\n    watch(\n      () => currentColor.value,\n      (val) => {\n        const color = new Color()\n        color.fromString(val)\n\n        rgbaColors.value.forEach((item) => {\n          item.selected = color.compare(item)\n        })\n      }\n    )\n\n    watchEffect(() => {\n      rgbaColors.value = parseColors(props.colors, props.color)\n    })\n\n    function handleSelect(index: number) {\n      props.color.fromString(props.colors[index])\n    }\n\n    function parseColors(colors: string[], color: Color) {\n      return colors.map((value) => {\n        const c = new Color()\n        c.enableAlpha = true\n        c.format = 'rgba'\n        c.fromString(value)\n        c.selected = c.value === color.value\n        return c\n      })\n    }\n    return {\n      rgbaColors,\n      handleSelect,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;AA2BA,MAAKA,SAAA,GAAaC,eAAa;EAC7BC,KAAO;IACLC,MAAQ;MACNC,IAAM,EAAAC,KAAA;MACNC,QAAU;IAAA,CACZ;IACAC,KAAO;MACLH,IAAM,EAAAI,MAAA;MACNF,QAAU;IAAA;EACZ,CACF;EACAG,MAAMP,KAAO;IACL,MAAAQ,EAAA,GAAKC,YAAA,CAAa,iBAAiB;IACnC;MAAEC;IAAiB,IAAAC,MAAA,CAAOC,qBAAqB;IAErD,MAAMC,UAAA,GAAaC,GAAI,CAAAC,WAAA,CAAYf,KAAA,CAAMC,MAAQ,EAAAD,KAAA,CAAMK,KAAK,CAAC;IAI7DW,KAAA,CACE,MAAMN,YAAA,CAAaO,KACnB,EAACC,GAAQ;MACD,MAAAb,KAAA,GAAQ,IAAIc,KAAM;MACxBd,KAAA,CAAMe,UAAA,CAAWF,GAAG;MAETL,UAAA,CAAAI,KAAA,CAAMI,OAAQ,CAACC,IAAS;QAC5BA,IAAA,CAAAC,QAAA,GAAWlB,KAAM,CAAAmB,OAAA,CAAQF,IAAI;MAAA,CACnC;IAAA,CAEL;IAEAG,WAAA,CAAY,MAAM;MAChBZ,UAAA,CAAWI,KAAQ,GAAAF,WAAA,CAAYf,KAAM,CAAAC,MAAA,EAAQD,KAAA,CAAMK,KAAK;IAAA,CACzD;IAED,SAAAqB,aAAsBC,KAAe;MACnC3B,KAAA,CAAMK,KAAM,CAAAe,UAAA,CAAWpB,KAAM,CAAAC,MAAA,CAAO0B,KAAM;IAAA;IAG5C,SAAAZ,YAAqBd,MAAA,EAAkBI,KAAc;MAC5C,OAAAJ,MAAA,CAAO2B,GAAI,CAACX,KAAU;QACrB,MAAAY,CAAA,GAAI,IAAIV,KAAM;QACpBU,CAAA,CAAEC,WAAc;QAChBD,CAAA,CAAEE,MAAS;QACXF,CAAA,CAAET,UAAA,CAAWH,KAAK;QAChBY,CAAA,CAAAN,QAAA,GAAWM,CAAE,CAAAZ,KAAA,KAAUZ,KAAM,CAAAY,KAAA;QACxB,OAAAY,CAAA;MAAA,CACR;IAAA;IAEI;MACLhB,UAAA;MACAa,YAAA;MACAlB;IAAA,CACF;EAAA;AAEJ,CAAC;;;sBAjFCwB,kBAeM;IAfAC,KAAA,EAAKC,cAAE,CAAAC,IAAA,CAAA3B,EAAA,CAAG4B,CAAC;EAAA,IACfC,kBAaM;IAbAJ,KAAA,EAAKC,cAAE,CAAAC,IAAA,CAAA3B,EAAA,CAAG8B,CAAC;EAAA,KACfC,SAAA,QAAAP,kBAAA,CAWMQ,QAVoB,QAAAC,UAAA,CAAAN,IAAA,CAAAtB,UAAA,EAAU,CAA1BS,IAAA,EAAMK,KAAK;wBADrBK,kBAWM;MATHU,GAAA,EAAKP,IAAO,CAAAlC,MAAA,CAAA0B,KAAA;MACZM,KAAK,EAAAC,cAAA,EAAcC,IAAA,CAAA3B,EAAA,CAAG8B,CAAC,oBAA8BH,IAAG,CAAA3B,EAAA,CAAAmC,EAAA,CAAE,OAAU,EAAArB,IAAA,CAAKsB,MAAM;QAAArB,QAAA,EAA+BD,IAAA,CAAKC;MAAQ;MAK3HsB,OAAK,EAAAC,MAAA,IAAEX,IAAA,CAAAT,YAAA,CAAaC,KAAK;IAAA,IAE1BU,kBAAgD;MAA1CU,KAAA,EAAKC,cAAqB;QAAAC,eAAA,EAAA3B,IAAA,CAAKL;MAAK;IAAA,Y"},"metadata":{},"sourceType":"module","externalDependencies":[]}