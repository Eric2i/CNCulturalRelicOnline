{"ast":null,"code":"import { isRef, watch, onScopeDispose } from 'vue';\nimport { computed } from '@vue/reactivity';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { useNamespace } from '../use-namespace/index.mjs';\nimport { throwError } from '../../utils/error.mjs';\nimport { hasClass, removeClass, getStyle, addClass } from '../../utils/dom/style.mjs';\nimport { getScrollBarWidth } from '../../utils/dom/scroll.mjs';\nconst useLockscreen = (trigger, options = {}) => {\n  if (!isRef(trigger)) {\n    throwError(\"[useLockscreen]\", \"You need to pass a ref param to this function\");\n  }\n  const ns = options.ns || useNamespace(\"popup\");\n  const hiddenCls = computed(() => ns.bm(\"parent\", \"hidden\"));\n  if (!isClient || hasClass(document.body, hiddenCls.value)) {\n    return;\n  }\n  let scrollBarWidth = 0;\n  let withoutHiddenClass = false;\n  let bodyWidth = \"0\";\n  const cleanup = () => {\n    setTimeout(() => {\n      removeClass(document == null ? void 0 : document.body, hiddenCls.value);\n      if (withoutHiddenClass && document) {\n        document.body.style.width = bodyWidth;\n      }\n    }, 200);\n  };\n  watch(trigger, val => {\n    if (!val) {\n      cleanup();\n      return;\n    }\n    withoutHiddenClass = !hasClass(document.body, hiddenCls.value);\n    if (withoutHiddenClass) {\n      bodyWidth = document.body.style.width;\n    }\n    scrollBarWidth = getScrollBarWidth(ns.namespace.value);\n    const bodyHasOverflow = document.documentElement.clientHeight < document.body.scrollHeight;\n    const bodyOverflowY = getStyle(document.body, \"overflowY\");\n    if (scrollBarWidth > 0 && (bodyHasOverflow || bodyOverflowY === \"scroll\") && withoutHiddenClass) {\n      document.body.style.width = `calc(100% - ${scrollBarWidth}px)`;\n    }\n    addClass(document.body, hiddenCls.value);\n  });\n  onScopeDispose(() => cleanup());\n};\nexport { useLockscreen };","map":{"version":3,"names":["useLockscreen","trigger","options","isRef","throwError","ns","useNamespace","hiddenCls","computed","bm","isClient","hasClass","document","body","value","scrollBarWidth","withoutHiddenClass","bodyWidth","cleanup","setTimeout","removeClass","style","width","watch","val","getScrollBarWidth","namespace","bodyHasOverflow","documentElement","clientHeight","scrollHeight","bodyOverflowY","getStyle","addClass","onScopeDispose"],"sources":["../../../../../packages/hooks/use-lockscreen/index.ts"],"sourcesContent":["import { isRef, onScopeDispose, watch } from 'vue'\nimport { computed } from '@vue/reactivity'\nimport { isClient } from '@vueuse/core'\nimport {\n  addClass,\n  getScrollBarWidth,\n  getStyle,\n  hasClass,\n  removeClass,\n  throwError,\n} from '@element-plus/utils'\nimport { useNamespace } from '../use-namespace'\n\nimport type { Ref } from 'vue'\nimport type { UseNamespaceReturn } from '../use-namespace'\n\nexport type UseLockScreenOptions = {\n  ns?: UseNamespaceReturn\n  // shouldLock?: MaybeRef<boolean>\n}\n\n/**\n * Hook that monitoring the ref value to lock or unlock the screen.\n * When the trigger became true, it assumes modal is now opened and vice versa.\n * @param trigger {Ref<boolean>}\n */\nexport const useLockscreen = (\n  trigger: Ref<boolean>,\n  options: UseLockScreenOptions = {}\n) => {\n  if (!isRef(trigger)) {\n    throwError(\n      '[useLockscreen]',\n      'You need to pass a ref param to this function'\n    )\n  }\n\n  const ns = options.ns || useNamespace('popup')\n\n  const hiddenCls = computed(() => ns.bm('parent', 'hidden'))\n\n  if (!isClient || hasClass(document.body, hiddenCls.value)) {\n    return\n  }\n\n  let scrollBarWidth = 0\n  let withoutHiddenClass = false\n  let bodyWidth = '0'\n\n  const cleanup = () => {\n    setTimeout(() => {\n      removeClass(document?.body, hiddenCls.value)\n      if (withoutHiddenClass && document) {\n        document.body.style.width = bodyWidth\n      }\n    }, 200)\n  }\n  watch(trigger, (val) => {\n    if (!val) {\n      cleanup()\n      return\n    }\n\n    withoutHiddenClass = !hasClass(document.body, hiddenCls.value)\n    if (withoutHiddenClass) {\n      bodyWidth = document.body.style.width\n    }\n    scrollBarWidth = getScrollBarWidth(ns.namespace.value)\n    const bodyHasOverflow =\n      document.documentElement.clientHeight < document.body.scrollHeight\n    const bodyOverflowY = getStyle(document.body, 'overflowY')\n    if (\n      scrollBarWidth > 0 &&\n      (bodyHasOverflow || bodyOverflowY === 'scroll') &&\n      withoutHiddenClass\n    ) {\n      document.body.style.width = `calc(100% - ${scrollBarWidth}px)`\n    }\n    addClass(document.body, hiddenCls.value)\n  })\n  onScopeDispose(() => cleanup())\n}\n"],"mappings":";;;;;;;;AAYY,MAACA,aAAa,GAAGA,CAACC,OAAO,EAAEC,OAAO,GAAG,EAAE,KAAK;EACtD,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,EAAE;IACnBG,UAAU,CAAC,iBAAiB,EAAE,+CAA+C,CAAC;EAClF;EACE,MAAMC,EAAE,GAAGH,OAAO,CAACG,EAAE,IAAIC,YAAY,CAAC,OAAO,CAAC;EAC9C,MAAMC,SAAS,GAAGC,QAAQ,CAAC,MAAMH,EAAE,CAACI,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;EAC3D,IAAI,CAACC,QAAQ,IAAIC,QAAQ,CAACC,QAAQ,CAACC,IAAI,EAAEN,SAAS,CAACO,KAAK,CAAC,EAAE;IACzD;EACJ;EACE,IAAIC,cAAc,GAAG,CAAC;EACtB,IAAIC,kBAAkB,GAAG,KAAK;EAC9B,IAAIC,SAAS,GAAG,GAAG;EACnB,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBC,UAAU,CAAC,MAAM;MACfC,WAAW,CAACR,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACC,IAAI,EAAEN,SAAS,CAACO,KAAK,CAAC;MACvE,IAAIE,kBAAkB,IAAIJ,QAAQ,EAAE;QAClCA,QAAQ,CAACC,IAAI,CAACQ,KAAK,CAACC,KAAK,GAAGL,SAAS;MAC7C;IACA,CAAK,EAAE,GAAG,CAAC;EACX,CAAG;EACDM,KAAK,CAACtB,OAAO,EAAGuB,GAAG,IAAK;IACtB,IAAI,CAACA,GAAG,EAAE;MACRN,OAAO,EAAE;MACT;IACN;IACIF,kBAAkB,GAAG,CAACL,QAAQ,CAACC,QAAQ,CAACC,IAAI,EAAEN,SAAS,CAACO,KAAK,CAAC;IAC9D,IAAIE,kBAAkB,EAAE;MACtBC,SAAS,GAAGL,QAAQ,CAACC,IAAI,CAACQ,KAAK,CAACC,KAAK;IAC3C;IACIP,cAAc,GAAGU,iBAAiB,CAACpB,EAAE,CAACqB,SAAS,CAACZ,KAAK,CAAC;IACtD,MAAMa,eAAe,GAAGf,QAAQ,CAACgB,eAAe,CAACC,YAAY,GAAGjB,QAAQ,CAACC,IAAI,CAACiB,YAAY;IAC1F,MAAMC,aAAa,GAAGC,QAAQ,CAACpB,QAAQ,CAACC,IAAI,EAAE,WAAW,CAAC;IAC1D,IAAIE,cAAc,GAAG,CAAC,KAAKY,eAAe,IAAII,aAAa,KAAK,QAAQ,CAAC,IAAIf,kBAAkB,EAAE;MAC/FJ,QAAQ,CAACC,IAAI,CAACQ,KAAK,CAACC,KAAK,GAAI,eAAcP,cAAe,KAAI;IACpE;IACIkB,QAAQ,CAACrB,QAAQ,CAACC,IAAI,EAAEN,SAAS,CAACO,KAAK,CAAC;EAC5C,CAAG,CAAC;EACFoB,cAAc,CAAC,MAAMhB,OAAO,EAAE,CAAC;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}