{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nconst badgeProps = buildProps({\n  value: {\n    type: [String, Number],\n    default: \"\"\n  },\n  max: {\n    type: Number,\n    default: 99\n  },\n  isDot: Boolean,\n  hidden: Boolean,\n  type: {\n    type: String,\n    values: [\"primary\", \"success\", \"warning\", \"info\", \"danger\"],\n    default: \"danger\"\n  }\n});\nexport { badgeProps };","map":{"version":3,"names":["badgeProps","buildProps","value","type","String","Number","default","max","isDot","Boolean","hidden","values"],"sources":["../../../../../../packages/components/badge/src/badge.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const badgeProps = buildProps({\n  /**\n   * @description display value.\n   */\n  value: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description maximum value, shows `{max}+` when exceeded. Only works if value is a number.\n   */\n  max: {\n    type: Number,\n    default: 99,\n  },\n  /**\n   * @description if a little dot is displayed.\n   */\n  isDot: Boolean,\n  /**\n   * @description hidden badge.\n   */\n  hidden: Boolean,\n  /**\n   * @description badge type.\n   */\n  type: {\n    type: String,\n    values: ['primary', 'success', 'warning', 'info', 'danger'],\n    default: 'danger',\n  },\n} as const)\nexport type BadgeProps = ExtractPropTypes<typeof badgeProps>\n"],"mappings":";;AACY,MAACA,UAAU,GAAGC,UAAU,CAAC;EACnCC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;IACtBC,OAAO,EAAE;EACb,CAAG;EACDC,GAAG,EAAE;IACHJ,IAAI,EAAEE,MAAM;IACZC,OAAO,EAAE;EACb,CAAG;EACDE,KAAK,EAAEC,OAAO;EACdC,MAAM,EAAED,OAAO;EACfN,IAAI,EAAE;IACJA,IAAI,EAAEC,MAAM;IACZO,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC3DL,OAAO,EAAE;EACb;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}