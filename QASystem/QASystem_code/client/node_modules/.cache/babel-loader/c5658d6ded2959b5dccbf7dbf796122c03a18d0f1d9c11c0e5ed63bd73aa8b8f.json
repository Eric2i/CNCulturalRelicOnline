{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, watch, onMounted, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { draggable } from '../utils/draggable.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { getClientXY } from '../../../../utils/dom/position.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElColorHueSlider\",\n  props: {\n    color: {\n      type: Object,\n      required: true\n    },\n    vertical: Boolean\n  },\n  setup(props) {\n    const ns = useNamespace(\"color-hue-slider\");\n    const instance = getCurrentInstance();\n    const thumb = ref();\n    const bar = ref();\n    const thumbLeft = ref(0);\n    const thumbTop = ref(0);\n    const hueValue = computed(() => {\n      return props.color.get(\"hue\");\n    });\n    watch(() => hueValue.value, () => {\n      update();\n    });\n    function handleClick(event) {\n      const target = event.target;\n      if (target !== thumb.value) {\n        handleDrag(event);\n      }\n    }\n    function handleDrag(event) {\n      if (!bar.value || !thumb.value) return;\n      const el = instance.vnode.el;\n      const rect = el.getBoundingClientRect();\n      const {\n        clientX,\n        clientY\n      } = getClientXY(event);\n      let hue;\n      if (!props.vertical) {\n        let left = clientX - rect.left;\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2);\n        left = Math.max(thumb.value.offsetWidth / 2, left);\n        hue = Math.round((left - thumb.value.offsetWidth / 2) / (rect.width - thumb.value.offsetWidth) * 360);\n      } else {\n        let top = clientY - rect.top;\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2);\n        top = Math.max(thumb.value.offsetHeight / 2, top);\n        hue = Math.round((top - thumb.value.offsetHeight / 2) / (rect.height - thumb.value.offsetHeight) * 360);\n      }\n      props.color.set(\"hue\", hue);\n    }\n    function getThumbLeft() {\n      if (!thumb.value) return 0;\n      const el = instance.vnode.el;\n      if (props.vertical) return 0;\n      const hue = props.color.get(\"hue\");\n      if (!el) return 0;\n      return Math.round(hue * (el.offsetWidth - thumb.value.offsetWidth / 2) / 360);\n    }\n    function getThumbTop() {\n      if (!thumb.value) return 0;\n      const el = instance.vnode.el;\n      if (!props.vertical) return 0;\n      const hue = props.color.get(\"hue\");\n      if (!el) return 0;\n      return Math.round(hue * (el.offsetHeight - thumb.value.offsetHeight / 2) / 360);\n    }\n    function update() {\n      thumbLeft.value = getThumbLeft();\n      thumbTop.value = getThumbTop();\n    }\n    onMounted(() => {\n      if (!bar.value || !thumb.value) return;\n      const dragConfig = {\n        drag: event => {\n          handleDrag(event);\n        },\n        end: event => {\n          handleDrag(event);\n        }\n      };\n      draggable(bar.value, dragConfig);\n      draggable(thumb.value, dragConfig);\n      update();\n    });\n    return {\n      bar,\n      thumb,\n      thumbLeft,\n      thumbTop,\n      hueValue,\n      handleClick,\n      update,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"vertical\", _ctx.vertical)])\n  }, [createElementVNode(\"div\", {\n    ref: \"bar\",\n    class: normalizeClass(_ctx.ns.e(\"bar\")),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, null, 2), createElementVNode(\"div\", {\n    ref: \"thumb\",\n    class: normalizeClass(_ctx.ns.e(\"thumb\")),\n    style: normalizeStyle({\n      left: _ctx.thumbLeft + \"px\",\n      top: _ctx.thumbTop + \"px\"\n    })\n  }, null, 6)], 2);\n}\nvar HueSlider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/color-picker/src/components/hue-slider.vue\"]]);\nexport { HueSlider as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","color","type","Object","required","vertical","Boolean","setup","ns","useNamespace","instance","getCurrentInstance","thumb","ref","bar","thumbLeft","thumbTop","hueValue","computed","get","watch","value","update","handleClick","event","target","handleDrag","el","vnode","rect","getBoundingClientRect","clientX","clientY","getClientXY","hue","left","Math","min","width","offsetWidth","max","round","top","height","offsetHeight","set","getThumbLeft","getThumbTop","onMounted","dragConfig","drag","end","draggable","createElementBlock","class","normalizeClass","_ctx","b","is","createElementVNode","e","onClick","_cache","args","style","normalizeStyle"],"sources":["../../../../../../../packages/components/color-picker/src/components/hue-slider.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('vertical', vertical)]\">\n    <div ref=\"bar\" :class=\"ns.e('bar')\" @click=\"handleClick\" />\n    <div\n      ref=\"thumb\"\n      :class=\"ns.e('thumb')\"\n      :style=\"{\n        left: thumbLeft + 'px',\n        top: thumbTop + 'px',\n      }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { getClientXY } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { draggable } from '../utils/draggable'\n\nimport type { PropType } from 'vue'\nimport type Color from '../utils/color'\n\nexport default defineComponent({\n  name: 'ElColorHueSlider',\n\n  props: {\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n\n    vertical: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('color-hue-slider')\n    const instance = getCurrentInstance()!\n    // ref\n    const thumb = ref<HTMLElement>()\n    const bar = ref<HTMLElement>()\n    // data\n    const thumbLeft = ref(0)\n    const thumbTop = ref(0)\n    // computed\n    const hueValue = computed(() => {\n      return props.color.get('hue')\n    })\n    // watch\n    watch(\n      () => hueValue.value,\n      () => {\n        update()\n      }\n    )\n\n    // methods\n    function handleClick(event: MouseEvent | TouchEvent) {\n      const target = event.target\n\n      if (target !== thumb.value) {\n        handleDrag(event)\n      }\n    }\n\n    function handleDrag(event: MouseEvent | TouchEvent) {\n      if (!bar.value || !thumb.value) return\n\n      const el = instance.vnode.el as HTMLElement\n      const rect = el.getBoundingClientRect()\n      const { clientX, clientY } = getClientXY(event)\n      let hue\n\n      if (!props.vertical) {\n        let left = clientX - rect.left\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2)\n        left = Math.max(thumb.value.offsetWidth / 2, left)\n\n        hue = Math.round(\n          ((left - thumb.value.offsetWidth / 2) /\n            (rect.width - thumb.value.offsetWidth)) *\n            360\n        )\n      } else {\n        let top = clientY - rect.top\n\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2)\n        top = Math.max(thumb.value.offsetHeight / 2, top)\n        hue = Math.round(\n          ((top - thumb.value.offsetHeight / 2) /\n            (rect.height - thumb.value.offsetHeight)) *\n            360\n        )\n      }\n      props.color.set('hue', hue)\n    }\n\n    function getThumbLeft() {\n      if (!thumb.value) return 0\n\n      const el = instance.vnode.el\n\n      if (props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetWidth - thumb.value.offsetWidth / 2)) / 360\n      )\n    }\n\n    function getThumbTop() {\n      if (!thumb.value) return 0\n\n      const el = instance.vnode.el as HTMLElement\n      if (!props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetHeight - thumb.value.offsetHeight / 2)) / 360\n      )\n    }\n\n    function update() {\n      thumbLeft.value = getThumbLeft()\n      thumbTop.value = getThumbTop()\n    }\n\n    // mounded\n    onMounted(() => {\n      if (!bar.value || !thumb.value) return\n\n      const dragConfig = {\n        drag: (event: MouseEvent | TouchEvent) => {\n          handleDrag(event)\n        },\n        end: (event: MouseEvent | TouchEvent) => {\n          handleDrag(event)\n        },\n      }\n\n      draggable(bar.value, dragConfig)\n      draggable(thumb.value, dragConfig)\n      update()\n    })\n\n    return {\n      bar,\n      thumb,\n      thumbLeft,\n      thumbTop,\n      hueValue,\n      handleClick,\n      update,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}