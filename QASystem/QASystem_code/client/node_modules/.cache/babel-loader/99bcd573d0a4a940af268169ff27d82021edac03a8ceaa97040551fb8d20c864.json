{"ast":null,"code":"import '../../../../hooks/index.mjs';\nimport { useSizeProp } from '../../../../hooks/use-size/index.mjs';\nvar defaultProps = {\n  data: {\n    type: Array,\n    default: () => []\n  },\n  size: useSizeProp,\n  width: [String, Number],\n  height: [String, Number],\n  maxHeight: [String, Number],\n  fit: {\n    type: Boolean,\n    default: true\n  },\n  stripe: Boolean,\n  border: Boolean,\n  rowKey: [String, Function],\n  showHeader: {\n    type: Boolean,\n    default: true\n  },\n  showSummary: Boolean,\n  sumText: String,\n  summaryMethod: Function,\n  rowClassName: [String, Function],\n  rowStyle: [Object, Function],\n  cellClassName: [String, Function],\n  cellStyle: [Object, Function],\n  headerRowClassName: [String, Function],\n  headerRowStyle: [Object, Function],\n  headerCellClassName: [String, Function],\n  headerCellStyle: [Object, Function],\n  highlightCurrentRow: Boolean,\n  currentRowKey: [String, Number],\n  emptyText: String,\n  expandRowKeys: Array,\n  defaultExpandAll: Boolean,\n  defaultSort: Object,\n  tooltipEffect: String,\n  tooltipOptions: Object,\n  spanMethod: Function,\n  selectOnIndeterminate: {\n    type: Boolean,\n    default: true\n  },\n  indent: {\n    type: Number,\n    default: 16\n  },\n  treeProps: {\n    type: Object,\n    default: () => {\n      return {\n        hasChildren: \"hasChildren\",\n        children: \"children\"\n      };\n    }\n  },\n  lazy: Boolean,\n  load: Function,\n  style: {\n    type: Object,\n    default: () => ({})\n  },\n  className: {\n    type: String,\n    default: \"\"\n  },\n  tableLayout: {\n    type: String,\n    default: \"fixed\"\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false\n  },\n  flexible: Boolean\n};\nexport { defaultProps as default };","map":{"version":3,"names":["defaultProps","data","type","Array","default","size","useSizeProp","width","String","Number","height","maxHeight","fit","Boolean","stripe","border","rowKey","Function","showHeader","showSummary","sumText","summaryMethod","rowClassName","rowStyle","Object","cellClassName","cellStyle","headerRowClassName","headerRowStyle","headerCellClassName","headerCellStyle","highlightCurrentRow","currentRowKey","emptyText","expandRowKeys","defaultExpandAll","defaultSort","tooltipEffect","tooltipOptions","spanMethod","selectOnIndeterminate","indent","treeProps","hasChildren","children","lazy","load","style","className","tableLayout","scrollbarAlwaysOn","flexible"],"sources":["../../../../../../../packages/components/table/src/table/defaults.ts"],"sourcesContent":["// @ts-nocheck\nimport { useSizeProp } from '@element-plus/hooks'\nimport type {\n  CSSProperties,\n  ComponentInternalInstance,\n  PropType,\n  Ref,\n  VNode,\n} from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { Nullable } from '@element-plus/utils'\nimport type { Store } from '../store'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type TableLayout from '../table-layout'\nimport type { TableOverflowTooltipOptions } from '../util'\n\nexport type DefaultRow = any\n\ninterface TableRefs {\n  tableWrapper: HTMLElement\n  headerWrapper: HTMLElement\n  footerWrapper: HTMLElement\n  fixedBodyWrapper: HTMLElement\n  rightFixedBodyWrapper: HTMLElement\n  bodyWrapper: HTMLElement\n  [key: string]: any\n}\n\ninterface TableState {\n  isGroup: Ref<boolean>\n  resizeState: Ref<{\n    width: any\n    height: any\n  }>\n  doLayout: () => void\n  debouncedUpdateLayout: () => void\n}\n\ntype HoverState<T> = Nullable<{\n  cell: HTMLElement\n  column: TableColumnCtx<T>\n  row: T\n}>\n\ntype RIS<T> = { row: T; $index: number; store: Store<T>; expanded: boolean }\n\ntype RenderExpanded<T> = ({\n  row,\n  $index,\n  store,\n  expanded: boolean,\n}: RIS<T>) => VNode\n\ntype SummaryMethod<T> = (data: {\n  columns: TableColumnCtx<T>[]\n  data: T[]\n}) => string[]\n\ninterface Table<T> extends ComponentInternalInstance {\n  $ready: boolean\n  hoverState?: HoverState<T>\n  renderExpanded: RenderExpanded<T>\n  store: Store<T>\n  layout: TableLayout<T>\n  refs: TableRefs\n  tableId: string\n  state: TableState\n}\n\ntype ColumnCls<T> = string | ((data: { row: T; rowIndex: number }) => string)\ntype ColumnStyle<T> =\n  | CSSProperties\n  | ((data: { row: T; rowIndex: number }) => CSSProperties)\ntype CellCls<T> =\n  | string\n  | ((data: {\n      row: T\n      rowIndex: number\n      column: TableColumnCtx<T>\n      columnIndex: number\n    }) => string)\ntype CellStyle<T> =\n  | CSSProperties\n  | ((data: {\n      row: T\n      rowIndex: number\n      column: TableColumnCtx<T>\n      columnIndex: number\n    }) => CSSProperties)\ntype Layout = 'fixed' | 'auto'\ninterface TableProps<T> {\n  data: T[]\n  size?: ComponentSize\n  width?: string | number\n  height?: string | number\n  maxHeight?: string | number\n  fit?: boolean\n  stripe?: boolean\n  border?: boolean\n  rowKey?: string | ((row: T) => string)\n  context?: Table<T>\n  showHeader?: boolean\n  showSummary?: boolean\n  sumText?: string\n  summaryMethod?: SummaryMethod<T>\n  rowClassName?: ColumnCls<T>\n  rowStyle?: ColumnStyle<T>\n  cellClassName?: CellCls<T>\n  cellStyle?: CellStyle<T>\n  headerRowClassName?: ColumnCls<T>\n  headerRowStyle?: ColumnStyle<T>\n  headerCellClassName?: CellCls<T>\n  headerCellStyle?: CellStyle<T>\n  highlightCurrentRow?: boolean\n  currentRowKey?: string | number\n  emptyText?: string\n  expandRowKeys?: any[]\n  defaultExpandAll?: boolean\n  defaultSort?: Sort\n  tooltipEffect?: string\n  tooltipOptions?: TableOverflowTooltipOptions\n  spanMethod?: (data: {\n    row: T\n    rowIndex: number\n    column: TableColumnCtx<T>\n    columnIndex: number\n  }) =>\n    | number[]\n    | {\n        rowspan: number\n        colspan: number\n      }\n    | undefined\n  selectOnIndeterminate?: boolean\n  indent?: number\n  treeProps?: {\n    hasChildren?: string\n    children?: string\n  }\n  lazy?: boolean\n  load?: (row: T, treeNode: TreeNode, resolve: (data: T[]) => void) => void\n  className?: string\n  style?: CSSProperties\n  tableLayout?: Layout\n  scrollbarAlwaysOn?: boolean\n  flexible?: boolean\n}\n\ninterface Sort {\n  prop: string\n  order: 'ascending' | 'descending'\n  init?: any\n  silent?: any\n}\n\ninterface Filter<T> {\n  column: TableColumnCtx<T>\n  values: string[]\n  silent: any\n}\n\ninterface TreeNode {\n  expanded?: boolean\n  loading?: boolean\n  noLazyChildren?: boolean\n  indent?: number\n  level?: number\n  display?: boolean\n}\n\ninterface RenderRowData<T> {\n  store: Store<T>\n  _self: Table<T>\n  column: TableColumnCtx<T>\n  row: T\n  $index: number\n  treeNode?: TreeNode\n  expanded: boolean\n}\n\nexport default {\n  data: {\n    type: Array as PropType<DefaultRow[]>,\n    default: () => [],\n  },\n  size: useSizeProp,\n  width: [String, Number],\n  height: [String, Number],\n  maxHeight: [String, Number],\n  fit: {\n    type: Boolean,\n    default: true,\n  },\n  stripe: Boolean,\n  border: Boolean,\n  rowKey: [String, Function] as PropType<TableProps<DefaultRow>['rowKey']>,\n  showHeader: {\n    type: Boolean,\n    default: true,\n  },\n  showSummary: Boolean,\n  sumText: String,\n  summaryMethod: Function as PropType<TableProps<DefaultRow>['summaryMethod']>,\n  rowClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['rowClassName']\n  >,\n  rowStyle: [Object, Function] as PropType<TableProps<DefaultRow>['rowStyle']>,\n  cellClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['cellClassName']\n  >,\n  cellStyle: [Object, Function] as PropType<\n    TableProps<DefaultRow>['cellStyle']\n  >,\n  headerRowClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['headerRowClassName']\n  >,\n  headerRowStyle: [Object, Function] as PropType<\n    TableProps<DefaultRow>['headerRowStyle']\n  >,\n  headerCellClassName: [String, Function] as PropType<\n    TableProps<DefaultRow>['headerCellClassName']\n  >,\n  headerCellStyle: [Object, Function] as PropType<\n    TableProps<DefaultRow>['headerCellStyle']\n  >,\n  highlightCurrentRow: Boolean,\n  currentRowKey: [String, Number],\n  emptyText: String,\n  expandRowKeys: Array as PropType<TableProps<DefaultRow>['expandRowKeys']>,\n  defaultExpandAll: Boolean,\n  defaultSort: Object as PropType<TableProps<DefaultRow>['defaultSort']>,\n  tooltipEffect: String,\n  tooltipOptions: Object as PropType<TableProps<DefaultRow>['tooltipOptions']>,\n  spanMethod: Function as PropType<TableProps<DefaultRow>['spanMethod']>,\n  selectOnIndeterminate: {\n    type: Boolean,\n    default: true,\n  },\n  indent: {\n    type: Number,\n    default: 16,\n  },\n  treeProps: {\n    type: Object as PropType<TableProps<DefaultRow>['treeProps']>,\n    default: () => {\n      return {\n        hasChildren: 'hasChildren',\n        children: 'children',\n      }\n    },\n  },\n  lazy: Boolean,\n  load: Function as PropType<TableProps<DefaultRow>['load']>,\n  style: {\n    type: Object as PropType<CSSProperties>,\n    default: () => ({}),\n  },\n  className: {\n    type: String,\n    default: '',\n  },\n  tableLayout: {\n    type: String as PropType<Layout>,\n    default: 'fixed',\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n  flexible: Boolean,\n}\nexport type {\n  SummaryMethod,\n  Table,\n  TableProps,\n  TableRefs,\n  ColumnCls,\n  ColumnStyle,\n  CellCls,\n  CellStyle,\n  TreeNode,\n  RenderRowData,\n  Sort,\n  Filter,\n  TableColumnCtx,\n}\n"],"mappings":";;AACA,IAAAA,YAAA,GAAe;EACbC,IAAI,EAAE;IACJC,IAAI,EAAEC,KAAK;IACXC,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDC,IAAI,EAAEC,WAAW;EACjBC,KAAK,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;EACvBC,MAAM,EAAE,CAACF,MAAM,EAAEC,MAAM,CAAC;EACxBE,SAAS,EAAE,CAACH,MAAM,EAAEC,MAAM,CAAC;EAC3BG,GAAG,EAAE;IACHV,IAAI,EAAEW,OAAO;IACbT,OAAO,EAAE;EACb,CAAG;EACDU,MAAM,EAAED,OAAO;EACfE,MAAM,EAAEF,OAAO;EACfG,MAAM,EAAE,CAACR,MAAM,EAAES,QAAQ,CAAC;EAC1BC,UAAU,EAAE;IACVhB,IAAI,EAAEW,OAAO;IACbT,OAAO,EAAE;EACb,CAAG;EACDe,WAAW,EAAEN,OAAO;EACpBO,OAAO,EAAEZ,MAAM;EACfa,aAAa,EAAEJ,QAAQ;EACvBK,YAAY,EAAE,CAACd,MAAM,EAAES,QAAQ,CAAC;EAChCM,QAAQ,EAAE,CAACC,MAAM,EAAEP,QAAQ,CAAC;EAC5BQ,aAAa,EAAE,CAACjB,MAAM,EAAES,QAAQ,CAAC;EACjCS,SAAS,EAAE,CAACF,MAAM,EAAEP,QAAQ,CAAC;EAC7BU,kBAAkB,EAAE,CAACnB,MAAM,EAAES,QAAQ,CAAC;EACtCW,cAAc,EAAE,CAACJ,MAAM,EAAEP,QAAQ,CAAC;EAClCY,mBAAmB,EAAE,CAACrB,MAAM,EAAES,QAAQ,CAAC;EACvCa,eAAe,EAAE,CAACN,MAAM,EAAEP,QAAQ,CAAC;EACnCc,mBAAmB,EAAElB,OAAO;EAC5BmB,aAAa,EAAE,CAACxB,MAAM,EAAEC,MAAM,CAAC;EAC/BwB,SAAS,EAAEzB,MAAM;EACjB0B,aAAa,EAAE/B,KAAK;EACpBgC,gBAAgB,EAAEtB,OAAO;EACzBuB,WAAW,EAAEZ,MAAM;EACnBa,aAAa,EAAE7B,MAAM;EACrB8B,cAAc,EAAEd,MAAM;EACtBe,UAAU,EAAEtB,QAAQ;EACpBuB,qBAAqB,EAAE;IACrBtC,IAAI,EAAEW,OAAO;IACbT,OAAO,EAAE;EACb,CAAG;EACDqC,MAAM,EAAE;IACNvC,IAAI,EAAEO,MAAM;IACZL,OAAO,EAAE;EACb,CAAG;EACDsC,SAAS,EAAE;IACTxC,IAAI,EAAEsB,MAAM;IACZpB,OAAO,EAAEA,CAAA,KAAM;MACb,OAAO;QACLuC,WAAW,EAAE,aAAa;QAC1BC,QAAQ,EAAE;MAClB,CAAO;IACP;EACA,CAAG;EACDC,IAAI,EAAEhC,OAAO;EACbiC,IAAI,EAAE7B,QAAQ;EACd8B,KAAK,EAAE;IACL7C,IAAI,EAAEsB,MAAM;IACZpB,OAAO,EAAEA,CAAA,MAAO,EAAE;EACtB,CAAG;EACD4C,SAAS,EAAE;IACT9C,IAAI,EAAEM,MAAM;IACZJ,OAAO,EAAE;EACb,CAAG;EACD6C,WAAW,EAAE;IACX/C,IAAI,EAAEM,MAAM;IACZJ,OAAO,EAAE;EACb,CAAG;EACD8C,iBAAiB,EAAE;IACjBhD,IAAI,EAAEW,OAAO;IACbT,OAAO,EAAE;EACb,CAAG;EACD+C,QAAQ,EAAEtC;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}