{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, onBeforeUnmount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../constants/index.mjs';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nlet registeredEscapeHandlers = [];\nconst cachedHandler = e => {\n  const event = e;\n  if (event.key === EVENT_CODE.esc) {\n    registeredEscapeHandlers.forEach(registeredHandler => registeredHandler(event));\n  }\n};\nconst useEscapeKeydown = handler => {\n  onMounted(() => {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener(\"keydown\", cachedHandler);\n    }\n    if (isClient) registeredEscapeHandlers.push(handler);\n  });\n  onBeforeUnmount(() => {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(registeredHandler => registeredHandler !== handler);\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener(\"keydown\", cachedHandler);\n    }\n  });\n};\nexport { useEscapeKeydown };","map":{"version":3,"names":["registeredEscapeHandlers","cachedHandler","e","event","key","EVENT_CODE","esc","forEach","registeredHandler","useEscapeKeydown","handler","onMounted","length","document","addEventListener","isClient","push","onBeforeUnmount","filter","removeEventListener"],"sources":["../../../../../packages/hooks/use-escape-keydown/index.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\n\nlet registeredEscapeHandlers: ((e: KeyboardEvent) => void)[] = []\n\nconst cachedHandler = (e: Event) => {\n  const event = e as KeyboardEvent\n  if (event.key === EVENT_CODE.esc) {\n    registeredEscapeHandlers.forEach((registeredHandler) =>\n      registeredHandler(event)\n    )\n  }\n}\n\nexport const useEscapeKeydown = (handler: (e: KeyboardEvent) => void) => {\n  onMounted(() => {\n    if (registeredEscapeHandlers.length === 0) {\n      document.addEventListener('keydown', cachedHandler)\n    }\n    if (isClient) registeredEscapeHandlers.push(handler)\n  })\n\n  onBeforeUnmount(() => {\n    registeredEscapeHandlers = registeredEscapeHandlers.filter(\n      (registeredHandler) => registeredHandler !== handler\n    )\n    if (registeredEscapeHandlers.length === 0) {\n      if (isClient) document.removeEventListener('keydown', cachedHandler)\n    }\n  })\n}\n"],"mappings":";;;;;AAGA,IAAIA,wBAAwB,GAAG,EAAE;AACjC,MAAMC,aAAa,GAAIC,CAAC,IAAK;EAC3B,MAAMC,KAAK,GAAGD,CAAC;EACf,IAAIC,KAAK,CAACC,GAAG,KAAKC,UAAU,CAACC,GAAG,EAAE;IAChCN,wBAAwB,CAACO,OAAO,CAAEC,iBAAiB,IAAKA,iBAAiB,CAACL,KAAK,CAAC,CAAC;EACrF;AACA,CAAC;AACW,MAACM,gBAAgB,GAAIC,OAAO,IAAK;EAC3CC,SAAS,CAAC,MAAM;IACd,IAAIX,wBAAwB,CAACY,MAAM,KAAK,CAAC,EAAE;MACzCC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEb,aAAa,CAAC;IACzD;IACI,IAAIc,QAAQ,EACVf,wBAAwB,CAACgB,IAAI,CAACN,OAAO,CAAC;EAC5C,CAAG,CAAC;EACFO,eAAe,CAAC,MAAM;IACpBjB,wBAAwB,GAAGA,wBAAwB,CAACkB,MAAM,CAAEV,iBAAiB,IAAKA,iBAAiB,KAAKE,OAAO,CAAC;IAChH,IAAIV,wBAAwB,CAACY,MAAM,KAAK,CAAC,EAAE;MACzC,IAAIG,QAAQ,EACVF,QAAQ,CAACM,mBAAmB,CAAC,SAAS,EAAElB,aAAa,CAAC;IAC9D;EACA,CAAG,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}