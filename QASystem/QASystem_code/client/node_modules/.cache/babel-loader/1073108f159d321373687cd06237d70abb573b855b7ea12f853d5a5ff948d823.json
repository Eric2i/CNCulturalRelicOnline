{"ast":null,"code":"var v = !1,\n  o,\n  f,\n  s,\n  u,\n  d,\n  N,\n  l,\n  p,\n  m,\n  w,\n  D,\n  x,\n  E,\n  M,\n  F;\nfunction a() {\n  if (!v) {\n    v = !0;\n    var e = navigator.userAgent,\n      n = /(?:MSIE.(\\d+\\.\\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\\d+\\.\\d+))|(?:Opera(?:.+Version.|.)(\\d+\\.\\d+))|(?:AppleWebKit.(\\d+(?:\\.\\d+)?))|(?:Trident\\/\\d+\\.\\d+.*rv:(\\d+\\.\\d+))/.exec(e),\n      i = /(Mac OS X)|(Windows)|(Linux)/.exec(e);\n    if (x = /\\b(iPhone|iP[ao]d)/.exec(e), E = /\\b(iP[ao]d)/.exec(e), w = /Android/i.exec(e), M = /FBAN\\/\\w+;/i.exec(e), F = /Mobile/i.exec(e), D = !!/Win64/.exec(e), n) {\n      o = n[1] ? parseFloat(n[1]) : n[5] ? parseFloat(n[5]) : NaN, o && document && document.documentMode && (o = document.documentMode);\n      var r = /(?:Trident\\/(\\d+.\\d+))/.exec(e);\n      N = r ? parseFloat(r[1]) + 4 : o, f = n[2] ? parseFloat(n[2]) : NaN, s = n[3] ? parseFloat(n[3]) : NaN, u = n[4] ? parseFloat(n[4]) : NaN, u ? (n = /(?:Chrome\\/(\\d+\\.\\d+))/.exec(e), d = n && n[1] ? parseFloat(n[1]) : NaN) : d = NaN;\n    } else o = f = s = d = u = NaN;\n    if (i) {\n      if (i[1]) {\n        var t = /(?:Mac OS X (\\d+(?:[._]\\d+)?))/.exec(e);\n        l = t ? parseFloat(t[1].replace(\"_\", \".\")) : !0;\n      } else l = !1;\n      p = !!i[2], m = !!i[3];\n    } else l = p = m = !1;\n  }\n}\nvar _ = {\n    ie: function () {\n      return a() || o;\n    },\n    ieCompatibilityMode: function () {\n      return a() || N > o;\n    },\n    ie64: function () {\n      return _.ie() && D;\n    },\n    firefox: function () {\n      return a() || f;\n    },\n    opera: function () {\n      return a() || s;\n    },\n    webkit: function () {\n      return a() || u;\n    },\n    safari: function () {\n      return _.webkit();\n    },\n    chrome: function () {\n      return a() || d;\n    },\n    windows: function () {\n      return a() || p;\n    },\n    osx: function () {\n      return a() || l;\n    },\n    linux: function () {\n      return a() || m;\n    },\n    iphone: function () {\n      return a() || x;\n    },\n    mobile: function () {\n      return a() || x || E || w || F;\n    },\n    nativeApp: function () {\n      return a() || M;\n    },\n    android: function () {\n      return a() || w;\n    },\n    ipad: function () {\n      return a() || E;\n    }\n  },\n  A = _;\nvar c = !!(typeof window < \"u\" && window.document && window.document.createElement),\n  U = {\n    canUseDOM: c,\n    canUseWorkers: typeof Worker < \"u\",\n    canUseEventListeners: c && !!(window.addEventListener || window.attachEvent),\n    canUseViewport: c && !!window.screen,\n    isInWorker: !c\n  },\n  h = U;\nvar X;\nh.canUseDOM && (X = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature(\"\", \"\") !== !0);\nfunction S(e, n) {\n  if (!h.canUseDOM || n && !(\"addEventListener\" in document)) return !1;\n  var i = \"on\" + e,\n    r = (i in document);\n  if (!r) {\n    var t = document.createElement(\"div\");\n    t.setAttribute(i, \"return;\"), r = typeof t[i] == \"function\";\n  }\n  return !r && X && e === \"wheel\" && (r = document.implementation.hasFeature(\"Events.wheel\", \"3.0\")), r;\n}\nvar b = S;\nvar O = 10,\n  I = 40,\n  P = 800;\nfunction T(e) {\n  var n = 0,\n    i = 0,\n    r = 0,\n    t = 0;\n  return \"detail\" in e && (i = e.detail), \"wheelDelta\" in e && (i = -e.wheelDelta / 120), \"wheelDeltaY\" in e && (i = -e.wheelDeltaY / 120), \"wheelDeltaX\" in e && (n = -e.wheelDeltaX / 120), \"axis\" in e && e.axis === e.HORIZONTAL_AXIS && (n = i, i = 0), r = n * O, t = i * O, \"deltaY\" in e && (t = e.deltaY), \"deltaX\" in e && (r = e.deltaX), (r || t) && e.deltaMode && (e.deltaMode == 1 ? (r *= I, t *= I) : (r *= P, t *= P)), r && !n && (n = r < 1 ? -1 : 1), t && !i && (i = t < 1 ? -1 : 1), {\n    spinX: n,\n    spinY: i,\n    pixelX: r,\n    pixelY: t\n  };\n}\nT.getEventType = function () {\n  return A.firefox() ? \"DOMMouseScroll\" : b(\"wheel\") ? \"wheel\" : \"mousewheel\";\n};\nvar Y = T;\nexport { Y as default };\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */","map":{"version":3,"names":["v","o","f","s","u","d","N","l","p","m","w","D","x","E","M","F","a","e","navigator","userAgent","n","exec","i","parseFloat","NaN","document","documentMode","r","t","replace","_","ie","ieCompatibilityMode","ie64","firefox","opera","webkit","safari","chrome","windows","osx","linux","iphone","mobile","nativeApp","android","ipad","A","c","window","createElement","U","canUseDOM","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","h","X","implementation","hasFeature","S","setAttribute","b","O","I","P","T","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","getEventType","Y","default"],"sources":["../src/UserAgent_DEPRECATED.js","../src/ExecutionEnvironment.js","../src/isEventSupported.js","../src/normalizeWheel.js"],"sourcesContent":["/**\n * Copyright 2004-present Facebook. All Rights Reserved.\n *\n * @providesModule UserAgent_DEPRECATED\n */\n\n/**\n *  Provides entirely client-side User Agent and OS detection. You should prefer\n *  the non-deprecated UserAgent module when possible, which exposes our\n *  authoritative server-side PHP-based detection to the client.\n *\n *  Usage is straightforward:\n *\n *    if (UserAgent_DEPRECATED.ie()) {\n *      //  IE\n *    }\n *\n *  You can also do version checks:\n *\n *    if (UserAgent_DEPRECATED.ie() >= 7) {\n *      //  IE7 or better\n *    }\n *\n *  The browser functions will return NaN if the browser does not match, so\n *  you can also do version compares the other way:\n *\n *    if (UserAgent_DEPRECATED.ie() < 7) {\n *      //  IE6 or worse\n *    }\n *\n *  Note that the version is a float and may include a minor version number,\n *  so you should always use range operators to perform comparisons, not\n *  strict equality.\n *\n *  **Note:** You should **strongly** prefer capability detection to browser\n *  version detection where it's reasonable:\n *\n *    http://www.quirksmode.org/js/support.html\n *\n *  Further, we have a large number of mature wrapper functions and classes\n *  which abstract away many browser irregularities. Check the documentation,\n *  grep for things, or ask on javascript@lists.facebook.com before writing yet\n *  another copy of \"event || window.event\".\n *\n */\n\nvar _populated = false;\n\n// Browsers\nvar _ie, _firefox, _opera, _webkit, _chrome;\n\n// Actual IE browser for compatibility mode\nvar _ie_real_version;\n\n// Platforms\nvar _osx, _windows, _linux, _android;\n\n// Architectures\nvar _win64;\n\n// Devices\nvar _iphone, _ipad, _native;\n\nvar _mobile;\n\nfunction _populate() {\n  if (_populated) {\n    return;\n  }\n\n  _populated = true;\n\n  // To work around buggy JS libraries that can't handle multi-digit\n  // version numbers, Opera 10's user agent string claims it's Opera\n  // 9, then later includes a Version/X.Y field:\n  //\n  // Opera/9.80 (foo) Presto/2.2.15 Version/10.10\n  var uas = navigator.userAgent;\n  var agent =\n    /(?:MSIE.(\\d+\\.\\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\\d+\\.\\d+))|(?:Opera(?:.+Version.|.)(\\d+\\.\\d+))|(?:AppleWebKit.(\\d+(?:\\.\\d+)?))|(?:Trident\\/\\d+\\.\\d+.*rv:(\\d+\\.\\d+))/.exec(\n      uas\n    );\n  var os = /(Mac OS X)|(Windows)|(Linux)/.exec(uas);\n\n  _iphone = /\\b(iPhone|iP[ao]d)/.exec(uas);\n  _ipad = /\\b(iP[ao]d)/.exec(uas);\n  _android = /Android/i.exec(uas);\n  _native = /FBAN\\/\\w+;/i.exec(uas);\n  _mobile = /Mobile/i.exec(uas);\n\n  // Note that the IE team blog would have you believe you should be checking\n  // for 'Win64; x64'.  But MSDN then reveals that you can actually be coming\n  // from either x64 or ia64;  so ultimately, you should just check for Win64\n  // as in indicator of whether you're in 64-bit IE.  32-bit IE on 64-bit\n  // Windows will send 'WOW64' instead.\n  _win64 = !!/Win64/.exec(uas);\n\n  if (agent) {\n    _ie = agent[1]\n      ? parseFloat(agent[1])\n      : agent[5]\n      ? parseFloat(agent[5])\n      : NaN;\n    // IE compatibility mode\n    if (_ie && document && document.documentMode) {\n      _ie = document.documentMode;\n    }\n    // grab the \"true\" ie version from the trident token if available\n    var trident = /(?:Trident\\/(\\d+.\\d+))/.exec(uas);\n    _ie_real_version = trident ? parseFloat(trident[1]) + 4 : _ie;\n\n    _firefox = agent[2] ? parseFloat(agent[2]) : NaN;\n    _opera = agent[3] ? parseFloat(agent[3]) : NaN;\n    _webkit = agent[4] ? parseFloat(agent[4]) : NaN;\n    if (_webkit) {\n      // We do not add the regexp to the above test, because it will always\n      // match 'safari' only since 'AppleWebKit' appears before 'Chrome' in\n      // the userAgent string.\n      agent = /(?:Chrome\\/(\\d+\\.\\d+))/.exec(uas);\n      _chrome = agent && agent[1] ? parseFloat(agent[1]) : NaN;\n    } else {\n      _chrome = NaN;\n    }\n  } else {\n    _ie = _firefox = _opera = _chrome = _webkit = NaN;\n  }\n\n  if (os) {\n    if (os[1]) {\n      // Detect OS X version.  If no version number matches, set _osx to true.\n      // Version examples:  10, 10_6_1, 10.7\n      // Parses version number as a float, taking only first two sets of\n      // digits.  If only one set of digits is found, returns just the major\n      // version number.\n      var ver = /(?:Mac OS X (\\d+(?:[._]\\d+)?))/.exec(uas);\n\n      _osx = ver ? parseFloat(ver[1].replace('_', '.')) : true;\n    } else {\n      _osx = false;\n    }\n    _windows = !!os[2];\n    _linux = !!os[3];\n  } else {\n    _osx = _windows = _linux = false;\n  }\n}\n\nvar UserAgent_DEPRECATED = {\n  /**\n   *  Check if the UA is Internet Explorer.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  ie: function () {\n    return _populate() || _ie;\n  },\n\n  /**\n   * Check if we're in Internet Explorer compatibility mode.\n   *\n   * @return bool true if in compatibility mode, false if\n   * not compatibility mode or not ie\n   */\n  ieCompatibilityMode: function () {\n    return _populate() || _ie_real_version > _ie;\n  },\n\n  /**\n   * Whether the browser is 64-bit IE.  Really, this is kind of weak sauce;  we\n   * only need this because Skype can't handle 64-bit IE yet.  We need to remove\n   * this when we don't need it -- tracked by #601957.\n   */\n  ie64: function () {\n    return UserAgent_DEPRECATED.ie() && _win64;\n  },\n\n  /**\n   *  Check if the UA is Firefox.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  firefox: function () {\n    return _populate() || _firefox;\n  },\n\n  /**\n   *  Check if the UA is Opera.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  opera: function () {\n    return _populate() || _opera;\n  },\n\n  /**\n   *  Check if the UA is WebKit.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  webkit: function () {\n    return _populate() || _webkit;\n  },\n\n  /**\n   *  For Push\n   *  WILL BE REMOVED VERY SOON. Use UserAgent_DEPRECATED.webkit\n   */\n  safari: function () {\n    return UserAgent_DEPRECATED.webkit();\n  },\n\n  /**\n   *  Check if the UA is a Chrome browser.\n   *\n   *\n   *  @return float|NaN Version number (if match) or NaN.\n   */\n  chrome: function () {\n    return _populate() || _chrome;\n  },\n\n  /**\n   *  Check if the user is running Windows.\n   *\n   *  @return bool `true' if the user's OS is Windows.\n   */\n  windows: function () {\n    return _populate() || _windows;\n  },\n\n  /**\n   *  Check if the user is running Mac OS X.\n   *\n   *  @return float|bool   Returns a float if a version number is detected,\n   *                       otherwise true/false.\n   */\n  osx: function () {\n    return _populate() || _osx;\n  },\n\n  /**\n   * Check if the user is running Linux.\n   *\n   * @return bool `true' if the user's OS is some flavor of Linux.\n   */\n  linux: function () {\n    return _populate() || _linux;\n  },\n\n  /**\n   * Check if the user is running on an iPhone or iPod platform.\n   *\n   * @return bool `true' if the user is running some flavor of the\n   *    iPhone OS.\n   */\n  iphone: function () {\n    return _populate() || _iphone;\n  },\n\n  mobile: function () {\n    return _populate() || _iphone || _ipad || _android || _mobile;\n  },\n\n  nativeApp: function () {\n    // webviews inside of the native apps\n    return _populate() || _native;\n  },\n\n  android: function () {\n    return _populate() || _android;\n  },\n\n  ipad: function () {\n    return _populate() || _ipad;\n  },\n};\n\nexport default UserAgent_DEPRECATED;\n","/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n/*jslint evil: true */\n\nvar canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners:\n    canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM, // For now, this is true - might change in the future.\n};\n\nexport default ExecutionEnvironment;\n","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\nimport ExecutionEnvironment from './ExecutionEnvironment';\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature =\n    document.implementation &&\n    document.implementation.hasFeature &&\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (\n    !ExecutionEnvironment.canUseDOM ||\n    (capture && !('addEventListener' in document))\n  ) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nexport default isEventSupported;\n","/**\n * Copyright (c) 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule normalizeWheel\n * @typechecks\n */\n\nimport UserAgent_DEPRECATED from './UserAgent_DEPRECATED';\n\nimport isEventSupported from './isEventSupported';\n\n// Reasonable defaults\nvar PIXEL_STEP = 10;\nvar LINE_HEIGHT = 40;\nvar PAGE_HEIGHT = 800;\n\n/**\n * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n * complicated, thus this doc is long and (hopefully) detailed enough to answer\n * your questions.\n *\n * If you need to react to the mouse wheel in a predictable way, this code is\n * like your bestest friend. * hugs *\n *\n * As of today, there are 4 DOM event types you can listen to:\n *\n *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n *\n * So what to do?  The is the best:\n *\n *   normalizeWheel.getEventType();\n *\n * In your event callback, use this code to get sane interpretation of the\n * deltas.  This code will return an object with properties:\n *\n *   spinX   -- normalized spin speed (use for zoom) - x plane\n *   spinY   -- \" - y plane\n *   pixelX  -- normalized distance (to pixels) - x plane\n *   pixelY  -- \" - y plane\n *\n * Wheel values are provided by the browser assuming you are using the wheel to\n * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n * significantly on different platforms and browsers, forgetting that you can\n * scroll at different speeds.  Some devices (like trackpads) emit more events\n * at smaller increments with fine granularity, and some emit massive jumps with\n * linear speed or acceleration.\n *\n * This code does its best to normalize the deltas for you:\n *\n *   - spin is trying to normalize how far the wheel was spun (or trackpad\n *     dragged).  This is super useful for zoom support where you want to\n *     throw away the chunky scroll steps on the PC and make those equal to\n *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n *     resolve a single slow step on a wheel to 1.\n *\n *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n *     get the crazy differences between browsers, but at least it'll be in\n *     pixels!\n *\n *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n *     should translate to positive value zooming IN, negative zooming OUT.\n *     This matches the newer 'wheel' event.\n *\n * Why are there spinX, spinY (or pixels)?\n *\n *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n *     with a mouse.  It results in side-scrolling in the browser by default.\n *\n *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n *\n *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n *     probably is by browsers in conjunction with fancy 3D controllers .. but\n *     you know.\n *\n * Implementation info:\n *\n * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n * average mouse:\n *\n *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n *\n * On the trackpad:\n *\n *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n *\n * On other/older browsers.. it's more complicated as there can be multiple and\n * also missing delta values.\n *\n * The 'wheel' event is more standard:\n *\n * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n *\n * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n * backward compatibility with older events.  Those other values help us\n * better normalize spin speed.  Example of what the browsers provide:\n *\n *                          | event.wheelDelta | event.detail\n *        ------------------+------------------+--------------\n *          Safari v5/OS X  |       -120       |       0\n *          Safari v5/Win7  |       -120       |       0\n *         Chrome v17/OS X  |       -120       |       0\n *         Chrome v17/Win7  |       -120       |       0\n *                IE9/Win7  |       -120       |   undefined\n *         Firefox v4/OS X  |     undefined    |       1\n *         Firefox v4/Win7  |     undefined    |       3\n *\n */\nfunction normalizeWheel(/*object*/ event) /*object*/ {\n  var sX = 0,\n    sY = 0, // spinX, spinY\n    pX = 0,\n    pY = 0; // pixelX, pixelY\n\n  // Legacy\n  if ('detail' in event) {\n    sY = event.detail;\n  }\n  if ('wheelDelta' in event) {\n    sY = -event.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in event) {\n    sY = -event.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in event) {\n    sX = -event.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in event) {\n    pY = event.deltaY;\n  }\n  if ('deltaX' in event) {\n    pX = event.deltaX;\n  }\n\n  if ((pX || pY) && event.deltaMode) {\n    if (event.deltaMode == 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return { spinX: sX, spinY: sY, pixelX: pX, pixelY: pY };\n}\n\n/**\n * The best combination if you prefer spinX + spinY normalization.  It favors\n * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n * 'wheel' event, making spin speed determination impossible.\n */\nnormalizeWheel.getEventType = function () /*string*/ {\n  return UserAgent_DEPRECATED.firefox()\n    ? 'DOMMouseScroll'\n    : isEventSupported('wheel')\n    ? 'wheel'\n    : 'mousewheel';\n};\n\nexport default normalizeWheel;\n"],"mappings":"AA8CA,IAAIA,CAAA,GAAa;EAGbC,CAAA;EAAKC,CAAA;EAAUC,CAAA;EAAQC,CAAA;EAASC,CAAA;EAGhCC,CAAA;EAGAC,CAAA;EAAMC,CAAA;EAAUC,CAAA;EAAQC,CAAA;EAGxBC,CAAA;EAGAC,CAAA;EAASC,CAAA;EAAOC,CAAA;EAEhBC,CAAA;AAEJ,SAAAC,EAAA,EAAqB;EACnB,IAAI,CAAAhB,CAAA,EAIJ;IAAAA,CAAA,GAAa;IAOb,IAAIiB,CAAA,GAAMC,SAAA,CAAUC,SAAA;MAChBC,CAAA,GACF,iLAAiLC,IAAA,CAC/KJ,CACF;MACEK,CAAA,GAAK,+BAA+BD,IAAA,CAAKJ,CAAG;IAehD,IAbAL,CAAA,GAAU,qBAAqBS,IAAA,CAAKJ,CAAG,GACvCJ,CAAA,GAAQ,cAAcQ,IAAA,CAAKJ,CAAG,GAC9BP,CAAA,GAAW,WAAWW,IAAA,CAAKJ,CAAG,GAC9BH,CAAA,GAAU,cAAcO,IAAA,CAAKJ,CAAG,GAChCF,CAAA,GAAU,UAAUM,IAAA,CAAKJ,CAAG,GAO5BN,CAAA,GAAS,CAAC,CAAC,QAAQU,IAAA,CAAKJ,CAAG,GAEvBG,CAAA,EAAO;MACTnB,CAAA,GAAMmB,CAAA,CAAM,KACRG,UAAA,CAAWH,CAAA,CAAM,EAAE,IACnBA,CAAA,CAAM,KACNG,UAAA,CAAWH,CAAA,CAAM,EAAE,IACnBI,GAAA,EAEAvB,CAAA,IAAOwB,QAAA,IAAYA,QAAA,CAASC,YAAA,KAC9BzB,CAAA,GAAMwB,QAAA,CAASC,YAAA;MAGjB,IAAIC,CAAA,GAAU,yBAAyBN,IAAA,CAAKJ,CAAG;MAC/CX,CAAA,GAAmBqB,CAAA,GAAUJ,UAAA,CAAWI,CAAA,CAAQ,EAAE,IAAI,IAAI1B,CAAA,EAE1DC,CAAA,GAAWkB,CAAA,CAAM,KAAKG,UAAA,CAAWH,CAAA,CAAM,EAAE,IAAII,GAAA,EAC7CrB,CAAA,GAASiB,CAAA,CAAM,KAAKG,UAAA,CAAWH,CAAA,CAAM,EAAE,IAAII,GAAA,EAC3CpB,CAAA,GAAUgB,CAAA,CAAM,KAAKG,UAAA,CAAWH,CAAA,CAAM,EAAE,IAAII,GAAA,EAC5CpB,CAAI,IAIFgB,CAAA,GAAQ,yBAAyBC,IAAA,CAAKJ,CAAG,GACzCZ,CAAA,GAAUe,CAAA,IAASA,CAAA,CAAM,KAAKG,UAAA,CAAWH,CAAA,CAAM,EAAE,IAAII,GAAA,IAErDnB,CAAA,GAAUmB,GAEd;IAAA,OACEvB,CAAA,GAAMC,CAAA,GAAWC,CAAA,GAASE,CAAA,GAAUD,CAAA,GAAUoB,GAAA;IAGhD,IAAIF,CAAA,EAAI;MACN,IAAIA,CAAA,CAAG,IAAI;QAMT,IAAIM,CAAA,GAAM,iCAAiCP,IAAA,CAAKJ,CAAG;QAEnDV,CAAA,GAAOqB,CAAA,GAAML,UAAA,CAAWK,CAAA,CAAI,GAAGC,OAAA,CAAQ,KAAK,GAAG,CAAC,IAAI,EACtD;MAAA,OACEtB,CAAA,GAAO;MAETC,CAAA,GAAW,CAAC,CAACc,CAAA,CAAG,IAChBb,CAAA,GAAS,CAAC,CAACa,CAAA,CAAG,EAChB;IAAA,OACEf,CAAA,GAAOC,CAAA,GAAWC,CAAA,GAAS;EAAA;AAE/B;AAEA,IAAIqB,CAAA,GAAuB;IAOzBC,EAAA,EAAI,SAAAA,CAAA,EAAY;MACd,OAAOf,CAAA,EAAU,IAAKf,CACxB;IAAA;IAQA+B,mBAAA,EAAqB,SAAAA,CAAA,EAAY;MAC/B,OAAOhB,CAAA,EAAU,IAAKV,CAAA,GAAmBL,CAC3C;IAAA;IAOAgC,IAAA,EAAM,SAAAA,CAAA,EAAY;MAChB,OAAOH,CAAA,CAAqBC,EAAA,EAAG,IAAKpB,CACtC;IAAA;IAQAuB,OAAA,EAAS,SAAAA,CAAA,EAAY;MACnB,OAAOlB,CAAA,EAAU,IAAKd,CACxB;IAAA;IAQAiC,KAAA,EAAO,SAAAA,CAAA,EAAY;MACjB,OAAOnB,CAAA,EAAU,IAAKb,CACxB;IAAA;IAQAiC,MAAA,EAAQ,SAAAA,CAAA,EAAY;MAClB,OAAOpB,CAAA,EAAU,IAAKZ,CACxB;IAAA;IAMAiC,MAAA,EAAQ,SAAAA,CAAA,EAAY;MAClB,OAAOP,CAAA,CAAqBM,MAAA,EAC9B;IAAA;IAQAE,MAAA,EAAQ,SAAAA,CAAA,EAAY;MAClB,OAAOtB,CAAA,EAAU,IAAKX,CACxB;IAAA;IAOAkC,OAAA,EAAS,SAAAA,CAAA,EAAY;MACnB,OAAOvB,CAAA,EAAU,IAAKR,CACxB;IAAA;IAQAgC,GAAA,EAAK,SAAAA,CAAA,EAAY;MACf,OAAOxB,CAAA,EAAU,IAAKT,CACxB;IAAA;IAOAkC,KAAA,EAAO,SAAAA,CAAA,EAAY;MACjB,OAAOzB,CAAA,EAAU,IAAKP,CACxB;IAAA;IAQAiC,MAAA,EAAQ,SAAAA,CAAA,EAAY;MAClB,OAAO1B,CAAA,EAAU,IAAKJ,CACxB;IAAA;IAEA+B,MAAA,EAAQ,SAAAA,CAAA,EAAY;MAClB,OAAO3B,CAAA,EAAU,IAAKJ,CAAA,IAAWC,CAAA,IAASH,CAAA,IAAYK,CACxD;IAAA;IAEA6B,SAAA,EAAW,SAAAA,CAAA,EAAY;MAErB,OAAO5B,CAAA,EAAU,IAAKF,CACxB;IAAA;IAEA+B,OAAA,EAAS,SAAAA,CAAA,EAAY;MACnB,OAAO7B,CAAA,EAAU,IAAKN,CACxB;IAAA;IAEAoC,IAAA,EAAM,SAAAA,CAAA,EAAY;MAChB,OAAO9B,CAAA,EAAU,IAAKH,CACxB;IAAA;EACF;EAEOkC,CAAA,GAAQjB,CAAA;AC5Qf,IAAIkB,CAAA,GAAY,CAAC,EACf,OAAOC,MAAA,GAAW,OAClBA,MAAA,CAAOxB,QAAA,IACPwB,MAAA,CAAOxB,QAAA,CAASyB,aAAA;EASdC,CAAA,GAAuB;IACzBC,SAAA,EAAWJ,CAAA;IAEXK,aAAA,EAAe,OAAOC,MAAA,GAAW;IAEjCC,oBAAA,EACEP,CAAA,IAAa,CAAC,EAAEC,MAAA,CAAOO,gBAAA,IAAoBP,MAAA,CAAOQ,WAAA;IAEpDC,cAAA,EAAgBV,CAAA,IAAa,CAAC,CAACC,MAAA,CAAOU,MAAA;IAEtCC,UAAA,EAAY,CAACZ;EACf;EAEOa,CAAA,GAAQV,CAAA;ACzBf,IAAIW,CAAA;AACJD,CAAI,CAAqBT,SAAA,KACvBU,CAAA,GACErC,QAAA,CAASsC,cAAA,IACTtC,QAAA,CAASsC,cAAA,CAAeC,UAAA,IAGxBvC,QAAA,CAASsC,cAAA,CAAeC,UAAA,CAAW,IAAI,EAAE,MAAM;AAGnD,SAcAC,EAA0BhD,CAAA,EAAiBG,CAAA,EAAS;EAClD,IACE,CAACyC,CAAA,CAAqBT,SAAA,IACrBhC,CAAA,IAAW,EAAE,sBAAsBK,QAAA,GAEpC,OAAO;EAGT,IAAIH,CAAA,GAAY,OAAOL,CAAA;IACnBU,CAAA,IAAcL,CAAA,IAAaG,QAAA;EAE/B,IAAI,CAACE,CAAA,EAAa;IAChB,IAAIC,CAAA,GAAUH,QAAA,CAASyB,aAAA,CAAc,KAAK;IAC1CtB,CAAA,CAAQsC,YAAA,CAAa5C,CAAA,EAAW,SAAS,GACzCK,CAAA,GAAc,OAAOC,CAAA,CAAQN,CAAA,KAAe,UAC9C;EAAA;EAEA,OAAI,CAACK,CAAA,IAAemC,CAAA,IAAiB7C,CAAA,KAAoB,YAEvDU,CAAA,GAAcF,QAAA,CAASsC,cAAA,CAAeC,UAAA,CAAW,gBAAgB,KAAK,IAGjErC,CACT;AAAA;AAEA,IAAOwC,CAAA,GAAQF,CAAA;AC7Cf,IAAIG,CAAA,GAAa;EACbC,CAAA,GAAc;EACdC,CAAA,GAAc;AAsGlB,SAAAC,EAAmCtD,CAAA,EAAkB;EACnD,IAAIG,CAAA,GAAK;IACPE,CAAA,GAAK;IACLK,CAAA,GAAK;IACLC,CAAA,GAAK;EAGP,OAAI,YAAYX,CAAA,KACdK,CAAA,GAAKL,CAAA,CAAMuD,MAAA,GAET,gBAAgBvD,CAAA,KAClBK,CAAA,GAAK,CAACL,CAAA,CAAMwD,UAAA,GAAa,MAEvB,iBAAiBxD,CAAA,KACnBK,CAAA,GAAK,CAACL,CAAA,CAAMyD,WAAA,GAAc,MAExB,iBAAiBzD,CAAA,KACnBG,CAAA,GAAK,CAACH,CAAA,CAAM0D,WAAA,GAAc,MAIxB,UAAU1D,CAAA,IAASA,CAAA,CAAM2D,IAAA,KAAS3D,CAAA,CAAM4D,eAAA,KAC1CzD,CAAA,GAAKE,CAAA,EACLA,CAAA,GAAK,IAGPK,CAAA,GAAKP,CAAA,GAAKgD,CAAA,EACVxC,CAAA,GAAKN,CAAA,GAAK8C,CAAA,EAEN,YAAYnD,CAAA,KACdW,CAAA,GAAKX,CAAA,CAAM6D,MAAA,GAET,YAAY7D,CAAA,KACdU,CAAA,GAAKV,CAAA,CAAM8D,MAAA,GAGR,CAAApD,CAAA,IAAMC,CAAA,KAAOX,CAAA,CAAM+D,SAAA,KAClB/D,CAAA,CAAM+D,SAAA,IAAa,KAErBrD,CAAA,IAAM0C,CAAA,EACNzC,CAAA,IAAMyC,CAAA,KAGN1C,CAAA,IAAM2C,CAAA,EACN1C,CAAA,IAAM0C,CAAA,IAKN3C,CAAA,IAAM,CAACP,CAAA,KACTA,CAAA,GAAKO,CAAA,GAAK,IAAI,KAAK,IAEjBC,CAAA,IAAM,CAACN,CAAA,KACTA,CAAA,GAAKM,CAAA,GAAK,IAAI,KAAK,IAGd;IAAEqD,KAAA,EAAO7D,CAAA;IAAI8D,KAAA,EAAO5D,CAAA;IAAI6D,MAAA,EAAQxD,CAAA;IAAIyD,MAAA,EAAQxD;EAAG,CACxD;AAAA;AAOA2C,CAAA,CAAec,YAAA,GAAe,YAAuB;EACnD,OAAOtC,CAAA,CAAqBb,OAAA,EAAQ,GAChC,mBACAiC,CAAA,CAAiB,OAAO,IACxB,UACA,YACN;AAAA;AAEA,IAAOmB,CAAA,GAAQf,CAAA;AAAA,SAAAe,CAAA,IAAAC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}