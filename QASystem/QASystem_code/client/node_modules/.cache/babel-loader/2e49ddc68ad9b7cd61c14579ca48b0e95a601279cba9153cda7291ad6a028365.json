{"ast":null,"code":"import { defineComponent, shallowRef, openBlock, createElementBlock, normalizeClass, unref, withKeys, withModifiers, createBlock, withCtx, renderSlot, createElementVNode } from 'vue';\nimport { isObject } from '@vue/shared';\nimport { cloneDeep } from 'lodash-unified';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../form/index.mjs';\nimport UploadDragger from './upload-dragger2.mjs';\nimport { uploadContentProps } from './upload-content.mjs';\nimport { genFileId } from './upload.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { entriesOf } from '../../../utils/objects.mjs';\nconst _hoisted_1 = [\"onKeydown\"];\nconst _hoisted_2 = [\"name\", \"multiple\", \"accept\"];\nconst __default__ = defineComponent({\n  name: \"ElUploadContent\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: uploadContentProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"upload\");\n    const disabled = useFormDisabled();\n    const requests = shallowRef({});\n    const inputRef = shallowRef();\n    const uploadFiles = files => {\n      if (files.length === 0) return;\n      const {\n        autoUpload,\n        limit,\n        fileList,\n        multiple,\n        onStart,\n        onExceed\n      } = props;\n      if (limit && fileList.length + files.length > limit) {\n        onExceed(files, fileList);\n        return;\n      }\n      if (!multiple) {\n        files = files.slice(0, 1);\n      }\n      for (const file of files) {\n        const rawFile = file;\n        rawFile.uid = genFileId();\n        onStart(rawFile);\n        if (autoUpload) upload(rawFile);\n      }\n    };\n    const upload = async rawFile => {\n      inputRef.value.value = \"\";\n      if (!props.beforeUpload) {\n        return doUpload(rawFile);\n      }\n      let hookResult;\n      let beforeData = {};\n      try {\n        const beforeUploadPromise = props.beforeUpload(rawFile);\n        beforeData = isObject(props.data) ? cloneDeep(props.data) : props.data;\n        hookResult = await beforeUploadPromise;\n      } catch (e) {\n        hookResult = false;\n      }\n      if (hookResult === false) {\n        props.onRemove(rawFile);\n        return;\n      }\n      let file = rawFile;\n      if (hookResult instanceof Blob) {\n        if (hookResult instanceof File) {\n          file = hookResult;\n        } else {\n          file = new File([hookResult], rawFile.name, {\n            type: rawFile.type\n          });\n        }\n      }\n      doUpload(Object.assign(file, {\n        uid: rawFile.uid\n      }), beforeData);\n    };\n    const doUpload = (rawFile, beforeData) => {\n      const {\n        headers,\n        data,\n        method,\n        withCredentials,\n        name: filename,\n        action,\n        onProgress,\n        onSuccess,\n        onError,\n        httpRequest\n      } = props;\n      const {\n        uid\n      } = rawFile;\n      const options = {\n        headers: headers || {},\n        withCredentials,\n        file: rawFile,\n        data: beforeData != null ? beforeData : data,\n        method,\n        filename,\n        action,\n        onProgress: evt => {\n          onProgress(evt, rawFile);\n        },\n        onSuccess: res => {\n          onSuccess(res, rawFile);\n          delete requests.value[uid];\n        },\n        onError: err => {\n          onError(err, rawFile);\n          delete requests.value[uid];\n        }\n      };\n      const request = httpRequest(options);\n      requests.value[uid] = request;\n      if (request instanceof Promise) {\n        request.then(options.onSuccess, options.onError);\n      }\n    };\n    const handleChange = e => {\n      const files = e.target.files;\n      if (!files) return;\n      uploadFiles(Array.from(files));\n    };\n    const handleClick = () => {\n      if (!disabled.value) {\n        inputRef.value.value = \"\";\n        inputRef.value.click();\n      }\n    };\n    const handleKeydown = () => {\n      handleClick();\n    };\n    const abort = file => {\n      const _reqs = entriesOf(requests.value).filter(file ? ([uid]) => String(file.uid) === uid : () => true);\n      _reqs.forEach(([uid, req]) => {\n        if (req instanceof XMLHttpRequest) req.abort();\n        delete requests.value[uid];\n      });\n    };\n    expose({\n      abort,\n      upload\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([unref(ns).b(), unref(ns).m(_ctx.listType), unref(ns).is(\"drag\", _ctx.drag)]),\n        tabindex: \"0\",\n        onClick: handleClick,\n        onKeydown: withKeys(withModifiers(handleKeydown, [\"self\"]), [\"enter\", \"space\"])\n      }, [_ctx.drag ? (openBlock(), createBlock(UploadDragger, {\n        key: 0,\n        disabled: unref(disabled),\n        onFile: uploadFiles\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"disabled\"])) : renderSlot(_ctx.$slots, \"default\", {\n        key: 1\n      }), createElementVNode(\"input\", {\n        ref_key: \"inputRef\",\n        ref: inputRef,\n        class: normalizeClass(unref(ns).e(\"input\")),\n        name: _ctx.name,\n        multiple: _ctx.multiple,\n        accept: _ctx.accept,\n        type: \"file\",\n        onChange: handleChange,\n        onClick: _cache[0] || (_cache[0] = withModifiers(() => {}, [\"stop\"]))\n      }, null, 42, _hoisted_2)], 42, _hoisted_1);\n    };\n  }\n});\nvar UploadContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-content.vue\"]]);\nexport { UploadContent as default };","map":{"version":3,"names":["name","inheritAttrs","ns","useNamespace","disabled","useFormDisabled","requests","shallowRef","inputRef","uploadFiles","files","length","autoUpload","limit","fileList","multiple","onStart","onExceed","props","slice","file","rawFile","uid","genFileId","upload","value","beforeUpload","doUpload","hookResult","beforeData","beforeUploadPromise","isObject","data","cloneDeep","e","onRemove","Blob","File","type","Object","assign","headers","method","withCredentials","filename","action","onProgress","onSuccess","onError","httpRequest","options","evt","res","err","request","Promise","then","handleChange","target","Array","from","handleClick","click","handleKeydown","abort","_reqs","entriesOf","filter","String","forEach","req","XMLHttpRequest","expose"],"sources":["../../../../../../packages/components/upload/src/upload-content.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b(), ns.m(listType), ns.is('drag', drag)]\"\n    tabindex=\"0\"\n    @click=\"handleClick\"\n    @keydown.self.enter.space=\"handleKeydown\"\n  >\n    <template v-if=\"drag\">\n      <upload-dragger :disabled=\"disabled\" @file=\"uploadFiles\">\n        <slot />\n      </upload-dragger>\n    </template>\n    <template v-else>\n      <slot />\n    </template>\n    <input\n      ref=\"inputRef\"\n      :class=\"ns.e('input')\"\n      :name=\"name\"\n      :multiple=\"multiple\"\n      :accept=\"accept\"\n      type=\"file\"\n      @change=\"handleChange\"\n      @click.stop\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { shallowRef } from 'vue'\nimport { isObject } from '@vue/shared'\nimport { cloneDeep } from 'lodash-unified'\nimport { useNamespace } from '@element-plus/hooks'\nimport { entriesOf } from '@element-plus/utils'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport UploadDragger from './upload-dragger.vue'\nimport { uploadContentProps } from './upload-content'\nimport { genFileId } from './upload'\nimport type { UploadContentProps } from './upload-content'\n\nimport type {\n  UploadFile,\n  UploadHooks,\n  UploadRawFile,\n  UploadRequestOptions,\n} from './upload'\n\ndefineOptions({\n  name: 'ElUploadContent',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(uploadContentProps)\nconst ns = useNamespace('upload')\nconst disabled = useFormDisabled()\n\nconst requests = shallowRef<Record<string, XMLHttpRequest | Promise<unknown>>>(\n  {}\n)\nconst inputRef = shallowRef<HTMLInputElement>()\n\nconst uploadFiles = (files: File[]) => {\n  if (files.length === 0) return\n\n  const { autoUpload, limit, fileList, multiple, onStart, onExceed } = props\n\n  if (limit && fileList.length + files.length > limit) {\n    onExceed(files, fileList)\n    return\n  }\n\n  if (!multiple) {\n    files = files.slice(0, 1)\n  }\n\n  for (const file of files) {\n    const rawFile = file as UploadRawFile\n    rawFile.uid = genFileId()\n    onStart(rawFile)\n    if (autoUpload) upload(rawFile)\n  }\n}\n\nconst upload = async (rawFile: UploadRawFile) => {\n  inputRef.value!.value = ''\n\n  if (!props.beforeUpload) {\n    return doUpload(rawFile)\n  }\n\n  let hookResult: Exclude<ReturnType<UploadHooks['beforeUpload']>, Promise<any>>\n  let beforeData: UploadContentProps['data'] = {}\n\n  try {\n    const beforeUploadPromise = props.beforeUpload(rawFile)\n    beforeData = isObject(props.data) ? cloneDeep(props.data) : props.data\n    hookResult = await beforeUploadPromise\n  } catch {\n    hookResult = false\n  }\n\n  if (hookResult === false) {\n    props.onRemove(rawFile)\n    return\n  }\n\n  let file: File = rawFile\n  if (hookResult instanceof Blob) {\n    if (hookResult instanceof File) {\n      file = hookResult\n    } else {\n      file = new File([hookResult], rawFile.name, {\n        type: rawFile.type,\n      })\n    }\n  }\n\n  doUpload(\n    Object.assign(file, {\n      uid: rawFile.uid,\n    }),\n    beforeData\n  )\n}\n\nconst doUpload = (\n  rawFile: UploadRawFile,\n  beforeData?: UploadContentProps['data']\n) => {\n  const {\n    headers,\n    data,\n    method,\n    withCredentials,\n    name: filename,\n    action,\n    onProgress,\n    onSuccess,\n    onError,\n    httpRequest,\n  } = props\n\n  const { uid } = rawFile\n  const options: UploadRequestOptions = {\n    headers: headers || {},\n    withCredentials,\n    file: rawFile,\n    data: beforeData ?? data,\n    method,\n    filename,\n    action,\n    onProgress: (evt) => {\n      onProgress(evt, rawFile)\n    },\n    onSuccess: (res) => {\n      onSuccess(res, rawFile)\n      delete requests.value[uid]\n    },\n    onError: (err) => {\n      onError(err, rawFile)\n      delete requests.value[uid]\n    },\n  }\n  const request = httpRequest(options)\n  requests.value[uid] = request\n  if (request instanceof Promise) {\n    request.then(options.onSuccess, options.onError)\n  }\n}\n\nconst handleChange = (e: Event) => {\n  const files = (e.target as HTMLInputElement).files\n  if (!files) return\n  uploadFiles(Array.from(files))\n}\n\nconst handleClick = () => {\n  if (!disabled.value) {\n    inputRef.value!.value = ''\n    inputRef.value!.click()\n  }\n}\n\nconst handleKeydown = () => {\n  handleClick()\n}\n\nconst abort = (file?: UploadFile) => {\n  const _reqs = entriesOf(requests.value).filter(\n    file ? ([uid]) => String(file.uid) === uid : () => true\n  )\n  _reqs.forEach(([uid, req]) => {\n    if (req instanceof XMLHttpRequest) req.abort()\n    delete requests.value[uid]\n  })\n}\n\ndefineExpose({\n  abort,\n  upload,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}