{"ast":null,"code":"import { getCurrentInstance, shallowRef, ref, onMounted, watch, computed } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { draggable } from '../utils/draggable.mjs';\nimport { getClientXY } from '../../../../utils/dom/position.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../../utils/dom/style.mjs';\nconst useAlphaSlider = props => {\n  const instance = getCurrentInstance();\n  const thumb = shallowRef();\n  const bar = shallowRef();\n  function handleClick(event) {\n    const target = event.target;\n    if (target !== thumb.value) {\n      handleDrag(event);\n    }\n  }\n  function handleDrag(event) {\n    if (!bar.value || !thumb.value) return;\n    const el = instance.vnode.el;\n    const rect = el.getBoundingClientRect();\n    const {\n      clientX,\n      clientY\n    } = getClientXY(event);\n    if (!props.vertical) {\n      let left = clientX - rect.left;\n      left = Math.max(thumb.value.offsetWidth / 2, left);\n      left = Math.min(left, rect.width - thumb.value.offsetWidth / 2);\n      props.color.set(\"alpha\", Math.round((left - thumb.value.offsetWidth / 2) / (rect.width - thumb.value.offsetWidth) * 100));\n    } else {\n      let top = clientY - rect.top;\n      top = Math.max(thumb.value.offsetHeight / 2, top);\n      top = Math.min(top, rect.height - thumb.value.offsetHeight / 2);\n      props.color.set(\"alpha\", Math.round((top - thumb.value.offsetHeight / 2) / (rect.height - thumb.value.offsetHeight) * 100));\n    }\n  }\n  return {\n    thumb,\n    bar,\n    handleDrag,\n    handleClick\n  };\n};\nconst useAlphaSliderDOM = (props, {\n  bar,\n  thumb,\n  handleDrag\n}) => {\n  const instance = getCurrentInstance();\n  const ns = useNamespace(\"color-alpha-slider\");\n  const thumbLeft = ref(0);\n  const thumbTop = ref(0);\n  const background = ref();\n  function getThumbLeft() {\n    if (!thumb.value) return 0;\n    if (props.vertical) return 0;\n    const el = instance.vnode.el;\n    const alpha = props.color.get(\"alpha\");\n    if (!el) return 0;\n    return Math.round(alpha * (el.offsetWidth - thumb.value.offsetWidth / 2) / 100);\n  }\n  function getThumbTop() {\n    if (!thumb.value) return 0;\n    const el = instance.vnode.el;\n    if (!props.vertical) return 0;\n    const alpha = props.color.get(\"alpha\");\n    if (!el) return 0;\n    return Math.round(alpha * (el.offsetHeight - thumb.value.offsetHeight / 2) / 100);\n  }\n  function getBackground() {\n    if (props.color && props.color.value) {\n      const {\n        r,\n        g,\n        b\n      } = props.color.toRgb();\n      return `linear-gradient(to right, rgba(${r}, ${g}, ${b}, 0) 0%, rgba(${r}, ${g}, ${b}, 1) 100%)`;\n    }\n    return \"\";\n  }\n  function update() {\n    thumbLeft.value = getThumbLeft();\n    thumbTop.value = getThumbTop();\n    background.value = getBackground();\n  }\n  onMounted(() => {\n    if (!bar.value || !thumb.value) return;\n    const dragConfig = {\n      drag: event => {\n        handleDrag(event);\n      },\n      end: event => {\n        handleDrag(event);\n      }\n    };\n    draggable(bar.value, dragConfig);\n    draggable(thumb.value, dragConfig);\n    update();\n  });\n  watch(() => props.color.get(\"alpha\"), () => update());\n  watch(() => props.color.value, () => update());\n  const rootKls = computed(() => [ns.b(), ns.is(\"vertical\", props.vertical)]);\n  const barKls = computed(() => ns.e(\"bar\"));\n  const thumbKls = computed(() => ns.e(\"thumb\"));\n  const barStyle = computed(() => ({\n    background: background.value\n  }));\n  const thumbStyle = computed(() => ({\n    left: addUnit(thumbLeft.value),\n    top: addUnit(thumbTop.value)\n  }));\n  return {\n    rootKls,\n    barKls,\n    barStyle,\n    thumbKls,\n    thumbStyle,\n    update\n  };\n};\nexport { useAlphaSlider, useAlphaSliderDOM };","map":{"version":3,"names":["useAlphaSlider","props","instance","getCurrentInstance","thumb","shallowRef","bar","handleClick","event","target","value","handleDrag","el","vnode","rect","getBoundingClientRect","clientX","clientY","getClientXY","vertical","left","Math","max","offsetWidth","min","width","color","set","round","top","offsetHeight","height","useAlphaSliderDOM","ns","useNamespace","thumbLeft","ref","thumbTop","background","getThumbLeft","alpha","get","getThumbTop","getBackground","r","g","b","toRgb","update","onMounted","dragConfig","drag","end","draggable","watch","rootKls","computed","is","barKls","e","thumbKls","barStyle","thumbStyle","addUnit"],"sources":["../../../../../../../packages/components/color-picker/src/composables/use-alpha-slider.ts"],"sourcesContent":["import {\n  computed,\n  getCurrentInstance,\n  onMounted,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { addUnit, getClientXY } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { draggable } from '../utils/draggable'\n\nimport type { AlphaSliderProps } from '../props/alpha-slider'\n\nexport const useAlphaSlider = (props: AlphaSliderProps) => {\n  const instance = getCurrentInstance()!\n\n  const thumb = shallowRef<HTMLElement>()\n  const bar = shallowRef<HTMLElement>()\n\n  function handleClick(event: MouseEvent | TouchEvent) {\n    const target = event.target\n\n    if (target !== thumb.value) {\n      handleDrag(event)\n    }\n  }\n\n  function handleDrag(event: MouseEvent | TouchEvent) {\n    if (!bar.value || !thumb.value) return\n\n    const el = instance.vnode.el as HTMLElement\n    const rect = el.getBoundingClientRect()\n    const { clientX, clientY } = getClientXY(event)\n\n    if (!props.vertical) {\n      let left = clientX - rect.left\n      left = Math.max(thumb.value.offsetWidth / 2, left)\n      left = Math.min(left, rect.width - thumb.value.offsetWidth / 2)\n\n      props.color.set(\n        'alpha',\n        Math.round(\n          ((left - thumb.value.offsetWidth / 2) /\n            (rect.width - thumb.value.offsetWidth)) *\n            100\n        )\n      )\n    } else {\n      let top = clientY - rect.top\n      top = Math.max(thumb.value.offsetHeight / 2, top)\n      top = Math.min(top, rect.height - thumb.value.offsetHeight / 2)\n\n      props.color.set(\n        'alpha',\n        Math.round(\n          ((top - thumb.value.offsetHeight / 2) /\n            (rect.height - thumb.value.offsetHeight)) *\n            100\n        )\n      )\n    }\n  }\n\n  return {\n    thumb,\n    bar,\n    handleDrag,\n    handleClick,\n  }\n}\n\nexport const useAlphaSliderDOM = (\n  props: AlphaSliderProps,\n  {\n    bar,\n    thumb,\n    handleDrag,\n  }: Pick<ReturnType<typeof useAlphaSlider>, 'bar' | 'thumb' | 'handleDrag'>\n) => {\n  const instance = getCurrentInstance()!\n\n  const ns = useNamespace('color-alpha-slider')\n  // refs\n\n  const thumbLeft = ref(0)\n  const thumbTop = ref(0)\n  const background = ref<string>()\n\n  function getThumbLeft() {\n    if (!thumb.value) return 0\n\n    if (props.vertical) return 0\n    const el = instance.vnode.el\n    const alpha = props.color.get('alpha')\n\n    if (!el) return 0\n    return Math.round(\n      (alpha * (el.offsetWidth - thumb.value.offsetWidth / 2)) / 100\n    )\n  }\n\n  function getThumbTop() {\n    if (!thumb.value) return 0\n\n    const el = instance.vnode.el\n    if (!props.vertical) return 0\n    const alpha = props.color.get('alpha')\n\n    if (!el) return 0\n    return Math.round(\n      (alpha * (el.offsetHeight - thumb.value.offsetHeight / 2)) / 100\n    )\n  }\n\n  function getBackground() {\n    if (props.color && props.color.value) {\n      const { r, g, b } = props.color.toRgb()\n      return `linear-gradient(to right, rgba(${r}, ${g}, ${b}, 0) 0%, rgba(${r}, ${g}, ${b}, 1) 100%)`\n    }\n    return ''\n  }\n\n  function update() {\n    thumbLeft.value = getThumbLeft()\n    thumbTop.value = getThumbTop()\n    background.value = getBackground()\n  }\n\n  onMounted(() => {\n    if (!bar.value || !thumb.value) return\n\n    const dragConfig = {\n      drag: (event: MouseEvent | TouchEvent) => {\n        handleDrag(event)\n      },\n      end: (event: MouseEvent | TouchEvent) => {\n        handleDrag(event)\n      },\n    }\n\n    draggable(bar.value, dragConfig)\n    draggable(thumb.value, dragConfig)\n    update()\n  })\n\n  watch(\n    () => props.color.get('alpha'),\n    () => update()\n  )\n  watch(\n    () => props.color.value,\n    () => update()\n  )\n\n  const rootKls = computed(() => [ns.b(), ns.is('vertical', props.vertical)])\n  const barKls = computed(() => ns.e('bar'))\n  const thumbKls = computed(() => ns.e('thumb'))\n  const barStyle = computed(() => ({ background: background.value }))\n  const thumbStyle = computed(() => ({\n    left: addUnit(thumbLeft.value),\n    top: addUnit(thumbTop.value),\n  }))\n\n  return { rootKls, barKls, barStyle, thumbKls, thumbStyle, update }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}