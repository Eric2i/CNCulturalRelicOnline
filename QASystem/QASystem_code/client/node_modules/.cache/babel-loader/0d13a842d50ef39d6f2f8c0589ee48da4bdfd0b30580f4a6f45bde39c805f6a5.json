{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, watch, nextTick, provide, createVNode, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Plus } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { tabsRootContextKey } from './constants.mjs';\nimport TabNav from './tab-nav.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber } from '@vueuse/core';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useOrderedChildren } from '../../../hooks/use-ordered-children/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst tabsProps = buildProps({\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    default: \"\"\n  },\n  activeName: {\n    type: [String, Number]\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number]\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: [\"top\", \"right\", \"bottom\", \"left\"],\n    default: \"top\"\n  },\n  beforeLeave: {\n    type: definePropType(Function),\n    default: () => true\n  },\n  stretch: Boolean\n});\nconst isPaneName = value => isString(value) || isNumber(value);\nconst tabsEmits = {\n  [UPDATE_MODEL_EVENT]: name => isPaneName(name),\n  tabClick: (pane, ev) => ev instanceof Event,\n  tabChange: name => isPaneName(name),\n  edit: (paneName, action) => [\"remove\", \"add\"].includes(action),\n  tabRemove: name => isPaneName(name),\n  tabAdd: () => true\n};\nvar Tabs = defineComponent({\n  name: \"ElTabs\",\n  props: tabsProps,\n  emits: tabsEmits,\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    var _a, _b;\n    const ns = useNamespace(\"tabs\");\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane\n    } = useOrderedChildren(getCurrentInstance(), \"ElTabPane\");\n    const nav$ = ref();\n    const currentName = ref((_b = (_a = props.modelValue) != null ? _a : props.activeName) != null ? _b : \"0\");\n    const changeCurrentName = value => {\n      currentName.value = value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(\"tabChange\", value);\n    };\n    const setCurrentName = async value => {\n      var _a2, _b2, _c;\n      if (currentName.value === value || isUndefined(value)) return;\n      try {\n        const canLeave = await ((_a2 = props.beforeLeave) == null ? void 0 : _a2.call(props, value, currentName.value));\n        if (canLeave !== false) {\n          changeCurrentName(value);\n          (_c = (_b2 = nav$.value) == null ? void 0 : _b2.removeFocus) == null ? void 0 : _c.call(_b2);\n        }\n      } catch (e) {}\n    };\n    const handleTabClick = (tab, tabName, event) => {\n      if (tab.props.disabled) return;\n      setCurrentName(tabName);\n      emit(\"tabClick\", tab, event);\n    };\n    const handleTabRemove = (pane, ev) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return;\n      ev.stopPropagation();\n      emit(\"edit\", pane.props.name, \"remove\");\n      emit(\"tabRemove\", pane.props.name);\n    };\n    const handleTabAdd = () => {\n      emit(\"edit\", void 0, \"add\");\n      emit(\"tabAdd\");\n    };\n    useDeprecated({\n      from: '\"activeName\"',\n      replacement: '\"model-value\" or \"v-model\"',\n      scope: \"ElTabs\",\n      version: \"2.3.0\",\n      ref: \"https://element-plus.org/en-US/component/tabs.html#attributes\",\n      type: \"Attribute\"\n    }, computed(() => !!props.activeName));\n    watch(() => props.activeName, modelValue => setCurrentName(modelValue));\n    watch(() => props.modelValue, modelValue => setCurrentName(modelValue));\n    watch(currentName, async () => {\n      var _a2;\n      await nextTick();\n      (_a2 = nav$.value) == null ? void 0 : _a2.scrollToActiveTab();\n    });\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane\n    });\n    expose({\n      currentName\n    });\n    return () => {\n      const newButton = props.editable || props.addable ? createVNode(\"span\", {\n        \"class\": ns.e(\"new-tab\"),\n        \"tabindex\": \"0\",\n        \"onClick\": handleTabAdd,\n        \"onKeydown\": ev => {\n          if (ev.code === EVENT_CODE.enter) handleTabAdd();\n        }\n      }, [createVNode(ElIcon, {\n        \"class\": ns.is(\"icon-plus\")\n      }, {\n        default: () => [createVNode(Plus, null, null)]\n      })]) : null;\n      const header = createVNode(\"div\", {\n        \"class\": [ns.e(\"header\"), ns.is(props.tabPosition)]\n      }, [newButton, createVNode(TabNav, {\n        \"ref\": nav$,\n        \"currentName\": currentName.value,\n        \"editable\": props.editable,\n        \"type\": props.type,\n        \"panes\": panes.value,\n        \"stretch\": props.stretch,\n        \"onTabClick\": handleTabClick,\n        \"onTabRemove\": handleTabRemove\n      }, null)]);\n      const panels = createVNode(\"div\", {\n        \"class\": ns.e(\"content\")\n      }, [renderSlot(slots, \"default\")]);\n      return createVNode(\"div\", {\n        \"class\": [ns.b(), ns.m(props.tabPosition), {\n          [ns.m(\"card\")]: props.type === \"card\",\n          [ns.m(\"border-card\")]: props.type === \"border-card\"\n        }]\n      }, [...(props.tabPosition !== \"bottom\" ? [header, panels] : [panels, header])]);\n    };\n  }\n});\nexport { Tabs as default, tabsEmits, tabsProps };","map":{"version":3,"names":["tabsProps","buildProps","type","String","values","default","activeName","Number","closable","Boolean","addable","modelValue","editable","tabPosition","beforeLeave","definePropType","Function","stretch","tabsEmits","tabClick","pane","ev","Event","tabChange","name","isPaneName","edit","paneName","action","includes","tabRemove","tabAdd","Tabs","defineComponent","props","emits","setup","emit","expose","_a","_b","ns","useNamespace","children","panes","addChild","registerPane","removeChild","unregisterPane","useOrderedChildren","getCurrentInstance","nav$","ref","currentName","changeCurrentName","value","setCurrentName","_a2","_b2","_c","isUndefined","canLeave","call","removeFocus","handleTabClick","tab","tabName","event","disabled","handleTabRemove","stopPropagation","from","replacement","version","computed","watch","nextTick","scrollToActiveTab","provide","tabsRootContextKey","newButton","createVNode","e","handleTabAdd","code","EVENT_CODE","enter","ElIcon","is","Plus","header","TabNav","panels","renderSlot","slots","b","m"],"sources":["../../../../../../packages/components/tabs/src/tabs.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  provide,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport {\n  useDeprecated,\n  useNamespace,\n  useOrderedChildren,\n} from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport TabNav from './tab-nav'\n\nimport type { TabNavInstance } from './tab-nav'\nimport type { TabsPaneContext } from './constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type TabPaneName = string | number\n\nexport const tabsProps = buildProps({\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  activeName: {\n    type: [String, Number],\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number],\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  beforeLeave: {\n    type: definePropType<\n      (newName: TabPaneName, oldName: TabPaneName) => Awaitable<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nconst isPaneName = (value: unknown): value is string | number =>\n  isString(value) || isNumber(value)\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name: TabPaneName) => isPaneName(name),\n  tabClick: (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  tabChange: (name: TabPaneName) => isPaneName(name),\n  edit: (paneName: TabPaneName | undefined, action: 'remove' | 'add') =>\n    ['remove', 'add'].includes(action),\n  tabRemove: (name: TabPaneName) => isPaneName(name),\n  tabAdd: () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nexport type TabsPanes = Record<number, TabsPaneContext>\n\nexport default defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const ns = useNamespace('tabs')\n\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane,\n    } = useOrderedChildren<TabsPaneContext>(getCurrentInstance()!, 'ElTabPane')\n\n    const nav$ = ref<TabNavInstance>()\n    const currentName = ref<TabPaneName>(\n      props.modelValue ?? props.activeName ?? '0'\n    )\n\n    const changeCurrentName = (value: TabPaneName) => {\n      currentName.value = value\n      emit(UPDATE_MODEL_EVENT, value)\n      emit('tabChange', value)\n    }\n\n    const setCurrentName = async (value?: TabPaneName) => {\n      // should do nothing.\n      if (currentName.value === value || isUndefined(value)) return\n\n      try {\n        const canLeave = await props.beforeLeave?.(value, currentName.value)\n        if (canLeave !== false) {\n          changeCurrentName(value)\n\n          // call exposed function, Vue doesn't support expose in typescript yet.\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-expect-error\n          nav$.value?.removeFocus?.()\n        }\n      } catch {}\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: TabPaneName,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName)\n      emit('tabClick', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tabRemove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', undefined, 'add')\n      emit('tabAdd')\n    }\n\n    useDeprecated(\n      {\n        from: '\"activeName\"',\n        replacement: '\"model-value\" or \"v-model\"',\n        scope: 'ElTabs',\n        version: '2.3.0',\n        ref: 'https://element-plus.org/en-US/component/tabs.html#attributes',\n        type: 'Attribute',\n      },\n      computed(() => !!props.activeName)\n    )\n\n    watch(\n      () => props.activeName,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      await nextTick()\n      // call exposed function, Vue doesn't support expose in typescript yet.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      nav$.value?.scrollToActiveTab()\n    })\n\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane,\n    })\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const newButton =\n        props.editable || props.addable ? (\n          <span\n            class={ns.e('new-tab')}\n            tabindex=\"0\"\n            onClick={handleTabAdd}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (ev.code === EVENT_CODE.enter) handleTabAdd()\n            }}\n          >\n            <ElIcon class={ns.is('icon-plus')}>\n              <Plus />\n            </ElIcon>\n          </span>\n        ) : null\n\n      const header = (\n        <div class={[ns.e('header'), ns.is(props.tabPosition)]}>\n          {newButton}\n          <TabNav\n            ref={nav$}\n            currentName={currentName.value}\n            editable={props.editable}\n            type={props.type}\n            panes={panes.value}\n            stretch={props.stretch}\n            onTabClick={handleTabClick}\n            onTabRemove={handleTabRemove}\n          />\n        </div>\n      )\n\n      const panels = (\n        <div class={ns.e('content')}>{renderSlot(slots, 'default')}</div>\n      )\n\n      return (\n        <div\n          class={[\n            ns.b(),\n            ns.m(props.tabPosition),\n            {\n              [ns.m('card')]: props.type === 'card',\n              [ns.m('border-card')]: props.type === 'border-card',\n            },\n          ]}\n        >\n          {...props.tabPosition !== 'bottom'\n            ? [header, panels]\n            : [panels, header]}\n        </div>\n      )\n    }\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}