{"ast":null,"code":"import { createVNode, mergeProps } from 'vue';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ArrowRight } from '@element-plus/icons-vue';\nconst ExpandIcon = props => {\n  const {\n    expanded,\n    expandable,\n    onExpand,\n    style,\n    size\n  } = props;\n  const expandIconProps = {\n    onClick: expandable ? () => onExpand(!expanded) : void 0,\n    class: props.class\n  };\n  return createVNode(ElIcon, mergeProps(expandIconProps, {\n    \"size\": size,\n    \"style\": style\n  }), {\n    default: () => [createVNode(ArrowRight, null, null)]\n  });\n};\nexport { ExpandIcon as default };","map":{"version":3,"names":["expanded","expandable","onExpand","style","size","props","expandIconProps","onClick","class","createVNode","ElIcon","mergeProps","default","ArrowRight"],"sources":["../../../../../../../packages/components/table-v2/src/components/expand-icon.tsx"],"sourcesContent":["import ElIcon from '@element-plus/components/icon'\nimport { ArrowRight } from '@element-plus/icons-vue'\n\nimport type { StyleValue } from 'vue'\nimport type { TableV2RowCellRenderParam } from './row'\n\nconst ExpandIcon = (\n  props: TableV2RowCellRenderParam['expandIconProps'] & {\n    class?: string | string[]\n    style: StyleValue\n    size: number\n    expanded: boolean\n    expandable: boolean\n  }\n) => {\n  const { expanded, expandable, onExpand, style, size } = props\n\n  const expandIconProps = {\n    onClick: expandable ? () => onExpand(!expanded) : undefined,\n    class: props.class,\n  } as any\n\n  return (\n    <ElIcon {...expandIconProps} size={size} style={style}>\n      <ArrowRight />\n    </ElIcon>\n  )\n}\n\nexport default ExpandIcon\n\nexport type ExpandIconInstance = ReturnType<typeof ExpandIcon>\n"],"mappings":";;;;EAMM;IASEA,QAAA;IAAEC,UAAF;IAAYC,QAAZ;IAAwBC,KAAxB;IAAkCC;EAAO,IAAAC,KAAA;EAAzC,MAANC,eAAA;IAEAC,OAAA,EAAAN,UAAqB,GAAG,MAAAC,QAAA,EAAAF,QAAA;IACtBQ,KAAO,EAAAH,KAAY,CAAAG;;EADG,OAAxBC,WAAA,CAAAC,MAAA,EAAAC,UAAA,CAAAL,eAAA;IAKA,QAAAF,IAAA;IAAA,SAAAD;IAAA,EACkD;IADlDS,OAAA,EAAAA,CAAA,MAAAH,WAAA,CAAAI,UAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}