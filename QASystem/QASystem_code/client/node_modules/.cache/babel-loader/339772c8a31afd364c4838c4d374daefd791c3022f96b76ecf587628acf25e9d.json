{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isArray } from '@vue/shared';\nconst flattenOptions = options => {\n  const flattened = [];\n  options.forEach(option => {\n    if (isArray(option.options)) {\n      flattened.push({\n        label: option.label,\n        isTitle: true,\n        type: \"Group\"\n      });\n      option.options.forEach(o => {\n        flattened.push(o);\n      });\n      flattened.push({\n        type: \"Group\"\n      });\n    } else {\n      flattened.push(option);\n    }\n  });\n  return flattened;\n};\nexport { flattenOptions };","map":{"version":3,"names":["flattenOptions","options","flattened","forEach","option","isArray","push","label","isTitle","type","o"],"sources":["../../../../../../packages/components/select-v2/src/util.ts"],"sourcesContent":["// @ts-nocheck\nimport { isArray } from '@vue/shared'\n\nimport type { Option, OptionGroup } from './select.types'\n\nexport const flattenOptions = (options: Array<Option | OptionGroup>) => {\n  const flattened = []\n  options.forEach((option) => {\n    if (isArray(option.options)) {\n      flattened.push({\n        label: option.label,\n        isTitle: true,\n        type: 'Group',\n      })\n\n      option.options.forEach((o: Option) => {\n        flattened.push(o)\n      })\n      flattened.push({\n        type: 'Group',\n      })\n    } else {\n      flattened.push(option)\n    }\n  })\n\n  return flattened\n}\n"],"mappings":";;AACY,MAACA,cAAc,GAAIC,OAAO,IAAK;EACzC,MAAMC,SAAS,GAAG,EAAE;EACpBD,OAAO,CAACE,OAAO,CAAEC,MAAM,IAAK;IAC1B,IAAIC,OAAO,CAACD,MAAM,CAACH,OAAO,CAAC,EAAE;MAC3BC,SAAS,CAACI,IAAI,CAAC;QACbC,KAAK,EAAEH,MAAM,CAACG,KAAK;QACnBC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACd,CAAO,CAAC;MACFL,MAAM,CAACH,OAAO,CAACE,OAAO,CAAEO,CAAC,IAAK;QAC5BR,SAAS,CAACI,IAAI,CAACI,CAAC,CAAC;MACzB,CAAO,CAAC;MACFR,SAAS,CAACI,IAAI,CAAC;QACbG,IAAI,EAAE;MACd,CAAO,CAAC;IACR,CAAK,MAAM;MACLP,SAAS,CAACI,IAAI,CAACF,MAAM,CAAC;IAC5B;EACA,CAAG,CAAC;EACF,OAAOF,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}